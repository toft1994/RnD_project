// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_78_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        numOfOutNeurons,
        p_ZL8weights_7_load,
        p_ZL8weights_15_load,
        p_ZL8weights_23_load,
        p_ZL8weights_31_load,
        p_ZL8weights_39_load,
        p_ZL8weights_47_load,
        p_ZL8weights_55_load,
        p_ZL8weights_63_load,
        p_ZL6input_7_load,
        p_ZL8weights_6_load,
        p_ZL8weights_14_load,
        p_ZL8weights_22_load,
        p_ZL8weights_30_load,
        p_ZL8weights_38_load,
        p_ZL8weights_46_load,
        p_ZL8weights_54_load,
        p_ZL8weights_62_load,
        p_ZL6input_6_load,
        p_ZL8weights_5_load,
        p_ZL8weights_13_load,
        p_ZL8weights_21_load,
        p_ZL8weights_29_load,
        p_ZL8weights_37_load,
        p_ZL8weights_45_load,
        p_ZL8weights_53_load,
        p_ZL8weights_61_load,
        p_ZL6input_5_load,
        p_ZL8weights_4_load,
        p_ZL8weights_12_load,
        p_ZL8weights_20_load,
        p_ZL8weights_28_load,
        p_ZL8weights_36_load,
        p_ZL8weights_44_load,
        p_ZL8weights_52_load,
        p_ZL8weights_60_load,
        p_ZL6input_4_load,
        p_ZL8weights_3_load,
        p_ZL8weights_11_load,
        p_ZL8weights_19_load,
        p_ZL8weights_27_load,
        p_ZL8weights_35_load,
        p_ZL8weights_43_load,
        p_ZL8weights_51_load,
        p_ZL8weights_59_load,
        p_ZL6input_3_load,
        p_ZL8weights_2_load,
        p_ZL8weights_10_load,
        p_ZL8weights_18_load,
        p_ZL8weights_26_load,
        p_ZL8weights_34_load,
        p_ZL8weights_42_load,
        p_ZL8weights_50_load,
        p_ZL8weights_58_load,
        p_ZL6input_2_load,
        p_ZL8weights_1_load,
        p_ZL8weights_9_load,
        p_ZL8weights_17_load,
        p_ZL8weights_25_load,
        p_ZL8weights_33_load,
        p_ZL8weights_41_load,
        p_ZL8weights_49_load,
        p_ZL8weights_57_load,
        p_ZL6input_1_load,
        p_ZL8weights_0_load,
        p_ZL8weights_8_load,
        p_ZL8weights_16_load,
        p_ZL8weights_24_load,
        p_ZL8weights_32_load,
        p_ZL8weights_40_load,
        p_ZL8weights_48_load,
        p_ZL8weights_56_load,
        p_ZL6input_0_load,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_q0,
        output_V_address1,
        output_V_ce1,
        output_V_we1,
        output_V_d1,
        output_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] numOfOutNeurons;
input  [15:0] p_ZL8weights_7_load;
input  [15:0] p_ZL8weights_15_load;
input  [15:0] p_ZL8weights_23_load;
input  [15:0] p_ZL8weights_31_load;
input  [15:0] p_ZL8weights_39_load;
input  [15:0] p_ZL8weights_47_load;
input  [15:0] p_ZL8weights_55_load;
input  [15:0] p_ZL8weights_63_load;
input  [15:0] p_ZL6input_7_load;
input  [15:0] p_ZL8weights_6_load;
input  [15:0] p_ZL8weights_14_load;
input  [15:0] p_ZL8weights_22_load;
input  [15:0] p_ZL8weights_30_load;
input  [15:0] p_ZL8weights_38_load;
input  [15:0] p_ZL8weights_46_load;
input  [15:0] p_ZL8weights_54_load;
input  [15:0] p_ZL8weights_62_load;
input  [15:0] p_ZL6input_6_load;
input  [15:0] p_ZL8weights_5_load;
input  [15:0] p_ZL8weights_13_load;
input  [15:0] p_ZL8weights_21_load;
input  [15:0] p_ZL8weights_29_load;
input  [15:0] p_ZL8weights_37_load;
input  [15:0] p_ZL8weights_45_load;
input  [15:0] p_ZL8weights_53_load;
input  [15:0] p_ZL8weights_61_load;
input  [15:0] p_ZL6input_5_load;
input  [15:0] p_ZL8weights_4_load;
input  [15:0] p_ZL8weights_12_load;
input  [15:0] p_ZL8weights_20_load;
input  [15:0] p_ZL8weights_28_load;
input  [15:0] p_ZL8weights_36_load;
input  [15:0] p_ZL8weights_44_load;
input  [15:0] p_ZL8weights_52_load;
input  [15:0] p_ZL8weights_60_load;
input  [15:0] p_ZL6input_4_load;
input  [15:0] p_ZL8weights_3_load;
input  [15:0] p_ZL8weights_11_load;
input  [15:0] p_ZL8weights_19_load;
input  [15:0] p_ZL8weights_27_load;
input  [15:0] p_ZL8weights_35_load;
input  [15:0] p_ZL8weights_43_load;
input  [15:0] p_ZL8weights_51_load;
input  [15:0] p_ZL8weights_59_load;
input  [15:0] p_ZL6input_3_load;
input  [15:0] p_ZL8weights_2_load;
input  [15:0] p_ZL8weights_10_load;
input  [15:0] p_ZL8weights_18_load;
input  [15:0] p_ZL8weights_26_load;
input  [15:0] p_ZL8weights_34_load;
input  [15:0] p_ZL8weights_42_load;
input  [15:0] p_ZL8weights_50_load;
input  [15:0] p_ZL8weights_58_load;
input  [15:0] p_ZL6input_2_load;
input  [15:0] p_ZL8weights_1_load;
input  [15:0] p_ZL8weights_9_load;
input  [15:0] p_ZL8weights_17_load;
input  [15:0] p_ZL8weights_25_load;
input  [15:0] p_ZL8weights_33_load;
input  [15:0] p_ZL8weights_41_load;
input  [15:0] p_ZL8weights_49_load;
input  [15:0] p_ZL8weights_57_load;
input  [15:0] p_ZL6input_1_load;
input  [15:0] p_ZL8weights_0_load;
input  [15:0] p_ZL8weights_8_load;
input  [15:0] p_ZL8weights_16_load;
input  [15:0] p_ZL8weights_24_load;
input  [15:0] p_ZL8weights_32_load;
input  [15:0] p_ZL8weights_40_load;
input  [15:0] p_ZL8weights_48_load;
input  [15:0] p_ZL8weights_56_load;
input  [15:0] p_ZL6input_0_load;
output  [2:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
input  [15:0] output_V_q0;
output  [2:0] output_V_address1;
output   output_V_ce1;
output   output_V_we1;
output  [15:0] output_V_d1;
input  [15:0] output_V_q1;

reg ap_idle;
reg[2:0] output_V_address0;
reg output_V_ce0;
reg output_V_we0;
reg[15:0] output_V_d0;
reg[2:0] output_V_address1;
reg output_V_ce1;
reg output_V_we1;
reg[15:0] output_V_d1;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln78_7_reg_3410;
reg   [0:0] icmp_ln78_6_reg_3390;
reg   [0:0] icmp_ln78_5_reg_3371;
reg   [0:0] icmp_ln78_4_reg_3352;
reg   [0:0] icmp_ln78_3_reg_3332;
reg   [0:0] icmp_ln78_2_reg_3313;
reg   [0:0] icmp_ln78_1_reg_3294;
reg   [0:0] icmp_ln78_reg_3275;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [15:0] reg_707;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_11001;
reg   [15:0] reg_711;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln78_fu_724_p2;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln78_reg_3275_pp0_iter1_reg;
reg   [2:0] output_V_addr_reg_3289;
wire   [0:0] icmp_ln78_1_fu_1017_p2;
reg   [0:0] icmp_ln78_1_reg_3294_pp0_iter1_reg;
wire   [15:0] tmp_s_fu_1028_p66;
reg  signed [15:0] tmp_s_reg_3298;
wire   [15:0] tmp_1_1_fu_1162_p66;
reg  signed [15:0] tmp_1_1_reg_3303;
reg   [2:0] output_V_addr_1_reg_3308;
wire   [0:0] icmp_ln78_2_fu_1302_p2;
reg   [0:0] icmp_ln78_2_reg_3313_pp0_iter1_reg;
wire   [15:0] tmp_2_fu_1313_p66;
reg  signed [15:0] tmp_2_reg_3317;
wire   [15:0] tmp_1_2_fu_1447_p66;
reg  signed [15:0] tmp_1_2_reg_3322;
reg   [2:0] output_V_addr_2_reg_3327;
wire   [0:0] icmp_ln78_3_fu_1587_p2;
reg   [0:0] icmp_ln78_3_reg_3332_pp0_iter1_reg;
wire   [15:0] tmp_3_fu_1598_p66;
reg  signed [15:0] tmp_3_reg_3336;
wire   [15:0] tmp_1_3_fu_1732_p66;
reg  signed [15:0] tmp_1_3_reg_3341;
reg   [2:0] output_V_addr_3_reg_3346;
wire   [0:0] icmp_ln78_4_fu_1872_p2;
reg   [0:0] icmp_ln78_4_reg_3352_pp0_iter1_reg;
wire   [15:0] tmp_4_fu_1883_p66;
reg  signed [15:0] tmp_4_reg_3356;
wire   [15:0] tmp_1_4_fu_2017_p66;
reg  signed [15:0] tmp_1_4_reg_3361;
reg   [2:0] output_V_addr_4_reg_3366;
wire   [0:0] icmp_ln78_5_fu_2157_p2;
reg   [0:0] icmp_ln78_5_reg_3371_pp0_iter1_reg;
wire   [15:0] tmp_5_fu_2168_p66;
reg  signed [15:0] tmp_5_reg_3375;
wire   [15:0] tmp_1_5_fu_2302_p66;
reg  signed [15:0] tmp_1_5_reg_3380;
reg   [2:0] output_V_addr_5_reg_3385;
reg   [2:0] output_V_addr_5_reg_3385_pp0_iter1_reg;
wire   [0:0] icmp_ln78_6_fu_2442_p2;
reg   [0:0] icmp_ln78_6_reg_3390_pp0_iter1_reg;
wire   [15:0] tmp_6_fu_2453_p66;
reg  signed [15:0] tmp_6_reg_3394;
wire   [15:0] tmp_1_6_fu_2587_p66;
reg  signed [15:0] tmp_1_6_reg_3399;
reg   [2:0] output_V_addr_6_reg_3404;
reg   [2:0] output_V_addr_6_reg_3404_pp0_iter1_reg;
wire   [0:0] icmp_ln78_7_fu_2727_p2;
reg   [0:0] icmp_ln78_7_reg_3410_pp0_iter1_reg;
wire   [15:0] tmp_7_fu_2738_p66;
reg  signed [15:0] tmp_7_reg_3414;
wire   [15:0] tmp_1_7_fu_2872_p66;
reg  signed [15:0] tmp_1_7_reg_3419;
reg   [2:0] output_V_addr_7_reg_3424;
reg   [2:0] output_V_addr_7_reg_3424_pp0_iter1_reg;
reg   [15:0] output_V_load_3_reg_3454;
reg   [15:0] trunc_ln_reg_3459;
reg   [15:0] output_V_load_5_reg_3479;
reg   [15:0] output_V_load_7_reg_3499;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
reg   [15:0] trunc_ln717_5_reg_3549;
reg   [15:0] trunc_ln717_6_reg_3559;
reg   [15:0] trunc_ln717_7_reg_3569;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage6_subdone;
reg    ap_condition_exit_pp0_iter1_stage6;
wire   [63:0] zext_ln83_fu_730_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln83_1_fu_1023_p1;
wire   [63:0] zext_ln83_2_fu_1308_p1;
wire   [63:0] zext_ln83_3_fu_1593_p1;
wire   [63:0] zext_ln83_4_fu_1878_p1;
wire   [63:0] zext_ln83_5_fu_2163_p1;
wire   [63:0] zext_ln83_6_fu_2448_p1;
wire   [63:0] zext_ln83_7_fu_2733_p1;
reg   [15:0] inc3740_i_0_fu_198;
wire   [15:0] add_ln78_fu_3006_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_inc3740_i_0_load;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire  signed [15:0] tmp_fu_735_p66;
wire  signed [15:0] tmp_1_fu_873_p66;
wire   [15:0] or_ln78_fu_1011_p2;
wire   [15:0] or_ln78_1_fu_1296_p2;
wire   [15:0] or_ln78_2_fu_1581_p2;
wire   [15:0] or_ln78_3_fu_1866_p2;
wire   [15:0] or_ln78_4_fu_2151_p2;
wire   [15:0] or_ln78_5_fu_2436_p2;
wire   [15:0] or_ln78_6_fu_2721_p2;
wire  signed [23:0] trunc_ln_fu_3037_p1;
wire   [23:0] grp_fu_3196_p3;
wire  signed [23:0] trunc_ln717_1_fu_3060_p1;
wire   [23:0] grp_fu_3205_p3;
wire  signed [23:0] trunc_ln717_2_fu_3084_p1;
wire   [23:0] grp_fu_3214_p3;
wire  signed [23:0] trunc_ln717_3_fu_3107_p1;
wire   [23:0] grp_fu_3223_p3;
wire  signed [23:0] trunc_ln717_4_fu_3131_p1;
wire   [23:0] grp_fu_3232_p3;
wire  signed [23:0] trunc_ln717_5_fu_3154_p1;
wire   [23:0] grp_fu_3241_p3;
wire  signed [23:0] trunc_ln717_6_fu_3171_p1;
wire   [23:0] grp_fu_3250_p3;
wire  signed [23:0] trunc_ln717_7_fu_3187_p1;
wire   [23:0] grp_fu_3259_p3;
wire   [23:0] grp_fu_3196_p2;
wire   [23:0] grp_fu_3205_p2;
wire   [23:0] grp_fu_3214_p2;
wire   [23:0] grp_fu_3223_p2;
wire   [23:0] grp_fu_3232_p2;
wire   [23:0] grp_fu_3241_p2;
wire   [23:0] grp_fu_3250_p2;
wire   [23:0] grp_fu_3259_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to0;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_2056;
reg    ap_condition_2068;
reg    ap_condition_2064;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U77(
    .din0(p_ZL8weights_0_load),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(p_ZL8weights_8_load),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(p_ZL8weights_16_load),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(p_ZL8weights_24_load),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(p_ZL8weights_32_load),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(p_ZL8weights_40_load),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(p_ZL8weights_48_load),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(p_ZL8weights_56_load),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(ap_sig_allocacmp_inc3740_i_0_load),
    .dout(tmp_fu_735_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U78(
    .din0(p_ZL6input_0_load),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(ap_sig_allocacmp_inc3740_i_0_load),
    .dout(tmp_1_fu_873_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U79(
    .din0(16'd0),
    .din1(p_ZL8weights_1_load),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(p_ZL8weights_9_load),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(p_ZL8weights_17_load),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(p_ZL8weights_25_load),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(p_ZL8weights_33_load),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(p_ZL8weights_41_load),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(p_ZL8weights_49_load),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(p_ZL8weights_57_load),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_fu_1011_p2),
    .dout(tmp_s_fu_1028_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U80(
    .din0(16'd0),
    .din1(p_ZL6input_1_load),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_fu_1011_p2),
    .dout(tmp_1_1_fu_1162_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U81(
    .din0(16'd0),
    .din1(16'd0),
    .din2(p_ZL8weights_2_load),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(p_ZL8weights_10_load),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(p_ZL8weights_18_load),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(p_ZL8weights_26_load),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(p_ZL8weights_34_load),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(p_ZL8weights_42_load),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(p_ZL8weights_50_load),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(p_ZL8weights_58_load),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_1_fu_1296_p2),
    .dout(tmp_2_fu_1313_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U82(
    .din0(16'd0),
    .din1(16'd0),
    .din2(p_ZL6input_2_load),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_1_fu_1296_p2),
    .dout(tmp_1_2_fu_1447_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U83(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(p_ZL8weights_3_load),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(p_ZL8weights_11_load),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(p_ZL8weights_19_load),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(p_ZL8weights_27_load),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(p_ZL8weights_35_load),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(p_ZL8weights_43_load),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(p_ZL8weights_51_load),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(p_ZL8weights_59_load),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_2_fu_1581_p2),
    .dout(tmp_3_fu_1598_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U84(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(p_ZL6input_3_load),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_2_fu_1581_p2),
    .dout(tmp_1_3_fu_1732_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U85(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(p_ZL8weights_4_load),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(p_ZL8weights_12_load),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(p_ZL8weights_20_load),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(p_ZL8weights_28_load),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(p_ZL8weights_36_load),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(p_ZL8weights_44_load),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(p_ZL8weights_52_load),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(p_ZL8weights_60_load),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_3_fu_1866_p2),
    .dout(tmp_4_fu_1883_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U86(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(p_ZL6input_4_load),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_3_fu_1866_p2),
    .dout(tmp_1_4_fu_2017_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U87(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(p_ZL8weights_5_load),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(p_ZL8weights_13_load),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(p_ZL8weights_21_load),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(p_ZL8weights_29_load),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(p_ZL8weights_37_load),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(p_ZL8weights_45_load),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(p_ZL8weights_53_load),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(p_ZL8weights_61_load),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_4_fu_2151_p2),
    .dout(tmp_5_fu_2168_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U88(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(p_ZL6input_5_load),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_4_fu_2151_p2),
    .dout(tmp_1_5_fu_2302_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U89(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(p_ZL8weights_6_load),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(p_ZL8weights_14_load),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(p_ZL8weights_22_load),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(p_ZL8weights_30_load),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(p_ZL8weights_38_load),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(p_ZL8weights_46_load),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(p_ZL8weights_54_load),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(p_ZL8weights_62_load),
    .din63(16'd0),
    .din64(or_ln78_5_fu_2436_p2),
    .dout(tmp_6_fu_2453_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U90(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(p_ZL6input_6_load),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_5_fu_2436_p2),
    .dout(tmp_1_6_fu_2587_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U91(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(p_ZL8weights_7_load),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(p_ZL8weights_15_load),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(p_ZL8weights_23_load),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(p_ZL8weights_31_load),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(p_ZL8weights_39_load),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(p_ZL8weights_47_load),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(p_ZL8weights_55_load),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(p_ZL8weights_63_load),
    .din64(or_ln78_6_fu_2721_p2),
    .dout(tmp_7_fu_2738_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U92(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(p_ZL6input_7_load),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln78_6_fu_2721_p2),
    .dout(tmp_1_7_fu_2872_p66)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_fu_873_p66),
    .din1(tmp_fu_735_p66),
    .din2(grp_fu_3196_p2),
    .ce(1'b1),
    .dout(grp_fu_3196_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_1_reg_3303),
    .din1(tmp_s_reg_3298),
    .din2(grp_fu_3205_p2),
    .ce(1'b1),
    .dout(grp_fu_3205_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_2_reg_3322),
    .din1(tmp_2_reg_3317),
    .din2(grp_fu_3214_p2),
    .ce(1'b1),
    .dout(grp_fu_3214_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_3_reg_3341),
    .din1(tmp_3_reg_3336),
    .din2(grp_fu_3223_p2),
    .ce(1'b1),
    .dout(grp_fu_3223_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_4_reg_3361),
    .din1(tmp_4_reg_3356),
    .din2(grp_fu_3232_p2),
    .ce(1'b1),
    .dout(grp_fu_3232_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_5_reg_3380),
    .din1(tmp_5_reg_3375),
    .din2(grp_fu_3241_p2),
    .ce(1'b1),
    .dout(grp_fu_3241_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_6_reg_3399),
    .din1(tmp_6_reg_3394),
    .din2(grp_fu_3250_p2),
    .ce(1'b1),
    .dout(grp_fu_3250_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_1_7_reg_3419),
    .din1(tmp_7_reg_3414),
    .din2(grp_fu_3259_p2),
    .ce(1'b1),
    .dout(grp_fu_3259_p3)
);

nnlayer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter1_stage6)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_condition_exit_pp0_iter1_stage6) & (ap_idle_pp0_0to0 == 1'b1)) | ((ap_loop_exit_ready == 1'b0) & (1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((1'b1 == ap_condition_2056)) begin
            inc3740_i_0_fu_198 <= add_ln78_fu_3006_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            inc3740_i_0_fu_198 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_2064)) begin
        if ((1'b1 == ap_condition_2068)) begin
            reg_711 <= output_V_q1;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_711 <= output_V_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_1_reg_3294 <= icmp_ln78_1_fu_1017_p2;
        output_V_addr_reg_3289 <= zext_ln83_fu_730_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_1_reg_3294_pp0_iter1_reg <= icmp_ln78_1_reg_3294;
        icmp_ln78_2_reg_3313_pp0_iter1_reg <= icmp_ln78_2_reg_3313;
        icmp_ln78_3_reg_3332_pp0_iter1_reg <= icmp_ln78_3_reg_3332;
        icmp_ln78_4_reg_3352_pp0_iter1_reg <= icmp_ln78_4_reg_3352;
        icmp_ln78_5_reg_3371_pp0_iter1_reg <= icmp_ln78_5_reg_3371;
        icmp_ln78_6_reg_3390_pp0_iter1_reg <= icmp_ln78_6_reg_3390;
        icmp_ln78_7_reg_3410_pp0_iter1_reg <= icmp_ln78_7_reg_3410;
        icmp_ln78_reg_3275 <= icmp_ln78_fu_724_p2;
        icmp_ln78_reg_3275_pp0_iter1_reg <= icmp_ln78_reg_3275;
        output_V_addr_5_reg_3385_pp0_iter1_reg[1] <= output_V_addr_5_reg_3385[1];
        output_V_addr_6_reg_3404_pp0_iter1_reg[0] <= output_V_addr_6_reg_3404[0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_2_reg_3313 <= icmp_ln78_2_fu_1302_p2;
        output_V_addr_1_reg_3308[2 : 1] <= zext_ln83_1_fu_1023_p1[2 : 1];
        tmp_1_1_reg_3303 <= tmp_1_1_fu_1162_p66;
        tmp_s_reg_3298 <= tmp_s_fu_1028_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_3_reg_3332 <= icmp_ln78_3_fu_1587_p2;
        output_V_addr_2_reg_3327[0] <= zext_ln83_2_fu_1308_p1[0];
output_V_addr_2_reg_3327[2] <= zext_ln83_2_fu_1308_p1[2];
        tmp_1_2_reg_3322 <= tmp_1_2_fu_1447_p66;
        tmp_2_reg_3317 <= tmp_2_fu_1313_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_4_reg_3352 <= icmp_ln78_4_fu_1872_p2;
        output_V_addr_3_reg_3346[2] <= zext_ln83_3_fu_1593_p1[2];
        tmp_1_3_reg_3341 <= tmp_1_3_fu_1732_p66;
        tmp_3_reg_3336 <= tmp_3_fu_1598_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_4_fu_1872_p2 == 1'd0) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_5_reg_3371 <= icmp_ln78_5_fu_2157_p2;
        output_V_addr_4_reg_3366[1 : 0] <= zext_ln83_4_fu_1878_p1[1 : 0];
        tmp_1_4_reg_3361 <= tmp_1_4_fu_2017_p66;
        tmp_4_reg_3356 <= tmp_4_fu_1883_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_5_fu_2157_p2 == 1'd0) & (icmp_ln78_4_fu_1872_p2 == 1'd0) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_6_reg_3390 <= icmp_ln78_6_fu_2442_p2;
        output_V_addr_5_reg_3385[1] <= zext_ln83_5_fu_2163_p1[1];
        tmp_1_5_reg_3380 <= tmp_1_5_fu_2302_p66;
        tmp_5_reg_3375 <= tmp_5_fu_2168_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_6_fu_2442_p2 == 1'd0) & (icmp_ln78_5_fu_2157_p2 == 1'd0) & (icmp_ln78_4_fu_1872_p2 == 1'd0) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln78_7_reg_3410 <= icmp_ln78_7_fu_2727_p2;
        output_V_addr_6_reg_3404[0] <= zext_ln83_6_fu_2448_p1[0];
        tmp_1_6_reg_3399 <= tmp_1_6_fu_2587_p66;
        tmp_6_reg_3394 <= tmp_6_fu_2453_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_load_3_reg_3454 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (icmp_ln78_5_reg_3371 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_V_load_5_reg_3479 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (icmp_ln78_5_reg_3371 == 1'd0) & (icmp_ln78_6_reg_3390 == 1'd0) & (icmp_ln78_7_reg_3410 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_load_7_reg_3499 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (icmp_ln78_5_reg_3371 == 1'd0) & (icmp_ln78_6_reg_3390 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln78_reg_3275 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_707 <= output_V_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln78_7_fu_2727_p2 == 1'd0) & (icmp_ln78_6_fu_2442_p2 == 1'd0) & (icmp_ln78_5_fu_2157_p2 == 1'd0) & (icmp_ln78_4_fu_1872_p2 == 1'd0) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_7_reg_3419 <= tmp_1_7_fu_2872_p66;
        tmp_7_reg_3414 <= tmp_7_fu_2738_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (icmp_ln78_5_reg_3371 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln717_5_reg_3549 <= {{trunc_ln717_5_fu_3154_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln78_6_reg_3390_pp0_iter1_reg == 1'd0) & (icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd0) & (icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd0) & (icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd0) & (icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd0) & (icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd0) & (icmp_ln78_reg_3275_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln717_6_reg_3559 <= {{trunc_ln717_6_fu_3171_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln78_7_reg_3410_pp0_iter1_reg == 1'd0) & (icmp_ln78_6_reg_3390_pp0_iter1_reg == 1'd0) & (icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd0) & (icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd0) & (icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd0) & (icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd0) & (icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd0) & (icmp_ln78_reg_3275_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        trunc_ln717_7_reg_3569 <= {{trunc_ln717_7_fu_3187_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln78_reg_3275 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln_reg_3459 <= {{trunc_ln_fu_3037_p1[23:8]}};
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & ((icmp_ln78_reg_3275 == 1'd1) | ((icmp_ln78_1_reg_3294 == 1'd1) | ((icmp_ln78_2_reg_3313 == 1'd1) | ((icmp_ln78_3_reg_3332 == 1'd1) | ((icmp_ln78_4_reg_3352 == 1'd1) | ((icmp_ln78_5_reg_3371 == 1'd1) | ((icmp_ln78_6_reg_3390 == 1'd1) | (icmp_ln78_7_reg_3410 == 1'd1)))))))))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & ((icmp_ln78_reg_3275_pp0_iter1_reg == 1'd1) | ((icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd1) | ((icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd1) | ((icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd1) | ((icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd1) | ((icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd1) | ((icmp_ln78_7_reg_3410_pp0_iter1_reg == 1'd1) | (icmp_ln78_6_reg_3390_pp0_iter1_reg == 1'd1)))))))))) begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter1_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6_subdone) & (1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_inc3740_i_0_load = 16'd0;
    end else begin
        ap_sig_allocacmp_inc3740_i_0_load = inc3740_i_0_fu_198;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        output_V_address0 = output_V_addr_7_reg_3424_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        output_V_address0 = output_V_addr_6_reg_3404_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_V_address0 = output_V_addr_5_reg_3385_pp0_iter1_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_address0 = output_V_addr_1_reg_3308;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_V_address0 = output_V_addr_7_reg_3424;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        output_V_address0 = output_V_addr_5_reg_3385;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        output_V_address0 = output_V_addr_3_reg_3346;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_V_address0 = zext_ln83_1_fu_1023_p1;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        output_V_address1 = output_V_addr_3_reg_3346;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_address1 = output_V_addr_reg_3289;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        output_V_address1 = output_V_addr_6_reg_3404;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        output_V_address1 = output_V_addr_4_reg_3366;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output_V_address1 = output_V_addr_2_reg_3327;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_V_address1 = zext_ln83_fu_730_p1;
    end else begin
        output_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        output_V_ce1 = 1'b1;
    end else begin
        output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        output_V_d0 = trunc_ln717_7_reg_3569;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        output_V_d0 = trunc_ln717_6_reg_3559;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        output_V_d0 = trunc_ln717_5_reg_3549;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        output_V_d0 = {{trunc_ln717_1_fu_3060_p1[23:8]}};
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage7) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            output_V_d1 = {{trunc_ln717_4_fu_3131_p1[23:8]}};
        end else if (((1'b0 == ap_block_pp0_stage6) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
            output_V_d1 = {{trunc_ln717_3_fu_3107_p1[23:8]}};
        end else if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            output_V_d1 = {{trunc_ln717_2_fu_3084_p1[23:8]}};
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            output_V_d1 = trunc_ln_reg_3459;
        end else begin
            output_V_d1 = 'bx;
        end
    end else begin
        output_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln78_7_reg_3410_pp0_iter1_reg == 1'd0) & (icmp_ln78_6_reg_3390_pp0_iter1_reg == 1'd0) & (icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd0) & (icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd0) & (icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd0) & (icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd0) & (icmp_ln78_reg_3275_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln78_6_reg_3390_pp0_iter1_reg == 1'd0) & (icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd0) & (icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd0) & (icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd0) & (icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd0) & (icmp_ln78_reg_3275_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln78_5_reg_3371_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln78_4_reg_3352_pp0_iter1_reg == 1'd0) & (icmp_ln78_3_reg_3332_pp0_iter1_reg == 1'd0) & (icmp_ln78_2_reg_3313_pp0_iter1_reg == 1'd0) & (icmp_ln78_1_reg_3294_pp0_iter1_reg == 1'd0) & (icmp_ln78_reg_3275_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln78_reg_3275 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        output_V_we1 = 1'b1;
    end else begin
        output_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter1_stage6) & (ap_idle_pp0_0to0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln78_fu_3006_p2 = (ap_sig_allocacmp_inc3740_i_0_load + 16'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_2056 = ((icmp_ln78_7_fu_2727_p2 == 1'd0) & (icmp_ln78_6_fu_2442_p2 == 1'd0) & (icmp_ln78_5_fu_2157_p2 == 1'd0) & (icmp_ln78_4_fu_1872_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln78_3_fu_1587_p2 == 1'd0) & (icmp_ln78_2_fu_1302_p2 == 1'd0) & (icmp_ln78_1_fu_1017_p2 == 1'd0) & (icmp_ln78_fu_724_p2 == 1'd0));
end

always @ (*) begin
    ap_condition_2064 = ((icmp_ln78_reg_3275 == 1'd0) & (icmp_ln78_1_reg_3294 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_2068 = ((icmp_ln78_2_reg_3313 == 1'd0) & (icmp_ln78_3_reg_3332 == 1'd0) & (icmp_ln78_4_reg_3352 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign grp_fu_3196_p2 = {{reg_707}, {8'd0}};

assign grp_fu_3205_p2 = {{reg_711}, {8'd0}};

assign grp_fu_3214_p2 = {{reg_707}, {8'd0}};

assign grp_fu_3223_p2 = {{output_V_load_3_reg_3454}, {8'd0}};

assign grp_fu_3232_p2 = {{reg_711}, {8'd0}};

assign grp_fu_3241_p2 = {{output_V_load_5_reg_3479}, {8'd0}};

assign grp_fu_3250_p2 = {{reg_707}, {8'd0}};

assign grp_fu_3259_p2 = {{output_V_load_7_reg_3499}, {8'd0}};

assign icmp_ln78_1_fu_1017_p2 = ((or_ln78_fu_1011_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_2_fu_1302_p2 = ((or_ln78_1_fu_1296_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_3_fu_1587_p2 = ((or_ln78_2_fu_1581_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_4_fu_1872_p2 = ((or_ln78_3_fu_1866_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_5_fu_2157_p2 = ((or_ln78_4_fu_2151_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_6_fu_2442_p2 = ((or_ln78_5_fu_2436_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_7_fu_2727_p2 = ((or_ln78_6_fu_2721_p2 == numOfOutNeurons) ? 1'b1 : 1'b0);

assign icmp_ln78_fu_724_p2 = ((ap_sig_allocacmp_inc3740_i_0_load == numOfOutNeurons) ? 1'b1 : 1'b0);

assign or_ln78_1_fu_1296_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd2);

assign or_ln78_2_fu_1581_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd3);

assign or_ln78_3_fu_1866_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd4);

assign or_ln78_4_fu_2151_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd5);

assign or_ln78_5_fu_2436_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd6);

assign or_ln78_6_fu_2721_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd7);

assign or_ln78_fu_1011_p2 = (ap_sig_allocacmp_inc3740_i_0_load | 16'd1);

assign trunc_ln717_1_fu_3060_p1 = grp_fu_3205_p3;

assign trunc_ln717_2_fu_3084_p1 = grp_fu_3214_p3;

assign trunc_ln717_3_fu_3107_p1 = grp_fu_3223_p3;

assign trunc_ln717_4_fu_3131_p1 = grp_fu_3232_p3;

assign trunc_ln717_5_fu_3154_p1 = grp_fu_3241_p3;

assign trunc_ln717_6_fu_3171_p1 = grp_fu_3250_p3;

assign trunc_ln717_7_fu_3187_p1 = grp_fu_3259_p3;

assign trunc_ln_fu_3037_p1 = grp_fu_3196_p3;

assign zext_ln83_1_fu_1023_p1 = or_ln78_fu_1011_p2;

assign zext_ln83_2_fu_1308_p1 = or_ln78_1_fu_1296_p2;

assign zext_ln83_3_fu_1593_p1 = or_ln78_2_fu_1581_p2;

assign zext_ln83_4_fu_1878_p1 = or_ln78_3_fu_1866_p2;

assign zext_ln83_5_fu_2163_p1 = or_ln78_4_fu_2151_p2;

assign zext_ln83_6_fu_2448_p1 = or_ln78_5_fu_2436_p2;

assign zext_ln83_7_fu_2733_p1 = or_ln78_6_fu_2721_p2;

assign zext_ln83_fu_730_p1 = ap_sig_allocacmp_inc3740_i_0_load;

always @ (posedge ap_clk) begin
    output_V_addr_1_reg_3308[0] <= 1'b1;
    output_V_addr_2_reg_3327[1] <= 1'b1;
    output_V_addr_3_reg_3346[1:0] <= 2'b11;
    output_V_addr_4_reg_3366[2] <= 1'b1;
    output_V_addr_5_reg_3385[0] <= 1'b1;
    output_V_addr_5_reg_3385[2] <= 1'b1;
    output_V_addr_5_reg_3385_pp0_iter1_reg[0] <= 1'b1;
    output_V_addr_5_reg_3385_pp0_iter1_reg[2] <= 1'b1;
    output_V_addr_6_reg_3404[2:1] <= 2'b11;
    output_V_addr_6_reg_3404_pp0_iter1_reg[2:1] <= 2'b11;
    output_V_addr_7_reg_3424[2:0] <= 3'b111;
    output_V_addr_7_reg_3424_pp0_iter1_reg[2:0] <= 3'b111;
end

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_78_1
