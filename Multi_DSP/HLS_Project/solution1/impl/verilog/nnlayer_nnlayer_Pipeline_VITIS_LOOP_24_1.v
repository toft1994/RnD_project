// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_24_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mux_case_770157_phi_out,
        mux_case_770157_phi_out_ap_vld,
        mux_case_669149_phi_out,
        mux_case_669149_phi_out_ap_vld,
        mux_case_568141_phi_out,
        mux_case_568141_phi_out_ap_vld,
        mux_case_467133_phi_out,
        mux_case_467133_phi_out_ap_vld,
        mux_case_366125_phi_out,
        mux_case_366125_phi_out_ap_vld,
        mux_case_265117_phi_out,
        mux_case_265117_phi_out_ap_vld,
        mux_case_164109_phi_out,
        mux_case_164109_phi_out_ap_vld,
        mux_case_063101_phi_out,
        mux_case_063101_phi_out_ap_vld,
        p_ZL7output_0_i,
        p_ZL7output_0_o,
        p_ZL7output_0_o_ap_vld,
        p_ZL7output_1_i,
        p_ZL7output_1_o,
        p_ZL7output_1_o_ap_vld,
        p_ZL7output_2_i,
        p_ZL7output_2_o,
        p_ZL7output_2_o_ap_vld,
        p_ZL7output_3_i,
        p_ZL7output_3_o,
        p_ZL7output_3_o_ap_vld,
        p_ZL7output_4_i,
        p_ZL7output_4_o,
        p_ZL7output_4_o_ap_vld,
        p_ZL7output_5_i,
        p_ZL7output_5_o,
        p_ZL7output_5_o_ap_vld,
        p_ZL7output_6_i,
        p_ZL7output_6_o,
        p_ZL7output_6_o_ap_vld,
        p_ZL7output_7_i,
        p_ZL7output_7_o,
        p_ZL7output_7_o_ap_vld
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [15:0] mux_case_770157_phi_out;
output   mux_case_770157_phi_out_ap_vld;
output  [15:0] mux_case_669149_phi_out;
output   mux_case_669149_phi_out_ap_vld;
output  [15:0] mux_case_568141_phi_out;
output   mux_case_568141_phi_out_ap_vld;
output  [15:0] mux_case_467133_phi_out;
output   mux_case_467133_phi_out_ap_vld;
output  [15:0] mux_case_366125_phi_out;
output   mux_case_366125_phi_out_ap_vld;
output  [15:0] mux_case_265117_phi_out;
output   mux_case_265117_phi_out_ap_vld;
output  [15:0] mux_case_164109_phi_out;
output   mux_case_164109_phi_out_ap_vld;
output  [15:0] mux_case_063101_phi_out;
output   mux_case_063101_phi_out_ap_vld;
input  [15:0] p_ZL7output_0_i;
output  [15:0] p_ZL7output_0_o;
output   p_ZL7output_0_o_ap_vld;
input  [15:0] p_ZL7output_1_i;
output  [15:0] p_ZL7output_1_o;
output   p_ZL7output_1_o_ap_vld;
input  [15:0] p_ZL7output_2_i;
output  [15:0] p_ZL7output_2_o;
output   p_ZL7output_2_o_ap_vld;
input  [15:0] p_ZL7output_3_i;
output  [15:0] p_ZL7output_3_o;
output   p_ZL7output_3_o_ap_vld;
input  [15:0] p_ZL7output_4_i;
output  [15:0] p_ZL7output_4_o;
output   p_ZL7output_4_o_ap_vld;
input  [15:0] p_ZL7output_5_i;
output  [15:0] p_ZL7output_5_o;
output   p_ZL7output_5_o_ap_vld;
input  [15:0] p_ZL7output_6_i;
output  [15:0] p_ZL7output_6_o;
output   p_ZL7output_6_o_ap_vld;
input  [15:0] p_ZL7output_7_i;
output  [15:0] p_ZL7output_7_o;
output   p_ZL7output_7_o_ap_vld;

reg ap_idle;
reg mux_case_770157_phi_out_ap_vld;
reg mux_case_669149_phi_out_ap_vld;
reg mux_case_568141_phi_out_ap_vld;
reg mux_case_467133_phi_out_ap_vld;
reg mux_case_366125_phi_out_ap_vld;
reg mux_case_265117_phi_out_ap_vld;
reg mux_case_164109_phi_out_ap_vld;
reg mux_case_063101_phi_out_ap_vld;
reg[15:0] p_ZL7output_0_o;
reg p_ZL7output_0_o_ap_vld;
reg[15:0] p_ZL7output_1_o;
reg p_ZL7output_1_o_ap_vld;
reg[15:0] p_ZL7output_2_o;
reg p_ZL7output_2_o_ap_vld;
reg[15:0] p_ZL7output_3_o;
reg p_ZL7output_3_o_ap_vld;
reg[15:0] p_ZL7output_4_o;
reg p_ZL7output_4_o_ap_vld;
reg[15:0] p_ZL7output_5_o;
reg p_ZL7output_5_o_ap_vld;
reg[15:0] p_ZL7output_6_o;
reg p_ZL7output_6_o_ap_vld;
reg[15:0] p_ZL7output_7_o;
reg p_ZL7output_7_o_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_block_state1_pp0_stage0_iter0;
wire   [0:0] icmp_ln24_fu_372_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [15:0] ap_phi_mux_mux_case_770157_phi_fu_175_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_770157_reg_172;
wire   [0:0] tmp_fu_502_p3;
wire   [2:0] trunc_ln28_fu_510_p1;
reg   [15:0] ap_phi_mux_mux_case_669149_phi_fu_199_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_669149_reg_196;
reg   [15:0] ap_phi_mux_mux_case_568141_phi_fu_223_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_568141_reg_220;
reg   [15:0] ap_phi_mux_mux_case_467133_phi_fu_247_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_467133_reg_244;
reg   [15:0] ap_phi_mux_mux_case_366125_phi_fu_271_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_366125_reg_268;
reg   [15:0] ap_phi_mux_mux_case_265117_phi_fu_295_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_265117_reg_292;
reg   [15:0] ap_phi_mux_mux_case_164109_phi_fu_319_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_164109_reg_316;
reg   [15:0] ap_phi_mux_mux_case_063101_phi_fu_343_p18;
wire   [15:0] ap_phi_reg_pp0_iter0_mux_case_063101_reg_340;
reg   [15:0] mux_case_063101_phi_fu_80;
reg   [15:0] mux_case_164109_phi_fu_84;
reg   [15:0] mux_case_265117_phi_fu_88;
reg   [15:0] mux_case_366125_phi_fu_92;
reg   [15:0] mux_case_467133_phi_fu_96;
reg   [15:0] mux_case_568141_phi_fu_100;
reg   [15:0] mux_case_669149_phi_fu_104;
reg   [15:0] mux_case_770157_phi_fu_108;
reg   [3:0] i_fu_112;
wire   [3:0] add_ln24_fu_378_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_3;
wire   [15:0] tmp_3_fu_480_p10;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_done_reg = 1'b0;
end

nnlayer_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U251(
    .din0(p_ZL7output_0_i),
    .din1(p_ZL7output_1_i),
    .din2(p_ZL7output_2_i),
    .din3(p_ZL7output_3_i),
    .din4(p_ZL7output_4_i),
    .din5(p_ZL7output_5_i),
    .din6(p_ZL7output_6_i),
    .din7(p_ZL7output_7_i),
    .din8(ap_sig_allocacmp_i_3),
    .dout(tmp_3_fu_480_p10)
);

nnlayer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        if ((icmp_ln24_fu_372_p2 == 1'd0)) begin
            i_fu_112 <= add_ln24_fu_378_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_112 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_063101_phi_fu_80 <= ap_phi_mux_mux_case_063101_phi_fu_343_p18;
        mux_case_164109_phi_fu_84 <= ap_phi_mux_mux_case_164109_phi_fu_319_p18;
        mux_case_265117_phi_fu_88 <= ap_phi_mux_mux_case_265117_phi_fu_295_p18;
        mux_case_366125_phi_fu_92 <= ap_phi_mux_mux_case_366125_phi_fu_271_p18;
        mux_case_467133_phi_fu_96 <= ap_phi_mux_mux_case_467133_phi_fu_247_p18;
        mux_case_568141_phi_fu_100 <= ap_phi_mux_mux_case_568141_phi_fu_223_p18;
        mux_case_669149_phi_fu_104 <= ap_phi_mux_mux_case_669149_phi_fu_199_p18;
        mux_case_770157_phi_fu_108 <= ap_phi_mux_mux_case_770157_phi_fu_175_p18;
    end
end

always @ (*) begin
    if ((ap_start_int == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (ap_loop_exit_ready == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_063101_phi_fu_343_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_063101_phi_fu_343_p18 = p_ZL7output_0_i;
    end else begin
        ap_phi_mux_mux_case_063101_phi_fu_343_p18 = ap_phi_reg_pp0_iter0_mux_case_063101_reg_340;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_164109_phi_fu_319_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_164109_phi_fu_319_p18 = p_ZL7output_1_i;
    end else begin
        ap_phi_mux_mux_case_164109_phi_fu_319_p18 = ap_phi_reg_pp0_iter0_mux_case_164109_reg_316;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_265117_phi_fu_295_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_265117_phi_fu_295_p18 = p_ZL7output_2_i;
    end else begin
        ap_phi_mux_mux_case_265117_phi_fu_295_p18 = ap_phi_reg_pp0_iter0_mux_case_265117_reg_292;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_366125_phi_fu_271_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_366125_phi_fu_271_p18 = p_ZL7output_3_i;
    end else begin
        ap_phi_mux_mux_case_366125_phi_fu_271_p18 = ap_phi_reg_pp0_iter0_mux_case_366125_reg_268;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_467133_phi_fu_247_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_467133_phi_fu_247_p18 = p_ZL7output_4_i;
    end else begin
        ap_phi_mux_mux_case_467133_phi_fu_247_p18 = ap_phi_reg_pp0_iter0_mux_case_467133_reg_244;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_568141_phi_fu_223_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_568141_phi_fu_223_p18 = p_ZL7output_5_i;
    end else begin
        ap_phi_mux_mux_case_568141_phi_fu_223_p18 = ap_phi_reg_pp0_iter0_mux_case_568141_reg_220;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_669149_phi_fu_199_p18 = 16'd0;
    end else if ((((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_669149_phi_fu_199_p18 = p_ZL7output_6_i;
    end else begin
        ap_phi_mux_mux_case_669149_phi_fu_199_p18 = ap_phi_reg_pp0_iter0_mux_case_669149_reg_196;
    end
end

always @ (*) begin
    if ((((tmp_fu_502_p3 == 1'd0) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)) | ((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0)))) begin
        ap_phi_mux_mux_case_770157_phi_fu_175_p18 = p_ZL7output_7_i;
    end else if (((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0))) begin
        ap_phi_mux_mux_case_770157_phi_fu_175_p18 = 16'd0;
    end else begin
        ap_phi_mux_mux_case_770157_phi_fu_175_p18 = ap_phi_reg_pp0_iter0_mux_case_770157_reg_172;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_sig_allocacmp_i_3 = 4'd0;
    end else begin
        ap_sig_allocacmp_i_3 = i_fu_112;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_063101_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_063101_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_164109_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_164109_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_265117_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_265117_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_366125_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_366125_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_467133_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_467133_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_568141_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_568141_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_669149_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_669149_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        mux_case_770157_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_770157_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_0_o = 16'd0;
    end else begin
        p_ZL7output_0_o = p_ZL7output_0_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd0) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_0_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_1_o = 16'd0;
    end else begin
        p_ZL7output_1_o = p_ZL7output_1_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd1) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_1_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_2_o = 16'd0;
    end else begin
        p_ZL7output_2_o = p_ZL7output_2_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd2) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_2_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_3_o = 16'd0;
    end else begin
        p_ZL7output_3_o = p_ZL7output_3_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd3) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_3_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_4_o = 16'd0;
    end else begin
        p_ZL7output_4_o = p_ZL7output_4_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd4) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_4_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_5_o = 16'd0;
    end else begin
        p_ZL7output_5_o = p_ZL7output_5_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd5) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_5_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_6_o = 16'd0;
    end else begin
        p_ZL7output_6_o = p_ZL7output_6_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd6) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_6_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_7_o = 16'd0;
    end else begin
        p_ZL7output_7_o = p_ZL7output_7_i;
    end
end

always @ (*) begin
    if (((trunc_ln28_fu_510_p1 == 3'd7) & (tmp_fu_502_p3 == 1'd1) & (ap_start_int == 1'b1) & (icmp_ln24_fu_372_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        p_ZL7output_7_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln24_fu_378_p2 = (ap_sig_allocacmp_i_3 + 4'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start_int == 1'b0);
end

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_mux_case_063101_reg_340 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_164109_reg_316 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_265117_reg_292 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_366125_reg_268 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_467133_reg_244 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_568141_reg_220 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_669149_reg_196 = 'bx;

assign ap_phi_reg_pp0_iter0_mux_case_770157_reg_172 = 'bx;

assign icmp_ln24_fu_372_p2 = ((ap_sig_allocacmp_i_3 == 4'd8) ? 1'b1 : 1'b0);

assign mux_case_063101_phi_out = mux_case_063101_phi_fu_80;

assign mux_case_164109_phi_out = mux_case_164109_phi_fu_84;

assign mux_case_265117_phi_out = mux_case_265117_phi_fu_88;

assign mux_case_366125_phi_out = mux_case_366125_phi_fu_92;

assign mux_case_467133_phi_out = mux_case_467133_phi_fu_96;

assign mux_case_568141_phi_out = mux_case_568141_phi_fu_100;

assign mux_case_669149_phi_out = mux_case_669149_phi_fu_104;

assign mux_case_770157_phi_out = mux_case_770157_phi_fu_108;

assign tmp_fu_502_p3 = tmp_3_fu_480_p10[32'd15];

assign trunc_ln28_fu_510_p1 = ap_sig_allocacmp_i_3[2:0];

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_24_1
