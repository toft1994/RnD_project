// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nnlayer_nnlayer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.585000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=67,HLS_SYN_DSP=0,HLS_SYN_FF=692,HLS_SYN_LUT=823,HLS_VERSION=2021_2}" *)

module nnlayer (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_state5 = 6'd16;
parameter    ap_ST_fsm_state6 = 6'd32;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 18;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] input_r_q0;
reg   [7:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [15:0] output_r_d0;
wire   [15:0] output_r_q0;
wire   [15:0] weights_q0;
wire   [15:0] bias_q0;
wire   [15:0] numOfInNeurons;
wire   [15:0] numOfOutNeurons;
wire   [7:0] activation;
reg   [15:0] numOfOutNeurons_read_reg_206;
reg   [15:0] numOfInNeurons_read_reg_212;
wire   [0:0] icmp_ln36_fu_148_p2;
reg   [0:0] icmp_ln36_reg_225;
wire   [0:0] cmp1141_fu_154_p2;
reg   [0:0] cmp1141_reg_243;
wire    ap_CS_fsm_state2;
wire   [15:0] outNeurons_3_fu_177_p2;
reg   [15:0] outNeurons_3_reg_250;
wire    ap_CS_fsm_state3;
reg   [7:0] output_r_addr_reg_255;
wire   [0:0] icmp_ln37_fu_172_p2;
reg   [15:0] weightIndexAdded_load_1_reg_260;
wire    ap_CS_fsm_state4;
reg   [15:0] output_r_load_reg_265;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_idle;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_ready;
wire   [7:0] grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_address0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_ce0;
wire   [7:0] grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_address0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_ce0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_we0;
wire   [15:0] grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_d0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_done;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_idle;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_ready;
wire   [15:0] grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_address0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_ce0;
wire   [7:0] grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_address0;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_ce0;
wire   [15:0] grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_lhs_out;
wire    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_lhs_out_ap_vld;
reg    grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg;
reg    grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg;
wire    ap_CS_fsm_state5;
wire   [63:0] idxprom18_fu_183_p1;
wire    ap_CS_fsm_state6;
reg   [15:0] outNeurons_2_fu_82;
reg   [15:0] weightIndexAdded_fu_86;
wire   [15:0] weightIndexAdded_1_fu_192_p2;
reg   [5:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg = 1'b0;
#0 grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg = 1'b0;
end

nnlayer_nnlayer_Pipeline_VITIS_LOOP_32_1 grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start),
    .ap_done(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done),
    .ap_idle(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_idle),
    .ap_ready(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_ready),
    .numOfOutNeurons(numOfOutNeurons_read_reg_206),
    .bias_address0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_address0),
    .bias_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_ce0),
    .bias_q0(bias_q0),
    .output_r_address0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_address0),
    .output_r_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_ce0),
    .output_r_we0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_we0),
    .output_r_d0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_d0)
);

nnlayer_nnlayer_Pipeline_VITIS_LOOP_39_3 grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start),
    .ap_done(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_done),
    .ap_idle(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_idle),
    .ap_ready(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_ready),
    .output_r_load(output_r_load_reg_265),
    .numOfInNeurons_cast(numOfInNeurons_read_reg_212),
    .weightIndexAdded(weightIndexAdded_load_1_reg_260),
    .weights_address0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_address0),
    .weights_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_ce0),
    .weights_q0(weights_q0),
    .input_r_address0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_address0),
    .input_r_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_ce0),
    .input_r_q0(input_r_q0),
    .lhs_out(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_lhs_out),
    .lhs_out_ap_vld(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_lhs_out_ap_vld)
);

nnlayer_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .numOfInNeurons(numOfInNeurons),
    .numOfOutNeurons(numOfOutNeurons),
    .activation(activation),
    .input_r_address0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_address0),
    .input_r_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_input_r_ce0),
    .input_r_q0(input_r_q0),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0),
    .output_r_q0(output_r_q0),
    .bias_address0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_address0),
    .bias_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_bias_ce0),
    .bias_q0(bias_q0),
    .weights_address0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_address0),
    .weights_ce0(grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_weights_ce0),
    .weights_q0(weights_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_ready == 1'b1)) begin
            grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_ready == 1'b1)) begin
            grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done == 1'b1) & (icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        outNeurons_2_fu_82 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        outNeurons_2_fu_82 <= outNeurons_3_reg_250;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done == 1'b1) & (icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        weightIndexAdded_fu_86 <= 16'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        weightIndexAdded_fu_86 <= weightIndexAdded_1_fu_192_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        cmp1141_reg_243 <= cmp1141_fu_154_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln36_reg_225 <= icmp_ln36_fu_148_p2;
        numOfInNeurons_read_reg_212 <= numOfInNeurons;
        numOfOutNeurons_read_reg_206 <= numOfOutNeurons;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        outNeurons_3_reg_250 <= outNeurons_3_fu_177_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln37_fu_172_p2 == 1'd0) & (cmp1141_reg_243 == 1'd0) & (icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        output_r_addr_reg_255 <= idxprom18_fu_183_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_load_reg_265 <= output_r_q0;
        weightIndexAdded_load_1_reg_260 <= weightIndexAdded_fu_86;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln37_fu_172_p2 == 1'd1) | (icmp_ln36_reg_225 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln37_fu_172_p2 == 1'd1) | (icmp_ln36_reg_225 == 1'd0)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_address0 = output_r_addr_reg_255;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        output_r_address0 = idxprom18_fu_183_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_address0 = grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_address0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state6))) begin
        output_r_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_ce0 = grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_ce0;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        output_r_d0 = grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_lhs_out;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_d0 = grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_d0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((cmp1141_reg_243 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        output_r_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_r_we0 = grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_output_r_we0;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((icmp_ln37_fu_172_p2 == 1'd1) | (icmp_ln36_reg_225 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln37_fu_172_p2 == 1'd0) & (cmp1141_reg_243 == 1'd1) & (icmp_ln36_reg_225 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign cmp1141_fu_154_p2 = ((numOfInNeurons_read_reg_212 == 16'd0) ? 1'b1 : 1'b0);

assign grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start = grp_nnlayer_Pipeline_VITIS_LOOP_32_1_fu_121_ap_start_reg;

assign grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start = grp_nnlayer_Pipeline_VITIS_LOOP_39_3_fu_131_ap_start_reg;

assign icmp_ln36_fu_148_p2 = ((activation == 8'd232) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_172_p2 = ((outNeurons_2_fu_82 == numOfOutNeurons_read_reg_206) ? 1'b1 : 1'b0);

assign idxprom18_fu_183_p1 = outNeurons_2_fu_82;

assign outNeurons_3_fu_177_p2 = (outNeurons_2_fu_82 + 16'd1);

assign weightIndexAdded_1_fu_192_p2 = (weightIndexAdded_fu_86 + numOfInNeurons_read_reg_212);

endmodule //nnlayer
