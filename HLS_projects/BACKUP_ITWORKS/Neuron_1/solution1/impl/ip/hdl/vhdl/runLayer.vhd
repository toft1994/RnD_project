-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity runLayer is
generic (
    C_M_AXI_GMEM_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_GMEM_ID_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_GMEM_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 9;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_GMEM_USER_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_PROT_VALUE : INTEGER := 0;
    C_M_AXI_GMEM_CACHE_VALUE : INTEGER := 3 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_AWUSER_WIDTH-1 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH/8-1 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_WUSER_WIDTH-1 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ADDR_WIDTH-1 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_GMEM_ARUSER_WIDTH-1 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_DATA_WIDTH-1 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_RUSER_WIDTH-1 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_ID_WIDTH-1 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_GMEM_BUSER_WIDTH-1 downto 0);
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of runLayer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "runLayer_runLayer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=5,HLS_SYN_DSP=0,HLS_SYN_FF=1847,HLS_SYN_LUT=2319,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (24 downto 0) := "0000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (24 downto 0) := "0000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (24 downto 0) := "0000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (24 downto 0) := "0000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (24 downto 0) := "0000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (24 downto 0) := "0000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (24 downto 0) := "0000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (24 downto 0) := "0001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (24 downto 0) := "0010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (24 downto 0) := "0100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (24 downto 0) := "1000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant C_M_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_80 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (24 downto 0) := "0000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r : STD_LOGIC_VECTOR (63 downto 0);
    signal output_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal output_r_ce0 : STD_LOGIC;
    signal output_r_we0 : STD_LOGIC;
    signal output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weights : STD_LOGIC_VECTOR (63 downto 0);
    signal bias : STD_LOGIC_VECTOR (63 downto 0);
    signal numOfInNeurons : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal numOfInNeurons_read_reg_370 : STD_LOGIC_VECTOR (15 downto 0);
    signal weights_read_reg_380 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln_reg_391 : STD_LOGIC_VECTOR (62 downto 0);
    signal trunc_ln1_reg_397 : STD_LOGIC_VECTOR (62 downto 0);
    signal conv4_fu_263_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv4_reg_407 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal zext_ln26_fu_266_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal zext_ln26_reg_412 : STD_LOGIC_VECTOR (22 downto 0);
    signal empty_24_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_24_reg_417 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln24_fu_280_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal add_ln24_reg_424 : STD_LOGIC_VECTOR (22 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal outNeurons_2_fu_291_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal outNeurons_2_reg_432 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_cast_reg_437 : STD_LOGIC_VECTOR (62 downto 0);
    signal icmp_ln24_fu_285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal idxprom17_fu_334_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal idxprom17_reg_448 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal output_r_addr_reg_454 : STD_LOGIC_VECTOR (6 downto 0);
    signal output_r_load_reg_459 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal output_r_addr_1_reg_469 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_bias_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_bias_load_reg_474 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal tmp_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_weights_ce0 : STD_LOGIC;
    signal tmp_weights_we0 : STD_LOGIC;
    signal tmp_weights_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_bias_ce0 : STD_LOGIC;
    signal tmp_bias_we0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_ap_start : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_ap_done : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_ap_idle : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_ap_ready : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_tmp_bias_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_tmp_bias_ce0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_tmp_bias_we0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_1_fu_193_tmp_bias_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_ap_start : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_ap_done : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_ap_idle : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_ap_ready : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_tmp_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_runLayer_Pipeline_2_fu_201_tmp_weights_ce0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_tmp_weights_we0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_2_fu_201_tmp_weights_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_idle : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_ready : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_ce0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out_ap_vld : STD_LOGIC;
    signal gmem_AWREADY : STD_LOGIC;
    signal gmem_WREADY : STD_LOGIC;
    signal gmem_ARVALID : STD_LOGIC;
    signal gmem_ARREADY : STD_LOGIC;
    signal gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RVALID : STD_LOGIC;
    signal gmem_RREADY : STD_LOGIC;
    signal gmem_RDATA : STD_LOGIC_VECTOR (15 downto 0);
    signal gmem_RLAST : STD_LOGIC;
    signal gmem_RID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RFIFONUM : STD_LOGIC_VECTOR (9 downto 0);
    signal gmem_RUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_RRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BVALID : STD_LOGIC;
    signal gmem_BRESP : STD_LOGIC_VECTOR (1 downto 0);
    signal gmem_BID : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_BUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_1_fu_193_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_runLayer_Pipeline_2_fu_201_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (24 downto 0);
    signal ap_NS_fsm_state19 : STD_LOGIC;
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal sext_ln22_fu_253_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_cast_cast_fu_324_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal phi_mul_fu_104 : STD_LOGIC_VECTOR (22 downto 0);
    signal outNeurons_fu_108 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state20_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal add_ln32_fu_350_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_297_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln26_1_fu_305_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal add_ln26_fu_309_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component runLayer_runLayer_Pipeline_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln22 : IN STD_LOGIC_VECTOR (62 downto 0);
        tmp_bias_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tmp_bias_ce0 : OUT STD_LOGIC;
        tmp_bias_we0 : OUT STD_LOGIC;
        tmp_bias_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component runLayer_runLayer_Pipeline_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        p_cast_cast : IN STD_LOGIC_VECTOR (62 downto 0);
        tmp_weights_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tmp_weights_ce0 : OUT STD_LOGIC;
        tmp_weights_we0 : OUT STD_LOGIC;
        tmp_weights_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv5 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component runLayer_runLayer_Pipeline_VITIS_LOOP_28_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (9 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_r_load : IN STD_LOGIC_VECTOR (15 downto 0);
        sext_ln28 : IN STD_LOGIC_VECTOR (62 downto 0);
        numOfInNeurons_cast1 : IN STD_LOGIC_VECTOR (15 downto 0);
        tmp_weights_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        tmp_weights_ce0 : OUT STD_LOGIC;
        tmp_weights_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv4 : IN STD_LOGIC_VECTOR (15 downto 0);
        conv205_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        conv205_out_ap_vld : OUT STD_LOGIC );
    end component;


    component runLayer_tmp_weights_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component runLayer_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        input_r : OUT STD_LOGIC_VECTOR (63 downto 0);
        weights : OUT STD_LOGIC_VECTOR (63 downto 0);
        bias : OUT STD_LOGIC_VECTOR (63 downto 0);
        numOfInNeurons : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        output_r_ce0 : IN STD_LOGIC;
        output_r_we0 : IN STD_LOGIC;
        output_r_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component runLayer_gmem_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_DW : INTEGER;
        USER_AW : INTEGER;
        USER_MAXREQS : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        USER_RFIFONUM_WIDTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_ARVALID : IN STD_LOGIC;
        I_ARREADY : OUT STD_LOGIC;
        I_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_ARID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_ARSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_ARPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_ARUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_ARBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_ARREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_RVALID : OUT STD_LOGIC;
        I_RREADY : IN STD_LOGIC;
        I_RDATA : OUT STD_LOGIC_VECTOR (15 downto 0);
        I_RFIFONUM : OUT STD_LOGIC_VECTOR (9 downto 0);
        I_RID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_RLAST : OUT STD_LOGIC;
        I_AWVALID : IN STD_LOGIC;
        I_AWREADY : OUT STD_LOGIC;
        I_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_AWID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_AWSIZE : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWLOCK : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWCACHE : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWQOS : IN STD_LOGIC_VECTOR (3 downto 0);
        I_AWPROT : IN STD_LOGIC_VECTOR (2 downto 0);
        I_AWUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_AWBURST : IN STD_LOGIC_VECTOR (1 downto 0);
        I_AWREGION : IN STD_LOGIC_VECTOR (3 downto 0);
        I_WVALID : IN STD_LOGIC;
        I_WREADY : OUT STD_LOGIC;
        I_WDATA : IN STD_LOGIC_VECTOR (15 downto 0);
        I_WID : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        I_WLAST : IN STD_LOGIC;
        I_WSTRB : IN STD_LOGIC_VECTOR (1 downto 0);
        I_BVALID : OUT STD_LOGIC;
        I_BREADY : IN STD_LOGIC;
        I_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        I_BID : OUT STD_LOGIC_VECTOR (0 downto 0);
        I_BUSER : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    tmp_weights_U : component runLayer_tmp_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tmp_weights_address0,
        ce0 => tmp_weights_ce0,
        we0 => tmp_weights_we0,
        d0 => grp_runLayer_Pipeline_2_fu_201_tmp_weights_d0,
        q0 => tmp_weights_q0);

    tmp_bias_U : component runLayer_tmp_weights_RAM_AUTO_1R1W
    generic map (
        DataWidth => 16,
        AddressRange => 128,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => tmp_bias_address0,
        ce0 => tmp_bias_ce0,
        we0 => tmp_bias_we0,
        d0 => grp_runLayer_Pipeline_1_fu_193_tmp_bias_d0,
        q0 => tmp_bias_q0);

    grp_runLayer_Pipeline_1_fu_193 : component runLayer_runLayer_Pipeline_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runLayer_Pipeline_1_fu_193_ap_start,
        ap_done => grp_runLayer_Pipeline_1_fu_193_ap_done,
        ap_idle => grp_runLayer_Pipeline_1_fu_193_ap_idle,
        ap_ready => grp_runLayer_Pipeline_1_fu_193_ap_ready,
        m_axi_gmem_AWVALID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln22 => trunc_ln_reg_391,
        tmp_bias_address0 => grp_runLayer_Pipeline_1_fu_193_tmp_bias_address0,
        tmp_bias_ce0 => grp_runLayer_Pipeline_1_fu_193_tmp_bias_ce0,
        tmp_bias_we0 => grp_runLayer_Pipeline_1_fu_193_tmp_bias_we0,
        tmp_bias_d0 => grp_runLayer_Pipeline_1_fu_193_tmp_bias_d0);

    grp_runLayer_Pipeline_2_fu_201 : component runLayer_runLayer_Pipeline_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runLayer_Pipeline_2_fu_201_ap_start,
        ap_done => grp_runLayer_Pipeline_2_fu_201_ap_done,
        ap_idle => grp_runLayer_Pipeline_2_fu_201_ap_idle,
        ap_ready => grp_runLayer_Pipeline_2_fu_201_ap_ready,
        m_axi_gmem_AWVALID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        p_cast_cast => p_cast_reg_437,
        tmp_weights_address0 => grp_runLayer_Pipeline_2_fu_201_tmp_weights_address0,
        tmp_weights_ce0 => grp_runLayer_Pipeline_2_fu_201_tmp_weights_ce0,
        tmp_weights_we0 => grp_runLayer_Pipeline_2_fu_201_tmp_weights_we0,
        tmp_weights_d0 => grp_runLayer_Pipeline_2_fu_201_tmp_weights_d0,
        conv5 => numOfInNeurons_read_reg_370);

    grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210 : component runLayer_runLayer_Pipeline_VITIS_LOOP_28_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start,
        ap_done => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done,
        ap_idle => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_idle,
        ap_ready => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_ready,
        m_axi_gmem_AWVALID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => gmem_RVALID,
        m_axi_gmem_RREADY => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => gmem_RDATA,
        m_axi_gmem_RLAST => gmem_RLAST,
        m_axi_gmem_RID => gmem_RID,
        m_axi_gmem_RFIFONUM => gmem_RFIFONUM,
        m_axi_gmem_RUSER => gmem_RUSER,
        m_axi_gmem_RRESP => gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        output_r_load => output_r_load_reg_459,
        sext_ln28 => trunc_ln1_reg_397,
        numOfInNeurons_cast1 => numOfInNeurons_read_reg_370,
        tmp_weights_address0 => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_address0,
        tmp_weights_ce0 => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_ce0,
        tmp_weights_q0 => tmp_weights_q0,
        conv4 => numOfInNeurons_read_reg_370,
        conv205_out => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out,
        conv205_out_ap_vld => grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out_ap_vld);

    control_s_axi_U : component runLayer_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        input_r => input_r,
        weights => weights,
        bias => bias,
        numOfInNeurons => numOfInNeurons,
        output_r_address0 => output_r_address0,
        output_r_ce0 => output_r_ce0,
        output_r_we0 => output_r_we0,
        output_r_d0 => output_r_d0,
        output_r_q0 => output_r_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    gmem_m_axi_U : component runLayer_gmem_m_axi
    generic map (
        CONSERVATIVE => 0,
        USER_DW => 16,
        USER_AW => 64,
        USER_MAXREQS => 5,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        USER_RFIFONUM_WIDTH => 10,
        C_M_AXI_ID_WIDTH => C_M_AXI_GMEM_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_GMEM_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_GMEM_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_GMEM_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_GMEM_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_GMEM_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_GMEM_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_GMEM_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_GMEM_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_GMEM_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_GMEM_CACHE_VALUE)
    port map (
        AWVALID => m_axi_gmem_AWVALID,
        AWREADY => m_axi_gmem_AWREADY,
        AWADDR => m_axi_gmem_AWADDR,
        AWID => m_axi_gmem_AWID,
        AWLEN => m_axi_gmem_AWLEN,
        AWSIZE => m_axi_gmem_AWSIZE,
        AWBURST => m_axi_gmem_AWBURST,
        AWLOCK => m_axi_gmem_AWLOCK,
        AWCACHE => m_axi_gmem_AWCACHE,
        AWPROT => m_axi_gmem_AWPROT,
        AWQOS => m_axi_gmem_AWQOS,
        AWREGION => m_axi_gmem_AWREGION,
        AWUSER => m_axi_gmem_AWUSER,
        WVALID => m_axi_gmem_WVALID,
        WREADY => m_axi_gmem_WREADY,
        WDATA => m_axi_gmem_WDATA,
        WSTRB => m_axi_gmem_WSTRB,
        WLAST => m_axi_gmem_WLAST,
        WID => m_axi_gmem_WID,
        WUSER => m_axi_gmem_WUSER,
        ARVALID => m_axi_gmem_ARVALID,
        ARREADY => m_axi_gmem_ARREADY,
        ARADDR => m_axi_gmem_ARADDR,
        ARID => m_axi_gmem_ARID,
        ARLEN => m_axi_gmem_ARLEN,
        ARSIZE => m_axi_gmem_ARSIZE,
        ARBURST => m_axi_gmem_ARBURST,
        ARLOCK => m_axi_gmem_ARLOCK,
        ARCACHE => m_axi_gmem_ARCACHE,
        ARPROT => m_axi_gmem_ARPROT,
        ARQOS => m_axi_gmem_ARQOS,
        ARREGION => m_axi_gmem_ARREGION,
        ARUSER => m_axi_gmem_ARUSER,
        RVALID => m_axi_gmem_RVALID,
        RREADY => m_axi_gmem_RREADY,
        RDATA => m_axi_gmem_RDATA,
        RLAST => m_axi_gmem_RLAST,
        RID => m_axi_gmem_RID,
        RUSER => m_axi_gmem_RUSER,
        RRESP => m_axi_gmem_RRESP,
        BVALID => m_axi_gmem_BVALID,
        BREADY => m_axi_gmem_BREADY,
        BRESP => m_axi_gmem_BRESP,
        BID => m_axi_gmem_BID,
        BUSER => m_axi_gmem_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_ARVALID => gmem_ARVALID,
        I_ARREADY => gmem_ARREADY,
        I_ARADDR => gmem_ARADDR,
        I_ARID => gmem_ARID,
        I_ARLEN => gmem_ARLEN,
        I_ARSIZE => gmem_ARSIZE,
        I_ARLOCK => gmem_ARLOCK,
        I_ARCACHE => gmem_ARCACHE,
        I_ARQOS => gmem_ARQOS,
        I_ARPROT => gmem_ARPROT,
        I_ARUSER => gmem_ARUSER,
        I_ARBURST => gmem_ARBURST,
        I_ARREGION => gmem_ARREGION,
        I_RVALID => gmem_RVALID,
        I_RREADY => gmem_RREADY,
        I_RDATA => gmem_RDATA,
        I_RFIFONUM => gmem_RFIFONUM,
        I_RID => gmem_RID,
        I_RUSER => gmem_RUSER,
        I_RRESP => gmem_RRESP,
        I_RLAST => gmem_RLAST,
        I_AWVALID => ap_const_logic_0,
        I_AWREADY => gmem_AWREADY,
        I_AWADDR => ap_const_lv64_0,
        I_AWID => ap_const_lv1_0,
        I_AWLEN => ap_const_lv32_0,
        I_AWSIZE => ap_const_lv3_0,
        I_AWLOCK => ap_const_lv2_0,
        I_AWCACHE => ap_const_lv4_0,
        I_AWQOS => ap_const_lv4_0,
        I_AWPROT => ap_const_lv3_0,
        I_AWUSER => ap_const_lv1_0,
        I_AWBURST => ap_const_lv2_0,
        I_AWREGION => ap_const_lv4_0,
        I_WVALID => ap_const_logic_0,
        I_WREADY => gmem_WREADY,
        I_WDATA => ap_const_lv16_0,
        I_WID => ap_const_lv1_0,
        I_WUSER => ap_const_lv1_0,
        I_WLAST => ap_const_logic_0,
        I_WSTRB => ap_const_lv2_0,
        I_BVALID => gmem_BVALID,
        I_BREADY => ap_const_logic_0,
        I_BRESP => gmem_BRESP,
        I_BID => gmem_BID,
        I_BUSER => gmem_BUSER);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_runLayer_Pipeline_1_fu_193_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runLayer_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_runLayer_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runLayer_Pipeline_1_fu_193_ap_ready = ap_const_logic_1)) then 
                    grp_runLayer_Pipeline_1_fu_193_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runLayer_Pipeline_2_fu_201_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runLayer_Pipeline_2_fu_201_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state19) and (ap_const_logic_1 = ap_CS_fsm_state18))) then 
                    grp_runLayer_Pipeline_2_fu_201_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runLayer_Pipeline_2_fu_201_ap_ready = ap_const_logic_1)) then 
                    grp_runLayer_Pipeline_2_fu_201_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                    grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_ready = ap_const_logic_1)) then 
                    grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    outNeurons_fu_108_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                outNeurons_fu_108 <= ap_const_lv8_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                outNeurons_fu_108 <= outNeurons_2_reg_432;
            end if; 
        end if;
    end process;

    phi_mul_fu_104_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                phi_mul_fu_104 <= ap_const_lv23_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
                phi_mul_fu_104 <= add_ln24_reg_424;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                add_ln24_reg_424 <= add_ln24_fu_280_p2;
                outNeurons_2_reg_432 <= outNeurons_2_fu_291_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                    conv4_reg_407(15 downto 0) <= conv4_fu_263_p1(15 downto 0);
                empty_24_reg_417 <= empty_24_fu_269_p2;
                    zext_ln26_reg_412(15 downto 0) <= zext_ln26_fu_266_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                    idxprom17_reg_448(7 downto 0) <= idxprom17_fu_334_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                numOfInNeurons_read_reg_370 <= numOfInNeurons;
                trunc_ln1_reg_397 <= input_r(63 downto 1);
                trunc_ln_reg_391 <= bias(63 downto 1);
                weights_read_reg_380 <= weights;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                output_r_addr_1_reg_469 <= idxprom17_reg_448(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0))) then
                output_r_addr_reg_454 <= idxprom17_fu_334_p1(7 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                output_r_load_reg_459 <= output_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln24_fu_285_p2 = ap_const_lv1_0) and (empty_24_reg_417 = ap_const_lv1_0))) then
                p_cast_reg_437 <= add_ln26_fu_309_p2(63 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                tmp_bias_load_reg_474 <= tmp_bias_q0;
            end if;
        end if;
    end process;
    conv4_reg_407(31 downto 16) <= "0000000000000000";
    zext_ln26_reg_412(22 downto 16) <= "0000000";
    idxprom17_reg_448(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state11, icmp_ln24_fu_285_p2, ap_CS_fsm_state20, grp_runLayer_Pipeline_1_fu_193_ap_done, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done, gmem_ARREADY, ap_CS_fsm_state22, ap_block_state20_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state10) and (grp_runLayer_Pipeline_1_fu_193_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln24_fu_285_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln24_fu_285_p2 = ap_const_lv1_0) and (empty_24_reg_417 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (gmem_ARREADY = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (empty_24_reg_417 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_boolean_0 = ap_block_state20_on_subcall_done) and (empty_24_reg_417 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state21;
                else
                    ap_NS_fsm <= ap_ST_fsm_state20;
                end if;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state22) and (grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state23;
                else
                    ap_NS_fsm <= ap_ST_fsm_state22;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln24_fu_280_p2 <= std_logic_vector(unsigned(phi_mul_fu_104) + unsigned(zext_ln26_reg_412));
    add_ln26_fu_309_p2 <= std_logic_vector(unsigned(zext_ln26_1_fu_305_p1) + unsigned(weights_read_reg_380));
    add_ln32_fu_350_p2 <= std_logic_vector(unsigned(output_r_q0) + unsigned(tmp_bias_load_reg_474));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state19 <= ap_NS_fsm(18);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_runLayer_Pipeline_1_fu_193_ap_done)
    begin
        if ((grp_runLayer_Pipeline_1_fu_193_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state20_blk_assign_proc : process(ap_block_state20_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state20_on_subcall_done)) then 
            ap_ST_fsm_state20_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state20_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state21_blk <= ap_const_logic_0;

    ap_ST_fsm_state22_blk_assign_proc : process(grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done)
    begin
        if ((grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state22_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state22_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(gmem_ARREADY)
    begin
        if ((gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state20_on_subcall_done_assign_proc : process(empty_24_reg_417, grp_runLayer_Pipeline_2_fu_201_ap_done)
    begin
                ap_block_state20_on_subcall_done <= ((grp_runLayer_Pipeline_2_fu_201_ap_done = ap_const_logic_0) and (empty_24_reg_417 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state11, icmp_ln24_fu_285_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln24_fu_285_p2 = ap_const_lv1_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state11, icmp_ln24_fu_285_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln24_fu_285_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    conv4_fu_263_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numOfInNeurons_read_reg_370),32));
    empty_24_fu_269_p2 <= "1" when (numOfInNeurons_read_reg_370 = ap_const_lv16_0) else "0";

    gmem_ARADDR_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARADDR, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARADDR, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARADDR, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22, sext_ln22_fu_253_p1, p_cast_cast_fu_324_p1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (gmem_ARREADY = ap_const_logic_1))) then 
            gmem_ARADDR <= p_cast_cast_fu_324_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_ARREADY = ap_const_logic_1))) then 
            gmem_ARADDR <= sext_ln22_fu_253_p1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARADDR <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARADDR <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARADDR <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARADDR;
        else 
            gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARBURST_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARBURST, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARBURST, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARBURST, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARBURST <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARBURST <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARBURST;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARBURST <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARBURST;
        else 
            gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    gmem_ARCACHE_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARCACHE, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARCACHE, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARCACHE, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARCACHE <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARCACHE <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARCACHE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARCACHE <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARCACHE;
        else 
            gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    gmem_ARID_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARID, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARID, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARID, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARID <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARID <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARID <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARID;
        else 
            gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    gmem_ARLEN_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, conv4_reg_407, ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLEN, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLEN, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLEN, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (gmem_ARREADY = ap_const_logic_1))) then 
            gmem_ARLEN <= conv4_reg_407;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_ARREADY = ap_const_logic_1))) then 
            gmem_ARLEN <= ap_const_lv32_80;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARLEN <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARLEN <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARLEN <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLEN;
        else 
            gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    gmem_ARLOCK_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLOCK, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLOCK, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLOCK, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARLOCK <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARLOCK <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARLOCK;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARLOCK <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARLOCK;
        else 
            gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    gmem_ARPROT_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARPROT, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARPROT, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARPROT, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARPROT <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARPROT <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARPROT;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARPROT <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARPROT;
        else 
            gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    gmem_ARQOS_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARQOS, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARQOS, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARQOS, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARQOS <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARQOS <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARQOS;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARQOS <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARQOS;
        else 
            gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    gmem_ARREGION_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARREGION, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARREGION, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARREGION, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARREGION <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARREGION <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARREGION;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARREGION <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARREGION;
        else 
            gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    gmem_ARSIZE_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARSIZE, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARSIZE, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARSIZE, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARSIZE <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARSIZE <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARSIZE;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARSIZE <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARSIZE;
        else 
            gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    gmem_ARUSER_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARUSER, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARUSER, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARUSER, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARUSER <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARUSER <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARUSER;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARUSER <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARUSER;
        else 
            gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    gmem_ARVALID_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state12, ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARVALID, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARVALID, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARVALID, gmem_ARREADY, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state12) and (gmem_ARREADY = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (gmem_ARREADY = ap_const_logic_1)))) then 
            gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_ARVALID <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_ARVALID <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_ARVALID <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_ARVALID;
        else 
            gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    gmem_RREADY_assign_proc : process(ap_CS_fsm_state10, empty_24_reg_417, ap_CS_fsm_state20, ap_CS_fsm_state21, grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_RREADY, grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_RREADY, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_RREADY, ap_CS_fsm_state9, ap_CS_fsm_state19, ap_CS_fsm_state22)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21))) then 
            gmem_RREADY <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state19) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            gmem_RREADY <= grp_runLayer_Pipeline_2_fu_201_m_axi_gmem_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            gmem_RREADY <= grp_runLayer_Pipeline_1_fu_193_m_axi_gmem_RREADY;
        else 
            gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    grp_runLayer_Pipeline_1_fu_193_ap_start <= grp_runLayer_Pipeline_1_fu_193_ap_start_reg;
    grp_runLayer_Pipeline_2_fu_201_ap_start <= grp_runLayer_Pipeline_2_fu_201_ap_start_reg;
    grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_ap_start_reg;
    icmp_ln24_fu_285_p2 <= "1" when (outNeurons_fu_108 = ap_const_lv8_80) else "0";
    idxprom17_fu_334_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(outNeurons_fu_108),64));
    outNeurons_2_fu_291_p2 <= std_logic_vector(unsigned(outNeurons_fu_108) + unsigned(ap_const_lv8_1));

    output_r_address0_assign_proc : process(idxprom17_fu_334_p1, ap_CS_fsm_state20, output_r_addr_reg_454, ap_CS_fsm_state23, output_r_addr_1_reg_469, ap_CS_fsm_state24, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24))) then 
            output_r_address0 <= output_r_addr_1_reg_469;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            output_r_address0 <= output_r_addr_reg_454;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            output_r_address0 <= idxprom17_fu_334_p1(7 - 1 downto 0);
        else 
            output_r_address0 <= "XXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(ap_CS_fsm_state20, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_block_state20_on_subcall_done, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((ap_const_logic_1 = ap_CS_fsm_state20) and (ap_const_boolean_0 = ap_block_state20_on_subcall_done)))) then 
            output_r_ce0 <= ap_const_logic_1;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(ap_CS_fsm_state23, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out, ap_CS_fsm_state25, add_ln32_fu_350_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            output_r_d0 <= add_ln32_fu_350_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            output_r_d0 <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_conv205_out;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(empty_24_reg_417, ap_CS_fsm_state23, ap_CS_fsm_state25)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state25) or ((ap_const_logic_1 = ap_CS_fsm_state23) and (empty_24_reg_417 = ap_const_lv1_0)))) then 
            output_r_we0 <= ap_const_logic_1;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

        p_cast_cast_fu_324_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(p_cast_reg_437),64));

        sext_ln22_fu_253_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_reg_391),64));

    shl_ln_fu_297_p3 <= (phi_mul_fu_104 & ap_const_lv1_0);

    tmp_bias_address0_assign_proc : process(ap_CS_fsm_state10, idxprom17_reg_448, ap_CS_fsm_state23, grp_runLayer_Pipeline_1_fu_193_tmp_bias_address0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            tmp_bias_address0 <= idxprom17_reg_448(7 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            tmp_bias_address0 <= grp_runLayer_Pipeline_1_fu_193_tmp_bias_address0;
        else 
            tmp_bias_address0 <= "XXXXXXX";
        end if; 
    end process;


    tmp_bias_ce0_assign_proc : process(ap_CS_fsm_state10, ap_CS_fsm_state23, grp_runLayer_Pipeline_1_fu_193_tmp_bias_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            tmp_bias_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            tmp_bias_ce0 <= grp_runLayer_Pipeline_1_fu_193_tmp_bias_ce0;
        else 
            tmp_bias_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_bias_we0_assign_proc : process(ap_CS_fsm_state10, grp_runLayer_Pipeline_1_fu_193_tmp_bias_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            tmp_bias_we0 <= grp_runLayer_Pipeline_1_fu_193_tmp_bias_we0;
        else 
            tmp_bias_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_weights_address0_assign_proc : process(empty_24_reg_417, ap_CS_fsm_state20, grp_runLayer_Pipeline_2_fu_201_tmp_weights_address0, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_address0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            tmp_weights_address0 <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_address0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0))) then 
            tmp_weights_address0 <= grp_runLayer_Pipeline_2_fu_201_tmp_weights_address0;
        else 
            tmp_weights_address0 <= "XXXXXXX";
        end if; 
    end process;


    tmp_weights_ce0_assign_proc : process(empty_24_reg_417, ap_CS_fsm_state20, grp_runLayer_Pipeline_2_fu_201_tmp_weights_ce0, grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_ce0, ap_CS_fsm_state22)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            tmp_weights_ce0 <= grp_runLayer_Pipeline_VITIS_LOOP_28_2_fu_210_tmp_weights_ce0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0))) then 
            tmp_weights_ce0 <= grp_runLayer_Pipeline_2_fu_201_tmp_weights_ce0;
        else 
            tmp_weights_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_weights_we0_assign_proc : process(empty_24_reg_417, ap_CS_fsm_state20, grp_runLayer_Pipeline_2_fu_201_tmp_weights_we0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state20) and (empty_24_reg_417 = ap_const_lv1_0))) then 
            tmp_weights_we0 <= grp_runLayer_Pipeline_2_fu_201_tmp_weights_we0;
        else 
            tmp_weights_we0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln26_1_fu_305_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_297_p3),64));
    zext_ln26_fu_266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numOfInNeurons_read_reg_370),23));
end behav;
