// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="runLayer_runLayer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.884000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=4,HLS_SYN_DSP=0,HLS_SYN_FF=746,HLS_SYN_LUT=965,HLS_VERSION=2021_2}" *)

module runLayer (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_state3 = 9'd4;
parameter    ap_ST_fsm_state4 = 9'd8;
parameter    ap_ST_fsm_state5 = 9'd16;
parameter    ap_ST_fsm_state6 = 9'd32;
parameter    ap_ST_fsm_state7 = 9'd64;
parameter    ap_ST_fsm_state8 = 9'd128;
parameter    ap_ST_fsm_state9 = 9'd256;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 11;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] input_r_q0;
reg   [1:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [15:0] output_r_d0;
wire   [15:0] output_r_q0;
wire   [15:0] weights_q0;
wire   [15:0] bias_q0;
wire   [15:0] numOfInNeurons;
reg   [15:0] numOfInNeurons_read_reg_222;
wire    ap_CS_fsm_state2;
wire  signed [8:0] trunc_ln27_fu_156_p1;
reg  signed [8:0] trunc_ln27_reg_228;
wire   [0:0] empty_fu_160_p2;
reg   [0:0] empty_reg_233;
wire   [1:0] add_ln25_fu_175_p2;
reg   [1:0] add_ln25_reg_240;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln25_fu_181_p1;
reg   [63:0] zext_ln25_reg_245;
wire   [0:0] icmp_ln25_fu_169_p2;
wire   [8:0] mul_ln27_fu_189_p2;
reg   [8:0] mul_ln27_reg_251;
reg   [1:0] output_r_addr_reg_256;
wire    ap_CS_fsm_state4;
reg   [15:0] output_r_load_reg_261;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire   [15:0] tmp_bias_q0;
reg   [15:0] tmp_bias_load_reg_271;
wire    ap_CS_fsm_state8;
reg   [6:0] tmp_weights_address0;
reg    tmp_weights_ce0;
reg    tmp_weights_we0;
wire   [15:0] tmp_weights_q0;
reg   [6:0] tmp_bias_address0;
reg    tmp_bias_ce0;
reg    tmp_bias_we0;
wire    grp_runLayer_Pipeline_1_fu_123_ap_start;
wire    grp_runLayer_Pipeline_1_fu_123_ap_done;
wire    grp_runLayer_Pipeline_1_fu_123_ap_idle;
wire    grp_runLayer_Pipeline_1_fu_123_ap_ready;
wire   [1:0] grp_runLayer_Pipeline_1_fu_123_bias_address0;
wire    grp_runLayer_Pipeline_1_fu_123_bias_ce0;
wire   [6:0] grp_runLayer_Pipeline_1_fu_123_tmp_bias_address0;
wire    grp_runLayer_Pipeline_1_fu_123_tmp_bias_ce0;
wire    grp_runLayer_Pipeline_1_fu_123_tmp_bias_we0;
wire   [15:0] grp_runLayer_Pipeline_1_fu_123_tmp_bias_d0;
wire    grp_runLayer_Pipeline_2_fu_131_ap_start;
wire    grp_runLayer_Pipeline_2_fu_131_ap_done;
wire    grp_runLayer_Pipeline_2_fu_131_ap_idle;
wire    grp_runLayer_Pipeline_2_fu_131_ap_ready;
wire   [8:0] grp_runLayer_Pipeline_2_fu_131_weights_address0;
wire    grp_runLayer_Pipeline_2_fu_131_weights_ce0;
wire   [6:0] grp_runLayer_Pipeline_2_fu_131_tmp_weights_address0;
wire    grp_runLayer_Pipeline_2_fu_131_tmp_weights_ce0;
wire    grp_runLayer_Pipeline_2_fu_131_tmp_weights_we0;
wire   [15:0] grp_runLayer_Pipeline_2_fu_131_tmp_weights_d0;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_done;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_idle;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_ready;
wire   [6:0] grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_address0;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_ce0;
wire   [6:0] grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_address0;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_ce0;
wire   [15:0] grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_conv205_out;
wire    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_conv205_out_ap_vld;
reg    grp_runLayer_Pipeline_1_fu_123_ap_start_reg;
reg    grp_runLayer_Pipeline_2_fu_131_ap_start_reg;
reg    grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg;
wire    ap_CS_fsm_state6;
reg   [1:0] outNeurons_fu_76;
reg    ap_block_state4_on_subcall_done;
wire    ap_CS_fsm_state9;
wire   [15:0] add_ln33_fu_203_p2;
wire   [1:0] mul_ln27_fu_189_p0;
reg   [8:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire   [8:0] mul_ln27_fu_189_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 grp_runLayer_Pipeline_1_fu_123_ap_start_reg = 1'b0;
#0 grp_runLayer_Pipeline_2_fu_131_ap_start_reg = 1'b0;
#0 grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg = 1'b0;
end

runLayer_tmp_weights_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
tmp_weights_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(tmp_weights_address0),
    .ce0(tmp_weights_ce0),
    .we0(tmp_weights_we0),
    .d0(grp_runLayer_Pipeline_2_fu_131_tmp_weights_d0),
    .q0(tmp_weights_q0)
);

runLayer_tmp_weights_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
tmp_bias_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(tmp_bias_address0),
    .ce0(tmp_bias_ce0),
    .we0(tmp_bias_we0),
    .d0(grp_runLayer_Pipeline_1_fu_123_tmp_bias_d0),
    .q0(tmp_bias_q0)
);

runLayer_runLayer_Pipeline_1 grp_runLayer_Pipeline_1_fu_123(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runLayer_Pipeline_1_fu_123_ap_start),
    .ap_done(grp_runLayer_Pipeline_1_fu_123_ap_done),
    .ap_idle(grp_runLayer_Pipeline_1_fu_123_ap_idle),
    .ap_ready(grp_runLayer_Pipeline_1_fu_123_ap_ready),
    .bias_address0(grp_runLayer_Pipeline_1_fu_123_bias_address0),
    .bias_ce0(grp_runLayer_Pipeline_1_fu_123_bias_ce0),
    .bias_q0(bias_q0),
    .tmp_bias_address0(grp_runLayer_Pipeline_1_fu_123_tmp_bias_address0),
    .tmp_bias_ce0(grp_runLayer_Pipeline_1_fu_123_tmp_bias_ce0),
    .tmp_bias_we0(grp_runLayer_Pipeline_1_fu_123_tmp_bias_we0),
    .tmp_bias_d0(grp_runLayer_Pipeline_1_fu_123_tmp_bias_d0)
);

runLayer_runLayer_Pipeline_2 grp_runLayer_Pipeline_2_fu_131(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runLayer_Pipeline_2_fu_131_ap_start),
    .ap_done(grp_runLayer_Pipeline_2_fu_131_ap_done),
    .ap_idle(grp_runLayer_Pipeline_2_fu_131_ap_idle),
    .ap_ready(grp_runLayer_Pipeline_2_fu_131_ap_ready),
    .mul_ln27(mul_ln27_reg_251),
    .weights_address0(grp_runLayer_Pipeline_2_fu_131_weights_address0),
    .weights_ce0(grp_runLayer_Pipeline_2_fu_131_weights_ce0),
    .weights_q0(weights_q0),
    .tmp_weights_address0(grp_runLayer_Pipeline_2_fu_131_tmp_weights_address0),
    .tmp_weights_ce0(grp_runLayer_Pipeline_2_fu_131_tmp_weights_ce0),
    .tmp_weights_we0(grp_runLayer_Pipeline_2_fu_131_tmp_weights_we0),
    .tmp_weights_d0(grp_runLayer_Pipeline_2_fu_131_tmp_weights_d0),
    .conv5(numOfInNeurons_read_reg_222)
);

runLayer_runLayer_Pipeline_VITIS_LOOP_29_2 grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start),
    .ap_done(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_done),
    .ap_idle(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_idle),
    .ap_ready(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_ready),
    .output_r_load(output_r_load_reg_261),
    .numOfInNeurons_cast1(numOfInNeurons_read_reg_222),
    .tmp_weights_address0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_address0),
    .tmp_weights_ce0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_ce0),
    .tmp_weights_q0(tmp_weights_q0),
    .input_r_address0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_address0),
    .input_r_ce0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_ce0),
    .input_r_q0(input_r_q0),
    .conv205_out(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_conv205_out),
    .conv205_out_ap_vld(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_conv205_out_ap_vld)
);

runLayer_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0),
    .output_r_q0(output_r_q0),
    .bias_address0(grp_runLayer_Pipeline_1_fu_123_bias_address0),
    .bias_ce0(grp_runLayer_Pipeline_1_fu_123_bias_ce0),
    .bias_q0(bias_q0),
    .numOfInNeurons(numOfInNeurons),
    .input_r_address0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_address0),
    .input_r_ce0(grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_input_r_ce0),
    .input_r_q0(input_r_q0),
    .weights_address0(grp_runLayer_Pipeline_2_fu_131_weights_address0),
    .weights_ce0(grp_runLayer_Pipeline_2_fu_131_weights_ce0),
    .weights_q0(weights_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

runLayer_mul_2ns_9s_9_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 2 ),
    .din1_WIDTH( 9 ),
    .dout_WIDTH( 9 ))
mul_2ns_9s_9_1_1_U14(
    .din0(mul_ln27_fu_189_p0),
    .din1(trunc_ln27_reg_228),
    .dout(mul_ln27_fu_189_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runLayer_Pipeline_1_fu_123_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            grp_runLayer_Pipeline_1_fu_123_ap_start_reg <= 1'b1;
        end else if ((grp_runLayer_Pipeline_1_fu_123_ap_ready == 1'b1)) begin
            grp_runLayer_Pipeline_1_fu_123_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runLayer_Pipeline_2_fu_131_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln25_fu_169_p2 == 1'd0) & (empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
            grp_runLayer_Pipeline_2_fu_131_ap_start_reg <= 1'b1;
        end else if ((grp_runLayer_Pipeline_2_fu_131_ap_ready == 1'b1)) begin
            grp_runLayer_Pipeline_2_fu_131_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg <= 1'b1;
        end else if ((grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_ready == 1'b1)) begin
            grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        outNeurons_fu_76 <= 2'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        outNeurons_fu_76 <= add_ln25_reg_240;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln25_reg_240 <= add_ln25_fu_175_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        empty_reg_233 <= empty_fu_160_p2;
        numOfInNeurons_read_reg_222 <= numOfInNeurons;
        trunc_ln27_reg_228 <= trunc_ln27_fu_156_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_169_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        mul_ln27_reg_251 <= mul_ln27_fu_189_p2;
        zext_ln25_reg_245[1 : 0] <= zext_ln25_fu_181_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_addr_reg_256 <= zext_ln25_reg_245;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        output_r_load_reg_261 <= output_r_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tmp_bias_load_reg_271 <= tmp_bias_q0;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_runLayer_Pipeline_1_fu_123_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state4_on_subcall_done)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln25_fu_169_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln25_fu_169_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7))) begin
        output_r_address0 = output_r_addr_reg_256;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        output_r_address0 = zext_ln25_reg_245;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done)))) begin
        output_r_ce0 = 1'b1;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        output_r_d0 = add_ln33_fu_203_p2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        output_r_d0 = grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_conv205_out;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | ((empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state7)))) begin
        output_r_we0 = 1'b1;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_bias_address0 = zext_ln25_reg_245;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_bias_address0 = grp_runLayer_Pipeline_1_fu_123_tmp_bias_address0;
    end else begin
        tmp_bias_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_bias_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_bias_ce0 = grp_runLayer_Pipeline_1_fu_123_tmp_bias_ce0;
    end else begin
        tmp_bias_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_bias_we0 = grp_runLayer_Pipeline_1_fu_123_tmp_bias_we0;
    end else begin
        tmp_bias_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_weights_address0 = grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_address0;
    end else if (((empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_weights_address0 = grp_runLayer_Pipeline_2_fu_131_tmp_weights_address0;
    end else begin
        tmp_weights_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        tmp_weights_ce0 = grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_tmp_weights_ce0;
    end else if (((empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_weights_ce0 = grp_runLayer_Pipeline_2_fu_131_tmp_weights_ce0;
    end else begin
        tmp_weights_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        tmp_weights_we0 = grp_runLayer_Pipeline_2_fu_131_tmp_weights_we0;
    end else begin
        tmp_weights_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_runLayer_Pipeline_1_fu_123_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln25_fu_169_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((empty_reg_233 == 1'd1) & (1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((empty_reg_233 == 1'd0) & (1'b1 == ap_CS_fsm_state4) & (1'b0 == ap_block_state4_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_fu_175_p2 = (outNeurons_fu_76 + 2'd1);

assign add_ln33_fu_203_p2 = (output_r_q0 + tmp_bias_load_reg_271);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state4_on_subcall_done = ((empty_reg_233 == 1'd0) & (grp_runLayer_Pipeline_2_fu_131_ap_done == 1'b0));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_fu_160_p2 = ((numOfInNeurons == 16'd0) ? 1'b1 : 1'b0);

assign grp_runLayer_Pipeline_1_fu_123_ap_start = grp_runLayer_Pipeline_1_fu_123_ap_start_reg;

assign grp_runLayer_Pipeline_2_fu_131_ap_start = grp_runLayer_Pipeline_2_fu_131_ap_start_reg;

assign grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start = grp_runLayer_Pipeline_VITIS_LOOP_29_2_fu_140_ap_start_reg;

assign icmp_ln25_fu_169_p2 = ((outNeurons_fu_76 == 2'd3) ? 1'b1 : 1'b0);

assign mul_ln27_fu_189_p0 = mul_ln27_fu_189_p00;

assign mul_ln27_fu_189_p00 = outNeurons_fu_76;

assign trunc_ln27_fu_156_p1 = numOfInNeurons[8:0];

assign zext_ln25_fu_181_p1 = outNeurons_fu_76;

always @ (posedge ap_clk) begin
    zext_ln25_reg_245[63:2] <= 62'b00000000000000000000000000000000000000000000000000000000000000;
end

endmodule //runLayer
