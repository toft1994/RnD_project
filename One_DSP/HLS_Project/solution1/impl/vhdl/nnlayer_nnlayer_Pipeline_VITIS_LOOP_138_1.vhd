-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nnlayer_nnlayer_Pipeline_VITIS_LOOP_138_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_r_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    input_r_empty_n : IN STD_LOGIC;
    input_r_read : OUT STD_LOGIC;
    input_r_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    input_r_full_n : IN STD_LOGIC;
    input_r_write : OUT STD_LOGIC;
    weights_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    bias_1 : IN STD_LOGIC_VECTOR (15 downto 0);
    output_r : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_r_ap_vld : OUT STD_LOGIC );
end;


architecture behav of nnlayer_nnlayer_Pipeline_VITIS_LOOP_138_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal icmp_ln138_reg_401 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage4 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal input_r_i_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal input_r_o_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln138_fu_111_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal reg_99 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal tmp_5_reg_510 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal j_fu_58 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_2_fu_117_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_j_1 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage3_01001 : BOOLEAN;
    signal ap_block_pp0_stage4_01001 : BOOLEAN;
    signal ap_block_pp0_stage5_01001 : BOOLEAN;
    signal ap_block_pp0_stage6_01001 : BOOLEAN;
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_324_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_fu_152_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_1_fu_177_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_331_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_1_fu_177_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_2_fu_202_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_340_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_2_fu_202_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_3_fu_227_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_349_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_3_fu_227_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_244_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_358_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_4_fu_244_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_fu_269_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_367_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_292_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_376_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_6_fu_292_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_7_fu_309_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_385_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln717_7_fu_309_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_340_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_358_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_367_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_376_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_385_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_fu_324_ce : STD_LOGIC;
    signal grp_fu_331_ce : STD_LOGIC;
    signal grp_fu_340_ce : STD_LOGIC;
    signal grp_fu_349_ce : STD_LOGIC;
    signal grp_fu_358_ce : STD_LOGIC;
    signal grp_fu_367_ce : STD_LOGIC;
    signal grp_fu_376_ce : STD_LOGIC;
    signal grp_fu_385_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component nnlayer_mul_mul_16s_16s_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component nnlayer_mac_muladd_16s_16s_24ns_24_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        din2 : IN STD_LOGIC_VECTOR (23 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;


    component nnlayer_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_mul_16s_16s_24_4_1_U1 : component nnlayer_mul_mul_16s_16s_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        ce => grp_fu_324_ce,
        dout => grp_fu_324_p2);

    mac_muladd_16s_16s_24ns_24_4_1_U2 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        din2 => grp_fu_331_p2,
        ce => grp_fu_331_ce,
        dout => grp_fu_331_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U3 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        din2 => grp_fu_340_p2,
        ce => grp_fu_340_ce,
        dout => grp_fu_340_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U4 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        din2 => grp_fu_349_p2,
        ce => grp_fu_349_ce,
        dout => grp_fu_349_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U5 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        din2 => grp_fu_358_p2,
        ce => grp_fu_358_ce,
        dout => grp_fu_358_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U6 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => input_r_dout,
        din2 => grp_fu_367_p2,
        ce => grp_fu_367_ce,
        dout => grp_fu_367_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U7 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => reg_99,
        din2 => grp_fu_376_p2,
        ce => grp_fu_376_ce,
        dout => grp_fu_376_p3);

    mac_muladd_16s_16s_24ns_24_4_1_U8 : component nnlayer_mac_muladd_16s_16s_24ns_24_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        din2_WIDTH => 24,
        dout_WIDTH => 24)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => weights_1,
        din1 => reg_99,
        din2 => grp_fu_385_p2,
        ce => grp_fu_385_ce,
        dout => grp_fu_385_p3);

    flow_control_loop_pipe_sequential_init_U : component nnlayer_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage4,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    j_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln138_fu_111_p2 = ap_const_lv1_0))) then 
                    j_fu_58 <= j_2_fu_117_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    j_fu_58 <= ap_const_lv4_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln138_reg_401 <= icmp_ln138_fu_111_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_99 <= input_r_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_5_reg_510 <= tmp_5_fu_269_p1(23 downto 8);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage4_subdone, ap_condition_exit_pp0_iter0_stage4, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage4)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, input_r_empty_n, input_r_full_n)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((input_r_full_n = ap_const_logic_0) or (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, input_r_empty_n, input_r_full_n)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((input_r_full_n = ap_const_logic_0) or (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, input_r_empty_n, input_r_full_n)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and ((input_r_full_n = ap_const_logic_0) or (input_r_empty_n = ap_const_logic_0)));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage1_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage2_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage3_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage3_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage4_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage5_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage6_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage7_01001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_enable_reg_pp0_iter0, input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0))));
    end process;

        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state2_pp0_stage1_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state2_pp0_stage1_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state3_pp0_stage2_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state4_pp0_stage3_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state5_pp0_stage4_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state6_pp0_stage5_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state7_pp0_stage6_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(input_r_empty_n, icmp_ln138_reg_401, input_r_full_n)
    begin
                ap_block_state8_pp0_stage7_iter0 <= (((input_r_full_n = ap_const_logic_0) and (icmp_ln138_reg_401 = ap_const_lv1_0)) or ((icmp_ln138_reg_401 = ap_const_lv1_0) and (input_r_empty_n = ap_const_logic_0)));
    end process;


    ap_block_state9_pp0_stage0_iter1_assign_proc : process(input_r_empty_n, input_r_full_n)
    begin
                ap_block_state9_pp0_stage0_iter1 <= ((input_r_full_n = ap_const_logic_0) or (input_r_empty_n = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage4, icmp_ln138_reg_401, ap_block_pp0_stage4_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (icmp_ln138_reg_401 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage4;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_j_1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, j_fu_58, ap_loop_init)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_j_1 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_j_1 <= j_fu_58;
        end if; 
    end process;


    grp_fu_324_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_324_ce <= ap_const_logic_1;
        else 
            grp_fu_324_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_331_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_331_ce <= ap_const_logic_1;
        else 
            grp_fu_331_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_331_p2 <= (tmp_fu_152_p4 & ap_const_lv8_0);

    grp_fu_340_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
            grp_fu_340_ce <= ap_const_logic_1;
        else 
            grp_fu_340_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_340_p2 <= (tmp_1_fu_177_p4 & ap_const_lv8_0);

    grp_fu_349_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_349_ce <= ap_const_logic_1;
        else 
            grp_fu_349_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_349_p2 <= (tmp_2_fu_202_p4 & ap_const_lv8_0);

    grp_fu_358_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_358_ce <= ap_const_logic_1;
        else 
            grp_fu_358_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_358_p2 <= (tmp_3_fu_227_p4 & ap_const_lv8_0);

    grp_fu_367_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_367_ce <= ap_const_logic_1;
        else 
            grp_fu_367_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_367_p2 <= (tmp_4_fu_244_p4 & ap_const_lv8_0);

    grp_fu_376_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_376_ce <= ap_const_logic_1;
        else 
            grp_fu_376_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_376_p2 <= (tmp_5_reg_510 & ap_const_lv8_0);

    grp_fu_385_ce_assign_proc : process(ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_385_ce <= ap_const_logic_1;
        else 
            grp_fu_385_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_385_p2 <= (tmp_6_fu_292_p4 & ap_const_lv8_0);
    icmp_ln138_fu_111_p2 <= "1" when (ap_sig_allocacmp_j_1 = ap_const_lv4_8) else "0";
    input_r_din <= input_r_dout;

    input_r_i_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, input_r_empty_n, icmp_ln138_reg_401, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            input_r_i_blk_n <= input_r_empty_n;
        else 
            input_r_i_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_r_o_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln138_reg_401, input_r_full_n, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_block_pp0_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            input_r_o_blk_n <= input_r_full_n;
        else 
            input_r_o_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    input_r_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln138_reg_401, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_r_read <= ap_const_logic_1;
        else 
            input_r_read <= ap_const_logic_0;
        end if; 
    end process;


    input_r_write_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, icmp_ln138_reg_401, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage0_11001, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln138_reg_401 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            input_r_write <= ap_const_logic_1;
        else 
            input_r_write <= ap_const_logic_0;
        end if; 
    end process;

    j_2_fu_117_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_j_1) + unsigned(ap_const_lv4_1));
    output_r <= std_logic_vector(unsigned(bias_1) + unsigned(trunc_ln717_7_fu_309_p4));

    output_r_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            output_r_ap_vld <= ap_const_logic_1;
        else 
            output_r_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    tmp_1_fu_177_p1 <= grp_fu_331_p3;
    tmp_1_fu_177_p4 <= tmp_1_fu_177_p1(23 downto 8);
    tmp_2_fu_202_p1 <= grp_fu_340_p3;
    tmp_2_fu_202_p4 <= tmp_2_fu_202_p1(23 downto 8);
    tmp_3_fu_227_p1 <= grp_fu_349_p3;
    tmp_3_fu_227_p4 <= tmp_3_fu_227_p1(23 downto 8);
    tmp_4_fu_244_p1 <= grp_fu_358_p3;
    tmp_4_fu_244_p4 <= tmp_4_fu_244_p1(23 downto 8);
    tmp_5_fu_269_p1 <= grp_fu_367_p3;
    tmp_6_fu_292_p1 <= grp_fu_376_p3;
    tmp_6_fu_292_p4 <= tmp_6_fu_292_p1(23 downto 8);
    tmp_fu_152_p4 <= grp_fu_324_p2(23 downto 8);
    trunc_ln717_7_fu_309_p1 <= grp_fu_385_p3;
    trunc_ln717_7_fu_309_p4 <= trunc_ln717_7_fu_309_p1(23 downto 8);
end behav;
