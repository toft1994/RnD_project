-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity NeuralNetwork is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 15;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of NeuralNetwork is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "NeuralNetwork_NeuralNetwork,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.563000,HLS_SYN_LAT=5999,HLS_SYN_TPT=none,HLS_SYN_MEM=23,HLS_SYN_DSP=0,HLS_SYN_FF=1404,HLS_SYN_LUT=2494,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_FE : STD_LOGIC_VECTOR (7 downto 0) := "11111110";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal biasWeight_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal biasWeight_input_r_ce0 : STD_LOGIC;
    signal biasWeight_input_r_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal runNN_r : STD_LOGIC_VECTOR (7 downto 0);
    signal setBais_r : STD_LOGIC_VECTOR (7 downto 0);
    signal setWeight_r : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bias_s_ce0 : STD_LOGIC;
    signal bias_s_we0 : STD_LOGIC;
    signal bias_s_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal weights_s_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal weights_s_ce0 : STD_LOGIC;
    signal weights_s_we0 : STD_LOGIC;
    signal weights_s_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal and_ln129_fu_160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln129_reg_214 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_fu_184_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln132_reg_218 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_fu_208_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln136_reg_222 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_done : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_idle : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_ready : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_ce0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_ce0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_we0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_done : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_idle : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_ready : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_ce0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_ce0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_we0 : STD_LOGIC;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_run_classification_fu_127_ap_start : STD_LOGIC;
    signal grp_run_classification_fu_127_ap_done : STD_LOGIC;
    signal grp_run_classification_fu_127_ap_idle : STD_LOGIC;
    signal grp_run_classification_fu_127_ap_ready : STD_LOGIC;
    signal grp_run_classification_fu_127_input_r_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_run_classification_fu_127_input_r_ce0 : STD_LOGIC;
    signal grp_run_classification_fu_127_bias_s_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_run_classification_fu_127_bias_s_ce0 : STD_LOGIC;
    signal grp_run_classification_fu_127_weights_s_address0 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_run_classification_fu_127_weights_s_ce0 : STD_LOGIC;
    signal grp_run_classification_fu_127_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_res_1_phi_fu_98_p8 : STD_LOGIC_VECTOR (7 downto 0);
    signal res_1_reg_94 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_predicate_op44_call_state2 : BOOLEAN;
    signal ap_predicate_op46_call_state2 : BOOLEAN;
    signal ap_block_state2_on_subcall_done : BOOLEAN;
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg : STD_LOGIC := '0';
    signal grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg : STD_LOGIC := '0';
    signal grp_run_classification_fu_127_ap_start_reg : STD_LOGIC := '0';
    signal or_ln129_fu_148_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln129_1_fu_154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln129_fu_142_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln132_fu_172_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln132_1_fu_178_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_fu_166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln136_fu_190_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln136_fu_196_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln136_1_fu_202_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return : STD_LOGIC_VECTOR (7 downto 0);

    component NeuralNetwork_NeuralNetwork_Pipeline_VITIS_LOOP_40_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        biasWeight_input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        biasWeight_input_r_ce0 : OUT STD_LOGIC;
        biasWeight_input_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_s_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        weights_s_ce0 : OUT STD_LOGIC;
        weights_s_we0 : OUT STD_LOGIC;
        weights_s_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component NeuralNetwork_NeuralNetwork_Pipeline_VITIS_LOOP_17_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        biasWeight_input_r_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        biasWeight_input_r_ce0 : OUT STD_LOGIC;
        biasWeight_input_r_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bias_s_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_s_ce0 : OUT STD_LOGIC;
        bias_s_we0 : OUT STD_LOGIC;
        bias_s_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component NeuralNetwork_run_classification IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_r_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_s_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_s_ce0 : OUT STD_LOGIC;
        bias_s_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        weights_s_address0 : OUT STD_LOGIC_VECTOR (13 downto 0);
        weights_s_ce0 : OUT STD_LOGIC;
        weights_s_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component NeuralNetwork_bias_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component NeuralNetwork_weights_s_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component NeuralNetwork_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_return : IN STD_LOGIC_VECTOR (7 downto 0);
        runNN_r : OUT STD_LOGIC_VECTOR (7 downto 0);
        setBais_r : OUT STD_LOGIC_VECTOR (7 downto 0);
        setWeight_r : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_r_address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        input_r_ce0 : IN STD_LOGIC;
        input_r_q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        biasWeight_input_r_address0 : IN STD_LOGIC_VECTOR (13 downto 0);
        biasWeight_input_r_ce0 : IN STD_LOGIC;
        biasWeight_input_r_q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    bias_s_U : component NeuralNetwork_bias_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 150,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => bias_s_address0,
        ce0 => bias_s_ce0,
        we0 => bias_s_we0,
        d0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_d0,
        q0 => bias_s_q0);

    weights_s_U : component NeuralNetwork_weights_s_RAM_AUTO_1R1W
    generic map (
        DataWidth => 8,
        AddressRange => 11200,
        AddressWidth => 14)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => weights_s_address0,
        ce0 => weights_s_ce0,
        we0 => weights_s_we0,
        d0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_d0,
        q0 => weights_s_q0);

    grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111 : component NeuralNetwork_NeuralNetwork_Pipeline_VITIS_LOOP_40_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start,
        ap_done => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_done,
        ap_idle => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_idle,
        ap_ready => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_ready,
        biasWeight_input_r_address0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_address0,
        biasWeight_input_r_ce0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_ce0,
        biasWeight_input_r_q0 => biasWeight_input_r_q0,
        weights_s_address0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_address0,
        weights_s_ce0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_ce0,
        weights_s_we0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_we0,
        weights_s_d0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_d0);

    grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119 : component NeuralNetwork_NeuralNetwork_Pipeline_VITIS_LOOP_17_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start,
        ap_done => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_done,
        ap_idle => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_idle,
        ap_ready => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_ready,
        biasWeight_input_r_address0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_address0,
        biasWeight_input_r_ce0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_ce0,
        biasWeight_input_r_q0 => biasWeight_input_r_q0,
        bias_s_address0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_address0,
        bias_s_ce0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_ce0,
        bias_s_we0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_we0,
        bias_s_d0 => grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_d0);

    grp_run_classification_fu_127 : component NeuralNetwork_run_classification
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_run_classification_fu_127_ap_start,
        ap_done => grp_run_classification_fu_127_ap_done,
        ap_idle => grp_run_classification_fu_127_ap_idle,
        ap_ready => grp_run_classification_fu_127_ap_ready,
        input_r_address0 => grp_run_classification_fu_127_input_r_address0,
        input_r_ce0 => grp_run_classification_fu_127_input_r_ce0,
        input_r_q0 => input_r_q0,
        bias_s_address0 => grp_run_classification_fu_127_bias_s_address0,
        bias_s_ce0 => grp_run_classification_fu_127_bias_s_ce0,
        bias_s_q0 => bias_s_q0,
        weights_s_address0 => grp_run_classification_fu_127_weights_s_address0,
        weights_s_ce0 => grp_run_classification_fu_127_weights_s_ce0,
        weights_s_q0 => weights_s_q0,
        ap_return => grp_run_classification_fu_127_ap_return);

    control_s_axi_U : component NeuralNetwork_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_return => ap_phi_mux_res_1_phi_fu_98_p8,
        runNN_r => runNN_r,
        setBais_r => setBais_r,
        setWeight_r => setWeight_r,
        input_r_address0 => grp_run_classification_fu_127_input_r_address0,
        input_r_ce0 => grp_run_classification_fu_127_input_r_ce0,
        input_r_q0 => input_r_q0,
        biasWeight_input_r_address0 => biasWeight_input_r_address0,
        biasWeight_input_r_ce0 => biasWeight_input_r_ce0,
        biasWeight_input_r_q0 => biasWeight_input_r_q0,
        ap_local_deadlock => ap_local_deadlock);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln129_fu_160_p2) and (ap_const_lv1_1 = and_ln132_fu_184_p2) and (ap_start = ap_const_logic_1))) then 
                    grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_ready = ap_const_logic_1)) then 
                    grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln132_fu_184_p2) and (ap_const_lv1_0 = and_ln129_fu_160_p2) and (ap_const_lv1_1 = and_ln136_fu_208_p2) and (ap_start = ap_const_logic_1))) then 
                    grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_ready = ap_const_logic_1)) then 
                    grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_run_classification_fu_127_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_run_classification_fu_127_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_1 = and_ln129_fu_160_p2) and (ap_start = ap_const_logic_1))) then 
                    grp_run_classification_fu_127_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_run_classification_fu_127_ap_ready = ap_const_logic_1)) then 
                    grp_run_classification_fu_127_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    res_1_reg_94_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln136_fu_208_p2) and (ap_const_lv1_0 = and_ln132_fu_184_p2) and (ap_const_lv1_0 = and_ln129_fu_160_p2) and (ap_start = ap_const_logic_1))) then 
                res_1_reg_94 <= ap_const_lv8_FE;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln132_reg_218) and (ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_lv1_1 = and_ln136_reg_222)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_lv1_1 = and_ln132_reg_218)))) then 
                res_1_reg_94 <= ap_const_lv8_FF;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done) and (ap_const_lv1_1 = and_ln129_reg_214))) then 
                res_1_reg_94 <= grp_run_classification_fu_127_ap_return;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                and_ln129_reg_214 <= and_ln129_fu_160_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln129_fu_160_p2))) then
                and_ln132_reg_218 <= and_ln132_fu_184_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_lv1_0 = and_ln132_fu_184_p2) and (ap_const_lv1_0 = and_ln129_fu_160_p2))) then
                and_ln136_reg_222 <= and_ln136_fu_208_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    and_ln129_fu_160_p2 <= (icmp_ln129_fu_142_p2 and icmp_ln129_1_fu_154_p2);
    and_ln132_fu_184_p2 <= (icmp_ln132_fu_166_p2 and icmp_ln132_1_fu_178_p2);
    and_ln136_fu_208_p2 <= (icmp_ln136_fu_196_p2 and icmp_ln136_1_fu_202_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(ap_block_state2_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state2_on_subcall_done)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state2_on_subcall_done_assign_proc : process(and_ln129_reg_214, grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_done, grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_done, grp_run_classification_fu_127_ap_done, ap_predicate_op44_call_state2, ap_predicate_op46_call_state2)
    begin
                ap_block_state2_on_subcall_done <= (((ap_const_lv1_1 = and_ln129_reg_214) and (grp_run_classification_fu_127_ap_done = ap_const_logic_0)) or ((grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_done = ap_const_logic_0) and (ap_predicate_op46_call_state2 = ap_const_boolean_1)) or ((grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_done = ap_const_logic_0) and (ap_predicate_op44_call_state2 = ap_const_boolean_1)));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_phi_mux_res_1_phi_fu_98_p8_assign_proc : process(and_ln129_reg_214, and_ln132_reg_218, and_ln136_reg_222, grp_run_classification_fu_127_ap_return, res_1_reg_94, ap_CS_fsm_state2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln132_reg_218) and (ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_lv1_1 = and_ln136_reg_222)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_lv1_1 = and_ln132_reg_218)))) then 
            ap_phi_mux_res_1_phi_fu_98_p8 <= ap_const_lv8_FF;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_lv1_1 = and_ln129_reg_214))) then 
            ap_phi_mux_res_1_phi_fu_98_p8 <= grp_run_classification_fu_127_ap_return;
        else 
            ap_phi_mux_res_1_phi_fu_98_p8 <= res_1_reg_94;
        end if; 
    end process;


    ap_predicate_op44_call_state2_assign_proc : process(and_ln129_reg_214, and_ln132_reg_218, and_ln136_reg_222)
    begin
                ap_predicate_op44_call_state2 <= ((ap_const_lv1_0 = and_ln132_reg_218) and (ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_lv1_1 = and_ln136_reg_222));
    end process;


    ap_predicate_op46_call_state2_assign_proc : process(and_ln129_reg_214, and_ln132_reg_218)
    begin
                ap_predicate_op46_call_state2 <= ((ap_const_lv1_0 = and_ln129_reg_214) and (ap_const_lv1_1 = and_ln132_reg_218));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, ap_block_state2_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_const_boolean_0 = ap_block_state2_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    biasWeight_input_r_address0_assign_proc : process(grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_address0, grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_address0, ap_CS_fsm_state2, ap_predicate_op44_call_state2, ap_predicate_op46_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_predicate_op46_call_state2 = ap_const_boolean_1)) then 
                biasWeight_input_r_address0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_address0;
            elsif ((ap_predicate_op44_call_state2 = ap_const_boolean_1)) then 
                biasWeight_input_r_address0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_address0;
            else 
                biasWeight_input_r_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            biasWeight_input_r_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    biasWeight_input_r_ce0_assign_proc : process(grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_ce0, grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_ce0, ap_CS_fsm_state2, ap_predicate_op44_call_state2, ap_predicate_op46_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_predicate_op46_call_state2 = ap_const_boolean_1)) then 
                biasWeight_input_r_ce0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_biasWeight_input_r_ce0;
            elsif ((ap_predicate_op44_call_state2 = ap_const_boolean_1)) then 
                biasWeight_input_r_ce0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_biasWeight_input_r_ce0;
            else 
                biasWeight_input_r_ce0 <= ap_const_logic_0;
            end if;
        else 
            biasWeight_input_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_s_address0_assign_proc : process(and_ln129_reg_214, grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_address0, grp_run_classification_fu_127_bias_s_address0, ap_CS_fsm_state2, ap_predicate_op46_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_lv1_1 = and_ln129_reg_214)) then 
                bias_s_address0 <= grp_run_classification_fu_127_bias_s_address0;
            elsif ((ap_predicate_op46_call_state2 = ap_const_boolean_1)) then 
                bias_s_address0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_address0;
            else 
                bias_s_address0 <= "XXXXXXXX";
            end if;
        else 
            bias_s_address0 <= "XXXXXXXX";
        end if; 
    end process;


    bias_s_ce0_assign_proc : process(and_ln129_reg_214, grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_ce0, grp_run_classification_fu_127_bias_s_ce0, ap_CS_fsm_state2, ap_predicate_op46_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_lv1_1 = and_ln129_reg_214)) then 
                bias_s_ce0 <= grp_run_classification_fu_127_bias_s_ce0;
            elsif ((ap_predicate_op46_call_state2 = ap_const_boolean_1)) then 
                bias_s_ce0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_ce0;
            else 
                bias_s_ce0 <= ap_const_logic_0;
            end if;
        else 
            bias_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    bias_s_we0_assign_proc : process(grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_we0, ap_CS_fsm_state2, ap_predicate_op46_call_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op46_call_state2 = ap_const_boolean_1))) then 
            bias_s_we0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_bias_s_we0;
        else 
            bias_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

    grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_17_1_fu_119_ap_start_reg;
    grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_ap_start_reg;
    grp_run_classification_fu_127_ap_start <= grp_run_classification_fu_127_ap_start_reg;
    icmp_ln129_1_fu_154_p2 <= "1" when (or_ln129_fu_148_p2 = ap_const_lv8_0) else "0";
    icmp_ln129_fu_142_p2 <= "1" when (runNN_r = ap_const_lv8_1) else "0";
    icmp_ln132_1_fu_178_p2 <= "1" when (or_ln132_fu_172_p2 = ap_const_lv8_0) else "0";
    icmp_ln132_fu_166_p2 <= "1" when (setBais_r = ap_const_lv8_1) else "0";
    icmp_ln136_1_fu_202_p2 <= "1" when (setWeight_r = ap_const_lv8_1) else "0";
    icmp_ln136_fu_196_p2 <= "1" when (or_ln136_fu_190_p2 = ap_const_lv8_0) else "0";
    or_ln129_fu_148_p2 <= (setWeight_r or setBais_r);
    or_ln132_fu_172_p2 <= (setWeight_r or runNN_r);
    or_ln136_fu_190_p2 <= (setBais_r or runNN_r);

    weights_s_address0_assign_proc : process(and_ln129_reg_214, grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_address0, grp_run_classification_fu_127_weights_s_address0, ap_CS_fsm_state2, ap_predicate_op44_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_lv1_1 = and_ln129_reg_214)) then 
                weights_s_address0 <= grp_run_classification_fu_127_weights_s_address0;
            elsif ((ap_predicate_op44_call_state2 = ap_const_boolean_1)) then 
                weights_s_address0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_address0;
            else 
                weights_s_address0 <= "XXXXXXXXXXXXXX";
            end if;
        else 
            weights_s_address0 <= "XXXXXXXXXXXXXX";
        end if; 
    end process;


    weights_s_ce0_assign_proc : process(and_ln129_reg_214, grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_ce0, grp_run_classification_fu_127_weights_s_ce0, ap_CS_fsm_state2, ap_predicate_op44_call_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
            if ((ap_const_lv1_1 = and_ln129_reg_214)) then 
                weights_s_ce0 <= grp_run_classification_fu_127_weights_s_ce0;
            elsif ((ap_predicate_op44_call_state2 = ap_const_boolean_1)) then 
                weights_s_ce0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_ce0;
            else 
                weights_s_ce0 <= ap_const_logic_0;
            end if;
        else 
            weights_s_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    weights_s_we0_assign_proc : process(grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_we0, ap_CS_fsm_state2, ap_predicate_op44_call_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (ap_predicate_op44_call_state2 = ap_const_boolean_1))) then 
            weights_s_we0 <= grp_NeuralNetwork_Pipeline_VITIS_LOOP_40_1_fu_111_weights_s_we0;
        else 
            weights_s_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
