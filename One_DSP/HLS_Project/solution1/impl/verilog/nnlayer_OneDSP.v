// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nnlayer_OneDSP_nnlayer_OneDSP,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.510000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=21,HLS_SYN_DSP=0,HLS_SYN_FF=3884,HLS_SYN_LUT=4417,HLS_VERSION=2021_2}" *)

module nnlayer_OneDSP (
        ap_local_block,
        ap_clk,
        ap_rst_n,
        s_axi_control_AWVALID,
        s_axi_control_AWREADY,
        s_axi_control_AWADDR,
        s_axi_control_WVALID,
        s_axi_control_WREADY,
        s_axi_control_WDATA,
        s_axi_control_WSTRB,
        s_axi_control_ARVALID,
        s_axi_control_ARREADY,
        s_axi_control_ARADDR,
        s_axi_control_RVALID,
        s_axi_control_RREADY,
        s_axi_control_RDATA,
        s_axi_control_RRESP,
        s_axi_control_BVALID,
        s_axi_control_BREADY,
        s_axi_control_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 113'd1;
parameter    ap_ST_fsm_state2 = 113'd2;
parameter    ap_ST_fsm_state3 = 113'd4;
parameter    ap_ST_fsm_state4 = 113'd8;
parameter    ap_ST_fsm_state5 = 113'd16;
parameter    ap_ST_fsm_state6 = 113'd32;
parameter    ap_ST_fsm_state7 = 113'd64;
parameter    ap_ST_fsm_state8 = 113'd128;
parameter    ap_ST_fsm_state9 = 113'd256;
parameter    ap_ST_fsm_state10 = 113'd512;
parameter    ap_ST_fsm_state11 = 113'd1024;
parameter    ap_ST_fsm_state12 = 113'd2048;
parameter    ap_ST_fsm_state13 = 113'd4096;
parameter    ap_ST_fsm_state14 = 113'd8192;
parameter    ap_ST_fsm_state15 = 113'd16384;
parameter    ap_ST_fsm_state16 = 113'd32768;
parameter    ap_ST_fsm_state17 = 113'd65536;
parameter    ap_ST_fsm_state18 = 113'd131072;
parameter    ap_ST_fsm_state19 = 113'd262144;
parameter    ap_ST_fsm_state20 = 113'd524288;
parameter    ap_ST_fsm_state21 = 113'd1048576;
parameter    ap_ST_fsm_state22 = 113'd2097152;
parameter    ap_ST_fsm_state23 = 113'd4194304;
parameter    ap_ST_fsm_state24 = 113'd8388608;
parameter    ap_ST_fsm_state25 = 113'd16777216;
parameter    ap_ST_fsm_state26 = 113'd33554432;
parameter    ap_ST_fsm_state27 = 113'd67108864;
parameter    ap_ST_fsm_state28 = 113'd134217728;
parameter    ap_ST_fsm_state29 = 113'd268435456;
parameter    ap_ST_fsm_state30 = 113'd536870912;
parameter    ap_ST_fsm_state31 = 113'd1073741824;
parameter    ap_ST_fsm_state32 = 113'd2147483648;
parameter    ap_ST_fsm_state33 = 113'd4294967296;
parameter    ap_ST_fsm_state34 = 113'd8589934592;
parameter    ap_ST_fsm_state35 = 113'd17179869184;
parameter    ap_ST_fsm_state36 = 113'd34359738368;
parameter    ap_ST_fsm_state37 = 113'd68719476736;
parameter    ap_ST_fsm_state38 = 113'd137438953472;
parameter    ap_ST_fsm_state39 = 113'd274877906944;
parameter    ap_ST_fsm_state40 = 113'd549755813888;
parameter    ap_ST_fsm_state41 = 113'd1099511627776;
parameter    ap_ST_fsm_state42 = 113'd2199023255552;
parameter    ap_ST_fsm_state43 = 113'd4398046511104;
parameter    ap_ST_fsm_state44 = 113'd8796093022208;
parameter    ap_ST_fsm_state45 = 113'd17592186044416;
parameter    ap_ST_fsm_state46 = 113'd35184372088832;
parameter    ap_ST_fsm_state47 = 113'd70368744177664;
parameter    ap_ST_fsm_state48 = 113'd140737488355328;
parameter    ap_ST_fsm_state49 = 113'd281474976710656;
parameter    ap_ST_fsm_state50 = 113'd562949953421312;
parameter    ap_ST_fsm_state51 = 113'd1125899906842624;
parameter    ap_ST_fsm_state52 = 113'd2251799813685248;
parameter    ap_ST_fsm_state53 = 113'd4503599627370496;
parameter    ap_ST_fsm_state54 = 113'd9007199254740992;
parameter    ap_ST_fsm_state55 = 113'd18014398509481984;
parameter    ap_ST_fsm_state56 = 113'd36028797018963968;
parameter    ap_ST_fsm_state57 = 113'd72057594037927936;
parameter    ap_ST_fsm_state58 = 113'd144115188075855872;
parameter    ap_ST_fsm_state59 = 113'd288230376151711744;
parameter    ap_ST_fsm_state60 = 113'd576460752303423488;
parameter    ap_ST_fsm_state61 = 113'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 113'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 113'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 113'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 113'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 113'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 113'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 113'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 113'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 113'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 113'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 113'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 113'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 113'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 113'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 113'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 113'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 113'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 113'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 113'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 113'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 113'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 113'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 113'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 113'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 113'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 113'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 113'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 113'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 113'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 113'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 113'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 113'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 113'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 113'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 113'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 113'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 113'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 113'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 113'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 113'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 113'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 113'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 113'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 113'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 113'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 113'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 113'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 113'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 113'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 113'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 113'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 113'd5192296858534827628530496329220096;
parameter    C_S_AXI_CONTROL_DATA_WIDTH = 32;
parameter    C_S_AXI_CONTROL_ADDR_WIDTH = 16;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CONTROL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

output   ap_local_block;
input   ap_clk;
input   ap_rst_n;
input   s_axi_control_AWVALID;
output   s_axi_control_AWREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_AWADDR;
input   s_axi_control_WVALID;
output   s_axi_control_WREADY;
input  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_WDATA;
input  [C_S_AXI_CONTROL_WSTRB_WIDTH - 1:0] s_axi_control_WSTRB;
input   s_axi_control_ARVALID;
output   s_axi_control_ARREADY;
input  [C_S_AXI_CONTROL_ADDR_WIDTH - 1:0] s_axi_control_ARADDR;
output   s_axi_control_RVALID;
input   s_axi_control_RREADY;
output  [C_S_AXI_CONTROL_DATA_WIDTH - 1:0] s_axi_control_RDATA;
output  [1:0] s_axi_control_RRESP;
output   s_axi_control_BVALID;
input   s_axi_control_BREADY;
output  [1:0] s_axi_control_BRESP;
output   interrupt;

wire   [0:0] ap_local_deadlock;
(* shreg_extract = "no" *) reg    ap_rst_reg_2;
(* shreg_extract = "no" *) reg    ap_rst_reg_1;
(* shreg_extract = "no" *) reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [112:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [15:0] input_r_q0;
reg   [6:0] output_r_address0;
reg    output_r_ce0;
reg    output_r_we0;
reg   [15:0] output_r_d0;
wire   [15:0] bias_q0;
wire   [15:0] weights_q0;
wire   [15:0] numOfInNeurons;
wire   [15:0] numOfOutputNeurons;
wire   [7:0] activation;
reg   [6:0] output_V_address0;
reg    output_V_ce0;
reg    output_V_we0;
reg   [15:0] output_V_d0;
wire   [15:0] output_V_q0;
reg   [15:0] reg_338;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state16;
reg   [7:0] activation_read_reg_772;
reg   [15:0] numOfOutputNeurons_read_reg_776;
reg   [15:0] numOfInNeurons_read_reg_783;
wire   [7:0] empty_fu_343_p1;
reg   [7:0] empty_reg_790;
wire   [0:0] icmp_ln87_fu_347_p2;
reg   [0:0] icmp_ln87_reg_810;
wire  signed [13:0] empty_36_fu_358_p1;
reg  signed [13:0] empty_36_reg_821;
wire    ap_CS_fsm_state2;
wire   [0:0] cmp4_i19881_fu_361_p2;
reg   [0:0] cmp4_i19881_reg_826;
wire   [7:0] outNeurons_2_fu_378_p2;
reg   [7:0] outNeurons_2_reg_833;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln94_fu_373_p2;
reg   [6:0] output_V_addr_reg_843;
wire  signed [13:0] grp_fu_767_p2;
reg   [13:0] mul_i_reg_848;
wire    ap_CS_fsm_state6;
wire  signed [15:0] rhs_fu_404_p3;
reg  signed [15:0] rhs_reg_853;
wire    ap_CS_fsm_state11;
wire  signed [16:0] sext_ln52_fu_412_p1;
reg  signed [16:0] sext_ln52_reg_858;
wire   [7:0] i_12_fu_438_p2;
reg   [7:0] i_12_reg_880;
wire    ap_CS_fsm_state12;
wire   [63:0] zext_ln56_fu_444_p1;
reg   [63:0] zext_ln56_reg_885;
wire   [0:0] icmp_ln52_fu_433_p2;
reg   [6:0] output_V_addr_1_reg_890;
wire   [0:0] icmp_ln1547_fu_449_p2;
reg   [0:0] icmp_ln1547_reg_895;
wire   [0:0] icmp_ln1548_fu_469_p2;
reg   [0:0] icmp_ln1548_reg_906;
wire    ap_CS_fsm_state13;
reg   [6:0] resArray_V_addr_1_reg_910;
wire    ap_CS_fsm_state14;
wire   [15:0] select_ln7_fu_494_p3;
reg   [15:0] select_ln7_reg_915;
reg   [0:0] tmp_1_reg_920;
wire   [48:0] trunc_ln1201_fu_527_p1;
reg   [48:0] trunc_ln1201_reg_926;
wire    ap_CS_fsm_state17;
reg   [15:0] tmp_2_cast_reg_931;
wire   [15:0] fixed_V_fu_568_p3;
reg   [15:0] fixed_V_reg_937;
wire    ap_CS_fsm_state18;
reg   [7:0] p_Result_s_reg_942;
wire  signed [15:0] tmp_V_1_fu_610_p4;
reg  signed [15:0] tmp_V_1_reg_949;
wire    ap_CS_fsm_state19;
wire   [0:0] icmp_ln1547_2_fu_620_p2;
reg   [0:0] icmp_ln1547_2_reg_954;
wire   [0:0] tmp_2_fu_626_p3;
reg   [0:0] tmp_2_reg_958;
wire   [25:0] grp_fu_638_p2;
reg   [25:0] r_V_reg_967;
wire    ap_CS_fsm_state48;
wire   [31:0] lshr_ln1201_fu_647_p2;
reg   [31:0] lshr_ln1201_reg_972;
reg   [25:0] tmp_5_reg_977;
wire    ap_CS_fsm_state49;
wire   [31:0] zext_ln717_fu_675_p1;
wire    ap_CS_fsm_state50;
wire   [31:0] shl_ln740_1_fu_690_p2;
wire   [63:0] zext_ln80_fu_738_p1;
reg   [63:0] zext_ln80_reg_995;
wire    ap_CS_fsm_state52;
wire   [0:0] icmp_ln77_fu_726_p2;
wire    ap_CS_fsm_state53;
reg   [6:0] resArray_V_address0;
reg    resArray_V_ce0;
reg    resArray_V_we0;
reg   [31:0] resArray_V_d0;
wire   [31:0] resArray_V_q0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_ready;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_ce0;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_we0;
wire   [15:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_d0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_ready;
wire   [7:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_overflow_4_out;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_overflow_4_out_ap_vld;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_ready;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_we0;
wire   [15:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_d0;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_ready;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_we0;
wire   [15:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_d0;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_ready;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_we0;
wire   [15:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_d0;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_ce0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_done;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_idle;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_ready;
wire   [13:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_ce0;
wire   [6:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_address0;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_ce0;
wire   [15:0] grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_lhs_out;
wire    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_lhs_out_ap_vld;
reg   [31:0] storemerge8_reg_263;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg;
wire    ap_CS_fsm_state10;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg;
wire    ap_CS_fsm_state113;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg;
reg    grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] idxprom10_i_fu_388_p1;
wire    ap_CS_fsm_state112;
wire    ap_CS_fsm_state9;
reg   [7:0] outNeurons_fu_168;
reg   [55:0] sum_V_fu_172;
wire   [55:0] sum_V_1_fu_712_p2;
wire    ap_CS_fsm_state51;
reg   [7:0] i_fu_176;
reg   [7:0] i_9_fu_180;
wire   [7:0] i_11_fu_732_p2;
wire    ap_CS_fsm_state15;
wire   [15:0] trunc_ln717_fu_762_p1;
wire   [15:0] zext_ln94_fu_369_p1;
wire   [15:0] zext_ln52_fu_429_p1;
wire  signed [15:0] sext_ln712_fu_460_p0;
wire  signed [16:0] sext_ln712_fu_460_p1;
wire   [16:0] ret_V_fu_464_p2;
wire   [15:0] x_V_fu_475_p2;
wire   [0:0] tmp_fu_480_p3;
wire   [15:0] sub_ln712_fu_488_p2;
wire  signed [23:0] t_fu_510_p3;
wire   [25:0] mul_ln1201_fu_521_p1;
wire   [49:0] mul_ln1201_fu_521_p2;
wire   [48:0] sub_ln1201_fu_541_p2;
wire   [15:0] tmp_1_cast_fu_546_p4;
wire   [15:0] select_ln1201_fu_556_p3;
wire   [15:0] sub_ln1201_1_fu_562_p2;
wire   [15:0] whole_V_fu_584_p3;
wire   [15:0] ret_V_4_fu_591_p2;
wire   [23:0] lhs_V_2_fu_596_p3;
wire   [23:0] ret_V_3_fu_604_p2;
wire  signed [25:0] grp_fu_638_p1;
wire   [31:0] zext_ln67_fu_644_p1;
wire   [31:0] r_V_2_fu_659_p0;
wire   [25:0] r_V_2_fu_659_p1;
wire   [41:0] r_V_2_fu_659_p2;
wire  signed [31:0] sext_ln740_fu_681_p1;
wire   [31:0] zext_ln64_fu_678_p1;
wire   [31:0] shl_ln740_fu_684_p2;
wire   [47:0] shl_ln1_fu_700_p3;
wire   [55:0] zext_ln712_fu_708_p1;
wire   [55:0] grp_fu_756_p0;
wire   [15:0] grp_fu_756_p2;
wire   [7:0] grp_fu_767_p0;
reg    grp_fu_638_ap_start;
wire    grp_fu_638_ap_done;
reg    grp_fu_756_ap_start;
wire    grp_fu_756_ap_done;
reg   [112:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
reg    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
reg    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
wire    ap_ST_fsm_state74_blk;
wire    ap_ST_fsm_state75_blk;
wire    ap_ST_fsm_state76_blk;
wire    ap_ST_fsm_state77_blk;
wire    ap_ST_fsm_state78_blk;
wire    ap_ST_fsm_state79_blk;
wire    ap_ST_fsm_state80_blk;
wire    ap_ST_fsm_state81_blk;
wire    ap_ST_fsm_state82_blk;
wire    ap_ST_fsm_state83_blk;
wire    ap_ST_fsm_state84_blk;
wire    ap_ST_fsm_state85_blk;
wire    ap_ST_fsm_state86_blk;
wire    ap_ST_fsm_state87_blk;
wire    ap_ST_fsm_state88_blk;
wire    ap_ST_fsm_state89_blk;
wire    ap_ST_fsm_state90_blk;
wire    ap_ST_fsm_state91_blk;
wire    ap_ST_fsm_state92_blk;
wire    ap_ST_fsm_state93_blk;
wire    ap_ST_fsm_state94_blk;
wire    ap_ST_fsm_state95_blk;
wire    ap_ST_fsm_state96_blk;
wire    ap_ST_fsm_state97_blk;
wire    ap_ST_fsm_state98_blk;
wire    ap_ST_fsm_state99_blk;
wire    ap_ST_fsm_state100_blk;
wire    ap_ST_fsm_state101_blk;
wire    ap_ST_fsm_state102_blk;
wire    ap_ST_fsm_state103_blk;
wire    ap_ST_fsm_state104_blk;
wire    ap_ST_fsm_state105_blk;
wire    ap_ST_fsm_state106_blk;
wire    ap_ST_fsm_state107_blk;
wire    ap_ST_fsm_state108_blk;
wire    ap_ST_fsm_state109_blk;
wire    ap_ST_fsm_state110_blk;
wire    ap_ST_fsm_state111_blk;
wire    ap_ST_fsm_state112_blk;
reg    ap_predicate_op389_call_state113;
reg    ap_block_state113_on_subcall_done;
reg    ap_ST_fsm_state113_blk;
wire   [13:0] grp_fu_767_p00;
wire   [41:0] r_V_2_fu_659_p00;
wire   [41:0] r_V_2_fu_659_p10;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_rst_reg_2 = 1'b1;
#0 ap_rst_reg_1 = 1'b1;
#0 ap_rst_n_inv = 1'b1;
#0 ap_CS_fsm = 113'd1;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg = 1'b0;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg = 1'b0;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg = 1'b0;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg = 1'b0;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg = 1'b0;
#0 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg = 1'b0;
end

nnlayer_OneDSP_output_V_RAM_AUTO_1R1W #(
    .DataWidth( 16 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_V_address0),
    .ce0(output_V_ce0),
    .we0(output_V_we0),
    .d0(output_V_d0),
    .q0(output_V_q0)
);

nnlayer_OneDSP_resArray_V_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
resArray_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(resArray_V_address0),
    .ce0(resArray_V_ce0),
    .we0(resArray_V_we0),
    .d0(resArray_V_d0),
    .q0(resArray_V_q0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_ready),
    .numOfOutputNeurons(numOfOutputNeurons_read_reg_776),
    .bias_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_address0),
    .bias_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_ce0),
    .bias_q0(bias_q0),
    .output_V_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_address0),
    .output_V_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_ce0),
    .output_V_we0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_we0),
    .output_V_d0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_d0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_ready),
    .numOfOutputNeurons(empty_reg_790),
    .overflow_4_out(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_overflow_4_out),
    .overflow_4_out_ap_vld(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_overflow_4_out_ap_vld),
    .output_V_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_address0),
    .output_V_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_ce0),
    .output_V_q0(output_V_q0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_ready),
    .numOfOutputNeurons(empty_reg_790),
    .output_r_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_address0),
    .output_r_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_ce0),
    .output_r_we0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_we0),
    .output_r_d0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_d0),
    .output_V_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_address0),
    .output_V_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_ce0),
    .output_V_q0(output_V_q0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_ready),
    .numOfOutputNeurons(empty_reg_790),
    .output_r_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_address0),
    .output_r_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_ce0),
    .output_r_we0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_we0),
    .output_r_d0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_d0),
    .output_V_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_address0),
    .output_V_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_ce0),
    .output_V_q0(output_V_q0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_ready),
    .numOfOutputNeurons(empty_reg_790),
    .output_r_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_address0),
    .output_r_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_ce0),
    .output_r_we0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_we0),
    .output_r_d0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_d0),
    .output_V_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_address0),
    .output_V_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_ce0),
    .output_V_q0(output_V_q0)
);

nnlayer_OneDSP_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2 grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start),
    .ap_done(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_done),
    .ap_idle(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_idle),
    .ap_ready(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_ready),
    .output_V_load(reg_338),
    .numOfInNeurons(numOfInNeurons_read_reg_783),
    .mul_i(mul_i_reg_848),
    .weights_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_address0),
    .weights_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_ce0),
    .weights_q0(weights_q0),
    .input_r_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_address0),
    .input_r_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_ce0),
    .input_r_q0(input_r_q0),
    .lhs_out(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_lhs_out),
    .lhs_out_ap_vld(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_lhs_out_ap_vld)
);

nnlayer_OneDSP_control_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CONTROL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CONTROL_DATA_WIDTH ))
control_s_axi_U(
    .AWVALID(s_axi_control_AWVALID),
    .AWREADY(s_axi_control_AWREADY),
    .AWADDR(s_axi_control_AWADDR),
    .WVALID(s_axi_control_WVALID),
    .WREADY(s_axi_control_WREADY),
    .WDATA(s_axi_control_WDATA),
    .WSTRB(s_axi_control_WSTRB),
    .ARVALID(s_axi_control_ARVALID),
    .ARREADY(s_axi_control_ARREADY),
    .ARADDR(s_axi_control_ARADDR),
    .RVALID(s_axi_control_RVALID),
    .RREADY(s_axi_control_RREADY),
    .RDATA(s_axi_control_RDATA),
    .RRESP(s_axi_control_RRESP),
    .BVALID(s_axi_control_BVALID),
    .BREADY(s_axi_control_BREADY),
    .BRESP(s_axi_control_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .numOfInNeurons(numOfInNeurons),
    .numOfOutputNeurons(numOfOutputNeurons),
    .activation(activation),
    .input_r_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_address0),
    .input_r_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_input_r_ce0),
    .input_r_q0(input_r_q0),
    .output_r_address0(output_r_address0),
    .output_r_ce0(output_r_ce0),
    .output_r_we0(output_r_we0),
    .output_r_d0(output_r_d0),
    .bias_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_address0),
    .bias_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_bias_ce0),
    .bias_q0(bias_q0),
    .weights_address0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_address0),
    .weights_ce0(grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_weights_ce0),
    .weights_q0(weights_q0),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .ap_local_deadlock(ap_local_deadlock)
);

nnlayer_OneDSP_mul_24s_26ns_50_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 50 ))
mul_24s_26ns_50_1_1_U26(
    .din0(t_fu_510_p3),
    .din1(mul_ln1201_fu_521_p1),
    .dout(mul_ln1201_fu_521_p2)
);

nnlayer_OneDSP_udiv_26ns_26s_26_30_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 30 ),
    .din0_WIDTH( 26 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 26 ))
udiv_26ns_26s_26_30_seq_1_U27(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_638_ap_start),
    .done(grp_fu_638_ap_done),
    .din0(26'd16777216),
    .din1(grp_fu_638_p1),
    .ce(1'b1),
    .dout(grp_fu_638_p2)
);

nnlayer_OneDSP_mul_32ns_26ns_42_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 26 ),
    .dout_WIDTH( 42 ))
mul_32ns_26ns_42_1_1_U28(
    .din0(r_V_2_fu_659_p0),
    .din1(r_V_2_fu_659_p1),
    .dout(r_V_2_fu_659_p2)
);

nnlayer_OneDSP_udiv_56ns_56ns_16_60_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 60 ),
    .din0_WIDTH( 56 ),
    .din1_WIDTH( 56 ),
    .dout_WIDTH( 16 ))
udiv_56ns_56ns_16_60_seq_1_U29(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_756_ap_start),
    .done(grp_fu_756_ap_done),
    .din0(grp_fu_756_p0),
    .din1(sum_V_fu_172),
    .ce(1'b1),
    .dout(grp_fu_756_p2)
);

nnlayer_OneDSP_mul_mul_8ns_14s_14_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
mul_mul_8ns_14s_14_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_767_p0),
    .din1(empty_36_reg_821),
    .ce(1'b1),
    .dout(grp_fu_767_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | (~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (((8'd1 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | ((8'd1 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (((8'd2 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | ((8'd2 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) & (((8'd3 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | ((8'd3 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln87_fu_347_p2 == 1'd1) & (ap_start == 1'b1))) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg <= 1'b1;
        end else if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_ready == 1'b1)) begin
            grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    ap_rst_n_inv <= ap_rst_reg_1;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_1 <= ap_rst_reg_2;
end

always @ (posedge ap_clk) begin
    ap_rst_reg_2 <= ~ap_rst_n;
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln1547_fu_449_p2 == 1'd0) & (icmp_ln52_fu_433_p2 == 1'd1))) begin
        i_9_fu_180 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln77_fu_726_p2 == 1'd0) & (8'd3 == activation_read_reg_772) & (icmp_ln1547_reg_895 == 1'd0) & (icmp_ln87_reg_810 == 1'd1))) begin
        i_9_fu_180 <= i_11_fu_732_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln87_reg_810 == 1'd1))) begin
        i_fu_176 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state50)) begin
        i_fu_176 <= i_12_reg_880;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln87_fu_347_p2 == 1'd1) & (ap_start == 1'b1))) begin
        outNeurons_fu_168 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        outNeurons_fu_168 <= outNeurons_2_reg_833;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_fu_626_p3 == 1'd0) & (icmp_ln1547_2_fu_620_p2 == 1'd0))) begin
        storemerge8_reg_263 <= 32'd65536;
    end else if (((1'b1 == ap_CS_fsm_state50) & (tmp_2_reg_958 == 1'd1) & (icmp_ln1547_2_reg_954 == 1'd0))) begin
        storemerge8_reg_263 <= zext_ln717_fu_675_p1;
    end else if (((1'b1 == ap_CS_fsm_state50) & (icmp_ln1547_2_reg_954 == 1'd1))) begin
        storemerge8_reg_263 <= shl_ln740_1_fu_690_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln87_reg_810 == 1'd1))) begin
        sum_V_fu_172 <= 56'd0;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        sum_V_fu_172 <= sum_V_1_fu_712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        activation_read_reg_772 <= activation;
        empty_reg_790 <= empty_fu_343_p1;
        icmp_ln87_reg_810 <= icmp_ln87_fu_347_p2;
        numOfInNeurons_read_reg_783 <= numOfInNeurons;
        numOfOutputNeurons_read_reg_776 <= numOfOutputNeurons;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        cmp4_i19881_reg_826 <= cmp4_i19881_fu_361_p2;
        empty_36_reg_821 <= empty_36_fu_358_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        fixed_V_reg_937 <= fixed_V_fu_568_p3;
        p_Result_s_reg_942 <= {{fixed_V_fu_568_p3[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        i_12_reg_880 <= i_12_fu_438_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        icmp_ln1547_2_reg_954 <= icmp_ln1547_2_fu_620_p2;
        tmp_V_1_reg_949 <= {{ret_V_3_fu_604_p2[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln52_fu_433_p2 == 1'd1))) begin
        icmp_ln1547_reg_895 <= icmp_ln1547_fu_449_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln1548_reg_906 <= icmp_ln1548_fu_469_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        lshr_ln1201_reg_972 <= lshr_ln1201_fu_647_p2;
        r_V_reg_967 <= grp_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        mul_i_reg_848 <= grp_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln87_reg_810 == 1'd1))) begin
        outNeurons_2_reg_833 <= outNeurons_2_fu_378_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln52_fu_433_p2 == 1'd0))) begin
        output_V_addr_1_reg_890 <= zext_ln56_fu_444_p1;
        zext_ln56_reg_885[7 : 0] <= zext_ln56_fu_444_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln94_fu_373_p2 == 1'd0) & (icmp_ln87_reg_810 == 1'd1))) begin
        output_V_addr_reg_843 <= idxprom10_i_fu_388_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state7))) begin
        reg_338 <= output_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        resArray_V_addr_1_reg_910 <= zext_ln56_reg_885;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        rhs_reg_853[15 : 8] <= rhs_fu_404_p3[15 : 8];
        sext_ln52_reg_858[16 : 8] <= sext_ln52_fu_412_p1[16 : 8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        select_ln7_reg_915 <= select_ln7_fu_494_p3;
        tmp_1_reg_920 <= select_ln7_fu_494_p3[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        tmp_2_cast_reg_931 <= {{mul_ln1201_fu_521_p2[47:32]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) & (icmp_ln1547_2_fu_620_p2 == 1'd0))) begin
        tmp_2_reg_958 <= reg_338[32'd15];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        tmp_5_reg_977 <= {{r_V_2_fu_659_p2[41:16]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state17) & (tmp_1_reg_920 == 1'd1))) begin
        trunc_ln1201_reg_926 <= trunc_ln1201_fu_527_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state52) & (icmp_ln77_fu_726_p2 == 1'd0) & (8'd3 == activation_read_reg_772) & (icmp_ln1547_reg_895 == 1'd0) & (icmp_ln87_reg_810 == 1'd1))) begin
        zext_ln80_reg_995[7 : 0] <= zext_ln80_fu_738_p1[7 : 0];
    end
end

assign ap_ST_fsm_state100_blk = 1'b0;

assign ap_ST_fsm_state101_blk = 1'b0;

assign ap_ST_fsm_state102_blk = 1'b0;

assign ap_ST_fsm_state103_blk = 1'b0;

assign ap_ST_fsm_state104_blk = 1'b0;

assign ap_ST_fsm_state105_blk = 1'b0;

assign ap_ST_fsm_state106_blk = 1'b0;

assign ap_ST_fsm_state107_blk = 1'b0;

assign ap_ST_fsm_state108_blk = 1'b0;

assign ap_ST_fsm_state109_blk = 1'b0;

always @ (*) begin
    if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_done == 1'b0)) begin
        ap_ST_fsm_state10_blk = 1'b1;
    end else begin
        ap_ST_fsm_state10_blk = 1'b0;
    end
end

assign ap_ST_fsm_state110_blk = 1'b0;

assign ap_ST_fsm_state111_blk = 1'b0;

assign ap_ST_fsm_state112_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state113_on_subcall_done)) begin
        ap_ST_fsm_state113_blk = 1'b1;
    end else begin
        ap_ST_fsm_state113_blk = 1'b0;
    end
end

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

assign ap_ST_fsm_state74_blk = 1'b0;

assign ap_ST_fsm_state75_blk = 1'b0;

assign ap_ST_fsm_state76_blk = 1'b0;

assign ap_ST_fsm_state77_blk = 1'b0;

assign ap_ST_fsm_state78_blk = 1'b0;

assign ap_ST_fsm_state79_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state80_blk = 1'b0;

assign ap_ST_fsm_state81_blk = 1'b0;

assign ap_ST_fsm_state82_blk = 1'b0;

assign ap_ST_fsm_state83_blk = 1'b0;

assign ap_ST_fsm_state84_blk = 1'b0;

assign ap_ST_fsm_state85_blk = 1'b0;

assign ap_ST_fsm_state86_blk = 1'b0;

assign ap_ST_fsm_state87_blk = 1'b0;

assign ap_ST_fsm_state88_blk = 1'b0;

assign ap_ST_fsm_state89_blk = 1'b0;

always @ (*) begin
    if ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_done == 1'b0)) begin
        ap_ST_fsm_state8_blk = 1'b1;
    end else begin
        ap_ST_fsm_state8_blk = 1'b0;
    end
end

assign ap_ST_fsm_state90_blk = 1'b0;

assign ap_ST_fsm_state91_blk = 1'b0;

assign ap_ST_fsm_state92_blk = 1'b0;

assign ap_ST_fsm_state93_blk = 1'b0;

assign ap_ST_fsm_state94_blk = 1'b0;

assign ap_ST_fsm_state95_blk = 1'b0;

assign ap_ST_fsm_state96_blk = 1'b0;

assign ap_ST_fsm_state97_blk = 1'b0;

assign ap_ST_fsm_state98_blk = 1'b0;

assign ap_ST_fsm_state99_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & ((icmp_ln87_reg_810 == 1'd0) | (~(8'd3 == activation_read_reg_772) | ((icmp_ln77_fu_726_p2 == 1'd1) | (icmp_ln1547_reg_895 == 1'd1)))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) & ((icmp_ln87_reg_810 == 1'd0) | (~(8'd3 == activation_read_reg_772) | ((icmp_ln77_fu_726_p2 == 1'd1) | (icmp_ln1547_reg_895 == 1'd1)))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_fu_626_p3 == 1'd1) & (icmp_ln1547_2_fu_620_p2 == 1'd0))) begin
        grp_fu_638_ap_start = 1'b1;
    end else begin
        grp_fu_638_ap_start = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        grp_fu_756_ap_start = 1'b1;
    end else begin
        grp_fu_756_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14))) begin
        output_V_address0 = output_V_addr_1_reg_890;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        output_V_address0 = zext_ln56_fu_444_p1;
    end else if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        output_V_address0 = output_V_addr_reg_843;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_V_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_V_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_address0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_V_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_address0;
    end else begin
        output_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state6))) begin
        output_V_ce0 = 1'b1;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_V_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_V_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_V_ce0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_V_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        output_V_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_output_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_ce0;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        output_V_d0 = 16'd62720;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        output_V_d0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_lhs_out;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_d0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_d0;
    end else begin
        output_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (cmp4_i19881_reg_826 == 1'd0)) | ((1'b1 == ap_CS_fsm_state14) & (icmp_ln1548_reg_906 == 1'd1)))) begin
        output_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        output_V_we0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_output_V_we0;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        output_r_address0 = zext_ln80_reg_995;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_r_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_r_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_address0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_r_address0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_address0;
    end else begin
        output_r_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        output_r_ce0 = 1'b1;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_r_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_r_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_ce0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_r_ce0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_ce0;
    end else begin
        output_r_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        output_r_d0 = trunc_ln717_fu_762_p1;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_r_d0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_r_d0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_d0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_r_d0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_d0;
    end else begin
        output_r_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state112)) begin
        output_r_we0 = 1'b1;
    end else if ((~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113))) begin
        output_r_we0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd1 == activation_read_reg_772))) begin
        output_r_we0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_output_r_we0;
    end else if (((1'b1 == ap_CS_fsm_state113) & (8'd2 == activation_read_reg_772))) begin
        output_r_we0 = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_output_r_we0;
    end else begin
        output_r_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state52)) begin
        resArray_V_address0 = zext_ln80_fu_738_p1;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        resArray_V_address0 = resArray_V_addr_1_reg_910;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        resArray_V_address0 = 64'd0;
    end else begin
        resArray_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state11))) begin
        resArray_V_ce0 = 1'b1;
    end else begin
        resArray_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        resArray_V_d0 = storemerge8_reg_263;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        resArray_V_d0 = 32'd0;
    end else begin
        resArray_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state51) | (1'b1 == ap_CS_fsm_state11))) begin
        resArray_V_we0 = 1'b1;
    end else begin
        resArray_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln87_fu_347_p2 == 1'd0) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln87_fu_347_p2 == 1'd1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((~(8'd3 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | (~(8'd3 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end else if (((1'b1 == ap_CS_fsm_state3) & (((8'd3 == activation_read_reg_772) & (icmp_ln87_reg_810 == 1'd0)) | ((8'd3 == activation_read_reg_772) & (icmp_ln94_fu_373_p2 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (cmp4_i19881_reg_826 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & (grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln87_reg_810 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln52_fu_433_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b1 == ap_CS_fsm_state19) & (tmp_2_fu_626_p3 == 1'd1) & (icmp_ln1547_2_fu_620_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & ((icmp_ln87_reg_810 == 1'd0) | (~(8'd3 == activation_read_reg_772) | ((icmp_ln77_fu_726_p2 == 1'd1) | (icmp_ln1547_reg_895 == 1'd1)))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state53;
            end
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state113 : begin
            if ((~(8'd3 == activation_read_reg_772) & (1'b1 == ap_CS_fsm_state113) & (1'b0 == ap_block_state113_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state113;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state112 = ap_CS_fsm[32'd111];

assign ap_CS_fsm_state113 = ap_CS_fsm[32'd112];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state113_on_subcall_done = (((8'd1 == activation_read_reg_772) & (grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_done == 1'b0)) | ((8'd2 == activation_read_reg_772) & (grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_done == 1'b0)) | ((grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_done == 1'b0) & (ap_predicate_op389_call_state113 == 1'b1)));
end

assign ap_local_block = 1'b0;

assign ap_local_deadlock = 1'd0;

always @ (*) begin
    ap_predicate_op389_call_state113 = (~(8'd1 == activation_read_reg_772) & ~(8'd2 == activation_read_reg_772) & ~(8'd3 == activation_read_reg_772));
end

assign cmp4_i19881_fu_361_p2 = ((numOfInNeurons_read_reg_783 == 16'd0) ? 1'b1 : 1'b0);

assign empty_36_fu_358_p1 = numOfInNeurons_read_reg_783[13:0];

assign empty_fu_343_p1 = numOfOutputNeurons[7:0];

assign fixed_V_fu_568_p3 = ((tmp_1_reg_920[0:0] == 1'b1) ? sub_ln1201_1_fu_562_p2 : tmp_2_cast_reg_931);

assign grp_fu_638_p1 = tmp_V_1_fu_610_p4;

assign grp_fu_756_p0 = {{resArray_V_q0}, {24'd0}};

assign grp_fu_767_p0 = grp_fu_767_p00;

assign grp_fu_767_p00 = outNeurons_fu_168;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_116_1_fu_313_ap_start_reg;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_16_1_fu_304_ap_start_reg;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_30_1_fu_295_ap_start_reg;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_ap_start_reg;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_87_1_fu_277_ap_start_reg;

assign grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start = grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_96_2_fu_322_ap_start_reg;

assign i_11_fu_732_p2 = (i_9_fu_180 + 8'd1);

assign i_12_fu_438_p2 = (i_fu_176 + 8'd1);

assign icmp_ln1547_2_fu_620_p2 = (($signed(reg_338) > $signed(16'd0)) ? 1'b1 : 1'b0);

assign icmp_ln1547_fu_449_p2 = ((sum_V_fu_172 == 56'd0) ? 1'b1 : 1'b0);

assign icmp_ln1548_fu_469_p2 = (($signed(ret_V_fu_464_p2) < $signed(17'd128256)) ? 1'b1 : 1'b0);

assign icmp_ln52_fu_433_p2 = ((zext_ln52_fu_429_p1 == numOfOutputNeurons_read_reg_776) ? 1'b1 : 1'b0);

assign icmp_ln77_fu_726_p2 = ((i_9_fu_180 == 8'd128) ? 1'b1 : 1'b0);

assign icmp_ln87_fu_347_p2 = ((numOfOutputNeurons != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln94_fu_373_p2 = ((zext_ln94_fu_369_p1 == numOfOutputNeurons_read_reg_776) ? 1'b1 : 1'b0);

assign idxprom10_i_fu_388_p1 = outNeurons_fu_168;

assign lhs_V_2_fu_596_p3 = {{ret_V_4_fu_591_p2}, {8'd0}};

assign lshr_ln1201_fu_647_p2 = 32'd65536 >> zext_ln67_fu_644_p1;

assign mul_ln1201_fu_521_p1 = 50'd24265352;

assign outNeurons_2_fu_378_p2 = (outNeurons_fu_168 + 8'd1);

assign r_V_2_fu_659_p0 = r_V_2_fu_659_p00;

assign r_V_2_fu_659_p00 = lshr_ln1201_reg_972;

assign r_V_2_fu_659_p1 = r_V_2_fu_659_p10;

assign r_V_2_fu_659_p10 = r_V_reg_967;

assign ret_V_3_fu_604_p2 = (lhs_V_2_fu_596_p3 + 24'd65536);

assign ret_V_4_fu_591_p2 = (fixed_V_reg_937 - whole_V_fu_584_p3);

assign ret_V_fu_464_p2 = ($signed(sext_ln712_fu_460_p1) - $signed(sext_ln52_reg_858));

assign rhs_fu_404_p3 = {{grp_nnlayer_OneDSP_Pipeline_VITIS_LOOP_45_1_fu_287_overflow_4_out}, {8'd0}};

assign select_ln1201_fu_556_p3 = ((tmp_1_reg_920[0:0] == 1'b1) ? tmp_1_cast_fu_546_p4 : tmp_2_cast_reg_931);

assign select_ln7_fu_494_p3 = ((tmp_fu_480_p3[0:0] == 1'b1) ? sub_ln712_fu_488_p2 : x_V_fu_475_p2);

assign sext_ln52_fu_412_p1 = rhs_fu_404_p3;

assign sext_ln712_fu_460_p0 = output_V_q0;

assign sext_ln712_fu_460_p1 = sext_ln712_fu_460_p0;

assign sext_ln740_fu_681_p1 = tmp_V_1_reg_949;

assign shl_ln1_fu_700_p3 = {{storemerge8_reg_263}, {16'd0}};

assign shl_ln740_1_fu_690_p2 = shl_ln740_fu_684_p2 << 32'd8;

assign shl_ln740_fu_684_p2 = sext_ln740_fu_681_p1 << zext_ln64_fu_678_p1;

assign sub_ln1201_1_fu_562_p2 = (16'd0 - select_ln1201_fu_556_p3);

assign sub_ln1201_fu_541_p2 = (49'd0 - trunc_ln1201_reg_926);

assign sub_ln712_fu_488_p2 = (16'd0 - x_V_fu_475_p2);

assign sum_V_1_fu_712_p2 = (zext_ln712_fu_708_p1 + sum_V_fu_172);

assign t_fu_510_p3 = {{select_ln7_reg_915}, {8'd0}};

assign tmp_1_cast_fu_546_p4 = {{sub_ln1201_fu_541_p2[47:32]}};

assign tmp_2_fu_626_p3 = reg_338[32'd15];

assign tmp_V_1_fu_610_p4 = {{ret_V_3_fu_604_p2[23:8]}};

assign tmp_fu_480_p3 = x_V_fu_475_p2[32'd15];

assign trunc_ln1201_fu_527_p1 = mul_ln1201_fu_521_p2[48:0];

assign trunc_ln717_fu_762_p1 = grp_fu_756_p2[15:0];

assign whole_V_fu_584_p3 = {{p_Result_s_reg_942}, {8'd0}};

assign x_V_fu_475_p2 = ($signed(output_V_q0) - $signed(rhs_reg_853));

assign zext_ln52_fu_429_p1 = i_fu_176;

assign zext_ln56_fu_444_p1 = i_fu_176;

assign zext_ln64_fu_678_p1 = p_Result_s_reg_942;

assign zext_ln67_fu_644_p1 = p_Result_s_reg_942;

assign zext_ln712_fu_708_p1 = shl_ln1_fu_700_p3;

assign zext_ln717_fu_675_p1 = tmp_5_reg_977;

assign zext_ln80_fu_738_p1 = i_9_fu_180;

assign zext_ln94_fu_369_p1 = outNeurons_fu_168;

always @ (posedge ap_clk) begin
    rhs_reg_853[7:0] <= 8'b00000000;
    sext_ln52_reg_858[7:0] <= 8'b00000000;
    zext_ln56_reg_885[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln80_reg_995[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
end

endmodule //nnlayer_OneDSP
