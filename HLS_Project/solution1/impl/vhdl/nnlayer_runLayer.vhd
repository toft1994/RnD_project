-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nnlayer_runLayer is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    input_r : IN STD_LOGIC_VECTOR (63 downto 0);
    numOfInNeurons : IN STD_LOGIC_VECTOR (15 downto 0);
    numOfOutNeurons : IN STD_LOGIC_VECTOR (15 downto 0);
    output_V_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    output_V_ce0 : OUT STD_LOGIC;
    output_V_we0 : OUT STD_LOGIC;
    output_V_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    output_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    weights_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weights_V_ce0 : OUT STD_LOGIC;
    weights_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
    weights_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    weights_V_ce1 : OUT STD_LOGIC;
    weights_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of nnlayer_runLayer is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv512_lc_1 : STD_LOGIC_VECTOR (511 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv17_1FFFF : STD_LOGIC_VECTOR (16 downto 0) := "11111111111111111";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv33_40 : STD_LOGIC_VECTOR (32 downto 0) := "000000000000000000000000001000000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal cmp440_fu_136_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp440_reg_278 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln_reg_282 : STD_LOGIC_VECTOR (57 downto 0);
    signal tmp_2_reg_287 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln39_2_fu_218_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln39_2_reg_295 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal output_V_addr_reg_300 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln39_fu_213_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal conv1450_load_1_reg_305 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal output_V_load_reg_310 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_idle : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_ready : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (511 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_BREADY : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_lhs_out : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_lhs_out_ap_vld : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce0 : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce1 : STD_LOGIC;
    signal grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal idxprom9_fu_224_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal inc153844_fu_70 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal conv1450_fu_74 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln46_fu_233_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal numOfInNeurons_cast_fu_132_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal add_ln39_fu_142_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_fu_148_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_1_fu_158_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln39_fu_166_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln39_fu_170_p1 : STD_LOGIC_VECTOR (32 downto 0);
    signal add_ln39_1_fu_174_p2 : STD_LOGIC_VECTOR (32 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component nnlayer_runLayer_Pipeline_VITIS_LOOP_41_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_V_load : IN STD_LOGIC_VECTOR (15 downto 0);
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (511 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln41 : IN STD_LOGIC_VECTOR (57 downto 0);
        numOfInNeurons : IN STD_LOGIC_VECTOR (15 downto 0);
        conv1450 : IN STD_LOGIC_VECTOR (15 downto 0);
        zext_ln41 : IN STD_LOGIC_VECTOR (27 downto 0);
        lhs_out : OUT STD_LOGIC_VECTOR (15 downto 0);
        lhs_out_ap_vld : OUT STD_LOGIC;
        weights_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weights_V_ce0 : OUT STD_LOGIC;
        weights_V_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weights_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weights_V_ce1 : OUT STD_LOGIC;
        weights_V_q1 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113 : component nnlayer_runLayer_Pipeline_VITIS_LOOP_41_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start,
        ap_done => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done,
        ap_idle => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_idle,
        ap_ready => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_ready,
        output_V_load => output_V_load_reg_310,
        m_axi_gmem_AWVALID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln41 => trunc_ln_reg_282,
        numOfInNeurons => numOfInNeurons,
        conv1450 => conv1450_load_1_reg_305,
        zext_ln41 => tmp_2_reg_287,
        lhs_out => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_lhs_out,
        lhs_out_ap_vld => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_lhs_out_ap_vld,
        weights_V_address0 => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address0,
        weights_V_ce0 => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce0,
        weights_V_q0 => weights_V_q0,
        weights_V_address1 => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address1,
        weights_V_ce1 => grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce1,
        weights_V_q1 => weights_V_q1);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_ready = ap_const_logic_1)) then 
                    grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    conv1450_fu_74_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                conv1450_fu_74 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                conv1450_fu_74 <= add_ln46_fu_233_p2;
            end if; 
        end if;
    end process;

    inc153844_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                inc153844_fu_70 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                inc153844_fu_70 <= add_ln39_2_reg_295;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln39_2_reg_295 <= add_ln39_2_fu_218_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                cmp440_reg_278 <= cmp440_fu_136_p2;
                tmp_2_reg_287 <= add_ln39_1_fu_174_p2(32 downto 5);
                trunc_ln_reg_282 <= input_r(63 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                conv1450_load_1_reg_305 <= conv1450_fu_74;
                output_V_load_reg_310 <= output_V_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_213_p2 = ap_const_lv1_0))) then
                output_V_addr_reg_300 <= idxprom9_fu_224_p1(8 - 1 downto 0);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, cmp440_reg_278, ap_CS_fsm_state2, icmp_ln39_fu_213_p2, grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done, ap_CS_fsm_state4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_213_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_213_p2 = ap_const_lv1_0) and (cmp440_reg_278 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXX";
        end case;
    end process;
    add_ln39_1_fu_174_p2 <= std_logic_vector(unsigned(zext_ln39_fu_170_p1) + unsigned(ap_const_lv33_40));
    add_ln39_2_fu_218_p2 <= std_logic_vector(unsigned(inc153844_fu_70) + unsigned(ap_const_lv16_1));
    add_ln39_fu_142_p2 <= std_logic_vector(unsigned(numOfInNeurons_cast_fu_132_p1) + unsigned(ap_const_lv17_1FFFF));
    add_ln46_fu_233_p2 <= std_logic_vector(unsigned(conv1450_fu_74) + unsigned(numOfInNeurons));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state4_blk_assign_proc : process(grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done)
    begin
        if ((grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln39_fu_213_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_213_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln39_fu_213_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln39_fu_213_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    cmp440_fu_136_p2 <= "1" when (numOfInNeurons = ap_const_lv16_0) else "0";
    grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_ap_start_reg;
    icmp_ln39_fu_213_p2 <= "1" when (inc153844_fu_70 = numOfOutNeurons) else "0";
    idxprom9_fu_224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(inc153844_fu_70),64));
    m_axi_gmem_ARADDR <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARADDR;
    m_axi_gmem_ARBURST <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARBURST;
    m_axi_gmem_ARCACHE <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARCACHE;
    m_axi_gmem_ARID <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARID;
    m_axi_gmem_ARLEN <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLEN;
    m_axi_gmem_ARLOCK <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARLOCK;
    m_axi_gmem_ARPROT <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARPROT;
    m_axi_gmem_ARQOS <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARQOS;
    m_axi_gmem_ARREGION <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARREGION;
    m_axi_gmem_ARSIZE <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARSIZE;
    m_axi_gmem_ARUSER <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARUSER;

    m_axi_gmem_ARVALID_assign_proc : process(ap_CS_fsm_state3, grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARVALID, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_ARVALID <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(ap_CS_fsm_state3, grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_RREADY, ap_CS_fsm_state4)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_RREADY <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv512_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv64_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    numOfInNeurons_cast_fu_132_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numOfInNeurons),17));

    output_V_address0_assign_proc : process(ap_CS_fsm_state2, output_V_addr_reg_300, idxprom9_fu_224_p1, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            output_V_address0 <= output_V_addr_reg_300;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_V_address0 <= idxprom9_fu_224_p1(8 - 1 downto 0);
        else 
            output_V_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_V_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            output_V_ce0 <= ap_const_logic_1;
        else 
            output_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    output_V_d0 <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_lhs_out;

    output_V_we0_assign_proc : process(cmp440_reg_278, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (cmp440_reg_278 = ap_const_lv1_0))) then 
            output_V_we0 <= ap_const_logic_1;
        else 
            output_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

        sext_ln39_fu_166_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_1_fu_158_p3),32));

    tmp_1_fu_158_p3 <= (tmp_fu_148_p4 & ap_const_lv6_0);
    tmp_fu_148_p4 <= add_ln39_fu_142_p2(16 downto 6);
    weights_V_address0 <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address0;
    weights_V_address1 <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_address1;
    weights_V_ce0 <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce0;
    weights_V_ce1 <= grp_runLayer_Pipeline_VITIS_LOOP_41_2_fu_113_weights_V_ce1;
    zext_ln39_fu_170_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln39_fu_166_p1),33));
end behav;
