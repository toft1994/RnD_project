-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nnlayer_nnlayer_Pipeline_VITIS_LOOP_79_2 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    tmp_2 : IN STD_LOGIC_VECTOR (15 downto 0);
    conv1_i : IN STD_LOGIC_VECTOR (15 downto 0);
    mul_ln736 : IN STD_LOGIC_VECTOR (23 downto 0);
    p_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_6_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_6_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_5_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_5_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_4_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_4_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_3_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_3_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_2_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_2_out_ap_vld : OUT STD_LOGIC;
    trunc_ln717_1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln717_1_out_ap_vld : OUT STD_LOGIC;
    trunc_ln1_out : OUT STD_LOGIC_VECTOR (15 downto 0);
    trunc_ln1_out_ap_vld : OUT STD_LOGIC;
    ap_return : OUT STD_LOGIC_VECTOR (2 downto 0) );
end;


architecture behav of nnlayer_nnlayer_Pipeline_VITIS_LOOP_79_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000101";
    constant ap_const_lv8_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000110";
    constant ap_const_lv8_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal conv1_i_cast_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal conv1_i_cast_reg_531 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln79_fu_225_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_reg_543 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal grp_load_fu_204_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_load12_reg_547 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1_fu_243_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1_reg_552 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln79_1_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_1_reg_557 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln717_1_fu_277_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_1_reg_561 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln79_2_fu_293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_2_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln717_2_reg_570 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln79_3_fu_327_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_3_reg_576 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_4_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_4_reg_580 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_5_fu_349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_5_reg_584 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_6_fu_360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_6_reg_588 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_7_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln79_7_reg_592 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln717_3_fu_399_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_3_reg_596 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state3_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal trunc_ln717_4_fu_422_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_4_reg_601 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_5_reg_606 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_6_fu_467_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln717_6_reg_612 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_predicate_tran4to5_state3 : BOOLEAN;
    signal ap_predicate_tran4to6_state3 : BOOLEAN;
    signal ap_predicate_tran4to7_state3 : BOOLEAN;
    signal ap_predicate_tran4to8_state3 : BOOLEAN;
    signal ap_predicate_tran4to9_state3 : BOOLEAN;
    signal ap_predicate_tran4to10_state3 : BOOLEAN;
    signal ap_predicate_tran4to11_state3 : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_UnifiedRetVal_phi_fu_178_p16 : STD_LOGIC_VECTOR (2 downto 0);
    signal UnifiedRetVal_reg_168 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal inNeurons_0_fu_86 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln79_fu_376_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal empty_fu_90 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_sig_allocacmp_p_load12 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln_fu_230_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_fu_238_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln79_fu_253_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln737_2_fu_264_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_1_fu_272_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln79_1_fu_287_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal shl_ln737_3_fu_298_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_2_fu_306_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal or_ln79_2_fu_321_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln79_3_fu_332_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln79_4_fu_343_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln79_5_fu_354_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln79_6_fu_365_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal shl_ln737_6_fu_387_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_3_fu_394_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln737_7_fu_409_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_4_fu_417_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln737_8_fu_432_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_5_fu_440_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln737_9_fu_455_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_6_fu_462_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln737_s_fu_477_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1245_7_fu_485_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_return_preg : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_exit_tran_regpp0 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_return_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_return_preg <= ap_const_lv3_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                    ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_178_p16;
                end if; 
            end if;
        end if;
    end process;


    UnifiedRetVal_reg_168_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_7;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_6;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_5;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_4;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_2;
            elsif (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_1;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                UnifiedRetVal_reg_168 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    ap_exit_tran_regpp0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                if ((icmp_ln79_reg_543 = ap_const_lv1_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                    ap_exit_tran_regpp0(1) <= '1';
                    ap_exit_tran_regpp0(2) <= '1';
                elsif ((ap_predicate_tran4to11_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                    ap_exit_tran_regpp0(1) <= '1';
                    ap_exit_tran_regpp0(2) <= '1';
                elsif ((ap_predicate_tran4to10_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                    ap_exit_tran_regpp0(1) <= '0';
                    ap_exit_tran_regpp0(2) <= '1';
                elsif ((ap_predicate_tran4to9_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                    ap_exit_tran_regpp0(1) <= '0';
                    ap_exit_tran_regpp0(2) <= '1';
                elsif ((ap_predicate_tran4to8_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                    ap_exit_tran_regpp0(1) <= '1';
                    ap_exit_tran_regpp0(2) <= '0';
                elsif ((ap_predicate_tran4to7_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                    ap_exit_tran_regpp0(1) <= '1';
                    ap_exit_tran_regpp0(2) <= '0';
                elsif ((ap_predicate_tran4to6_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '1';
                    ap_exit_tran_regpp0(1) <= '0';
                    ap_exit_tran_regpp0(2) <= '0';
                elsif ((ap_predicate_tran4to5_state3 = ap_const_boolean_1)) then 
                    ap_exit_tran_regpp0(0) <= '0';
                    ap_exit_tran_regpp0(1) <= '0';
                    ap_exit_tran_regpp0(2) <= '0';
                end if;
            end if; 
        end if;
    end process;

    empty_fu_90_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                empty_fu_90 <= tmp_2;
            elsif (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_7_reg_592 = ap_const_lv1_0) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then 
                empty_fu_90 <= add_ln1245_7_fu_485_p2(23 downto 8);
            end if; 
        end if;
    end process;

    inNeurons_0_fu_86_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                inNeurons_0_fu_86 <= ap_const_lv32_0;
            elsif (((icmp_ln79_4_fu_338_p2 = ap_const_lv1_0) and (icmp_ln79_3_fu_327_p2 = ap_const_lv1_0) and (icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln79_7_fu_371_p2 = ap_const_lv1_0) and (icmp_ln79_6_fu_360_p2 = ap_const_lv1_0) and (icmp_ln79_5_fu_349_p2 = ap_const_lv1_0))) then 
                inNeurons_0_fu_86 <= add_ln79_fu_376_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    conv1_i_cast_reg_531(15 downto 0) <= conv1_i_cast_fu_208_p1(15 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_1_reg_557 <= icmp_ln79_1_fu_259_p2;
                p_load12_reg_547 <= grp_load_fu_204_p1;
                trunc_ln1_reg_552 <= add_ln1245_fu_238_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_2_reg_566 <= icmp_ln79_2_fu_293_p2;
                trunc_ln717_1_reg_561 <= add_ln1245_1_fu_272_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_3_reg_576 <= icmp_ln79_3_fu_327_p2;
                trunc_ln717_2_reg_570 <= add_ln1245_2_fu_306_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_3_fu_327_p2 = ap_const_lv1_0) and (icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_4_reg_580 <= icmp_ln79_4_fu_338_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_fu_338_p2 = ap_const_lv1_0) and (icmp_ln79_3_fu_327_p2 = ap_const_lv1_0) and (icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_5_reg_584 <= icmp_ln79_5_fu_349_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_fu_338_p2 = ap_const_lv1_0) and (icmp_ln79_3_fu_327_p2 = ap_const_lv1_0) and (icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln79_5_fu_349_p2 = ap_const_lv1_0))) then
                icmp_ln79_6_reg_588 <= icmp_ln79_6_fu_360_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_fu_338_p2 = ap_const_lv1_0) and (icmp_ln79_3_fu_327_p2 = ap_const_lv1_0) and (icmp_ln79_2_fu_293_p2 = ap_const_lv1_0) and (icmp_ln79_1_fu_259_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln79_6_fu_360_p2 = ap_const_lv1_0) and (icmp_ln79_5_fu_349_p2 = ap_const_lv1_0))) then
                icmp_ln79_7_reg_592 <= icmp_ln79_7_fu_371_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln79_reg_543 <= icmp_ln79_fu_225_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln717_3_reg_596 <= add_ln1245_3_fu_394_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                trunc_ln717_4_reg_601 <= add_ln1245_4_fu_417_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then
                trunc_ln717_5_reg_606 <= add_ln1245_5_fu_440_p2(23 downto 8);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then
                trunc_ln717_6_reg_612 <= add_ln1245_6_fu_462_p2(23 downto 8);
            end if;
        end if;
    end process;
    conv1_i_cast_reg_531(31 downto 16) <= "0000000000000000";
    ap_exit_tran_regpp0(7 downto 3) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage0_subdone, ap_exit_tran_regpp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_7) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_exit_tran_regpp0 = ap_const_lv8_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;
    add_ln1245_1_fu_272_p2 <= std_logic_vector(unsigned(shl_ln737_2_fu_264_p3) + unsigned(mul_ln736));
    add_ln1245_2_fu_306_p2 <= std_logic_vector(unsigned(shl_ln737_3_fu_298_p3) + unsigned(mul_ln736));
    add_ln1245_3_fu_394_p2 <= std_logic_vector(unsigned(shl_ln737_6_fu_387_p3) + unsigned(mul_ln736));
    add_ln1245_4_fu_417_p2 <= std_logic_vector(unsigned(shl_ln737_7_fu_409_p3) + unsigned(mul_ln736));
    add_ln1245_5_fu_440_p2 <= std_logic_vector(unsigned(shl_ln737_8_fu_432_p3) + unsigned(mul_ln736));
    add_ln1245_6_fu_462_p2 <= std_logic_vector(unsigned(shl_ln737_9_fu_455_p3) + unsigned(mul_ln736));
    add_ln1245_7_fu_485_p2 <= std_logic_vector(unsigned(shl_ln737_s_fu_477_p3) + unsigned(mul_ln736));
    add_ln1245_fu_238_p2 <= std_logic_vector(unsigned(shl_ln_fu_230_p3) + unsigned(mul_ln736));
    add_ln79_fu_376_p2 <= std_logic_vector(unsigned(inNeurons_0_fu_86) + unsigned(ap_const_lv32_8));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_pp0_flush_enable_assign_proc : process(icmp_ln79_reg_543, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_predicate_tran4to5_state3, ap_predicate_tran4to6_state3, ap_predicate_tran4to7_state3, ap_predicate_tran4to8_state3, ap_predicate_tran4to9_state3, ap_predicate_tran4to10_state3, ap_predicate_tran4to11_state3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and ((icmp_ln79_reg_543 = ap_const_lv1_1) or (ap_predicate_tran4to11_state3 = ap_const_boolean_1) or (ap_predicate_tran4to10_state3 = ap_const_boolean_1) or (ap_predicate_tran4to9_state3 = ap_const_boolean_1) or (ap_predicate_tran4to8_state3 = ap_const_boolean_1) or (ap_predicate_tran4to7_state3 = ap_const_boolean_1) or (ap_predicate_tran4to6_state3 = ap_const_boolean_1) or (ap_predicate_tran4to5_state3 = ap_const_boolean_1)))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_UnifiedRetVal_phi_fu_178_p16_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, UnifiedRetVal_reg_168, ap_CS_fsm_state5)
    begin
        if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then 
            ap_phi_mux_UnifiedRetVal_phi_fu_178_p16 <= ap_const_lv3_1;
        else 
            ap_phi_mux_UnifiedRetVal_phi_fu_178_p16 <= UnifiedRetVal_reg_168;
        end if; 
    end process;


    ap_predicate_tran4to10_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566)
    begin
                ap_predicate_tran4to10_state3 <= ((icmp_ln79_2_reg_566 = ap_const_lv1_1) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0));
    end process;


    ap_predicate_tran4to11_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557)
    begin
                ap_predicate_tran4to11_state3 <= ((icmp_ln79_1_reg_557 = ap_const_lv1_1) and (icmp_ln79_reg_543 = ap_const_lv1_0));
    end process;


    ap_predicate_tran4to5_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, icmp_ln79_7_reg_592)
    begin
                ap_predicate_tran4to5_state3 <= ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (icmp_ln79_7_reg_592 = ap_const_lv1_1) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0));
    end process;


    ap_predicate_tran4to6_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588)
    begin
                ap_predicate_tran4to6_state3 <= ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (icmp_ln79_6_reg_588 = ap_const_lv1_1) and (icmp_ln79_5_reg_584 = ap_const_lv1_0));
    end process;


    ap_predicate_tran4to7_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584)
    begin
                ap_predicate_tran4to7_state3 <= ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_1));
    end process;


    ap_predicate_tran4to8_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580)
    begin
                ap_predicate_tran4to8_state3 <= ((icmp_ln79_4_reg_580 = ap_const_lv1_1) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0));
    end process;


    ap_predicate_tran4to9_state3_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576)
    begin
                ap_predicate_tran4to9_state3 <= ((icmp_ln79_3_reg_576 = ap_const_lv1_1) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_return_assign_proc : process(ap_phi_mux_UnifiedRetVal_phi_fu_178_p16, ap_CS_fsm_state5, ap_return_preg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            ap_return <= ap_phi_mux_UnifiedRetVal_phi_fu_178_p16;
        else 
            ap_return <= ap_return_preg;
        end if; 
    end process;


    ap_sig_allocacmp_p_load12_assign_proc : process(icmp_ln79_reg_543, ap_CS_fsm_pp0_stage0, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, icmp_ln79_7_reg_592, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, empty_fu_90, add_ln1245_7_fu_485_p2)
    begin
        if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_7_reg_592 = ap_const_lv1_0) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then 
            ap_sig_allocacmp_p_load12 <= add_ln1245_7_fu_485_p2(23 downto 8);
        else 
            ap_sig_allocacmp_p_load12 <= empty_fu_90;
        end if; 
    end process;

    conv1_i_cast_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(conv1_i),32));

    grp_load_fu_204_p1_assign_proc : process(icmp_ln79_fu_225_p2, icmp_ln79_reg_543, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_block_pp0_stage0, empty_fu_90, ap_sig_allocacmp_p_load12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            grp_load_fu_204_p1 <= empty_fu_90;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_225_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_load_fu_204_p1 <= ap_sig_allocacmp_p_load12;
        else 
            grp_load_fu_204_p1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    icmp_ln79_1_fu_259_p2 <= "1" when (or_ln79_fu_253_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_2_fu_293_p2 <= "1" when (or_ln79_1_fu_287_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_3_fu_327_p2 <= "1" when (or_ln79_2_fu_321_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_4_fu_338_p2 <= "1" when (or_ln79_3_fu_332_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_5_fu_349_p2 <= "1" when (or_ln79_4_fu_343_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_6_fu_360_p2 <= "1" when (or_ln79_5_fu_354_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_7_fu_371_p2 <= "1" when (or_ln79_6_fu_365_p2 = conv1_i_cast_reg_531) else "0";
    icmp_ln79_fu_225_p2 <= "1" when (inNeurons_0_fu_86 = conv1_i_cast_reg_531) else "0";
    or_ln79_1_fu_287_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_2);
    or_ln79_2_fu_321_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_3);
    or_ln79_3_fu_332_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_4);
    or_ln79_4_fu_343_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_5);
    or_ln79_5_fu_354_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_6);
    or_ln79_6_fu_365_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_7);
    or_ln79_fu_253_p2 <= (inNeurons_0_fu_86 or ap_const_lv32_1);

    p_out_assign_proc : process(icmp_ln79_reg_543, grp_load_fu_204_p1, p_load12_reg_547, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            p_out <= p_load12_reg_547;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            p_out <= grp_load_fu_204_p1;
        else 
            p_out <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state12, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            p_out_ap_vld <= ap_const_logic_1;
        else 
            p_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln737_2_fu_264_p3 <= (trunc_ln1_fu_243_p4 & ap_const_lv8_0);
    shl_ln737_3_fu_298_p3 <= (trunc_ln717_1_fu_277_p4 & ap_const_lv8_0);
    shl_ln737_6_fu_387_p3 <= (trunc_ln717_2_reg_570 & ap_const_lv8_0);
    shl_ln737_7_fu_409_p3 <= (trunc_ln717_3_fu_399_p4 & ap_const_lv8_0);
    shl_ln737_8_fu_432_p3 <= (trunc_ln717_4_fu_422_p4 & ap_const_lv8_0);
    shl_ln737_9_fu_455_p3 <= (trunc_ln717_5_reg_606 & ap_const_lv8_0);
    shl_ln737_s_fu_477_p3 <= (trunc_ln717_6_fu_467_p4 & ap_const_lv8_0);
    shl_ln_fu_230_p3 <= (grp_load_fu_204_p1 & ap_const_lv8_0);
    trunc_ln1_fu_243_p4 <= add_ln1245_fu_238_p2(23 downto 8);
    trunc_ln1_out <= trunc_ln1_reg_552;

    trunc_ln1_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln1_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_1_fu_277_p4 <= add_ln1245_1_fu_272_p2(23 downto 8);
    trunc_ln717_1_out <= trunc_ln717_1_reg_561;

    trunc_ln717_1_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln717_1_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_2_out <= trunc_ln717_2_reg_570;

    trunc_ln717_2_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln717_2_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_3_fu_399_p4 <= add_ln1245_3_fu_394_p2(23 downto 8);
    trunc_ln717_3_out <= trunc_ln717_3_reg_596;

    trunc_ln717_3_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln717_3_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_3_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_4_fu_422_p4 <= add_ln1245_4_fu_417_p2(23 downto 8);
    trunc_ln717_4_out <= trunc_ln717_4_reg_601;

    trunc_ln717_4_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln717_4_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_4_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_5_out <= trunc_ln717_5_reg_606;

    trunc_ln717_5_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0)))) then 
            trunc_ln717_5_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_5_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln717_6_fu_467_p4 <= add_ln1245_6_fu_462_p2(23 downto 8);
    trunc_ln717_6_out <= trunc_ln717_6_reg_612;

    trunc_ln717_6_out_ap_vld_assign_proc : process(icmp_ln79_reg_543, icmp_ln79_1_reg_557, icmp_ln79_2_reg_566, icmp_ln79_3_reg_576, icmp_ln79_4_reg_580, icmp_ln79_5_reg_584, icmp_ln79_6_reg_588, ap_CS_fsm_state5)
    begin
        if (((icmp_ln79_4_reg_580 = ap_const_lv1_0) and (icmp_ln79_3_reg_576 = ap_const_lv1_0) and (icmp_ln79_2_reg_566 = ap_const_lv1_0) and (icmp_ln79_1_reg_557 = ap_const_lv1_0) and (icmp_ln79_reg_543 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln79_6_reg_588 = ap_const_lv1_0) and (icmp_ln79_5_reg_584 = ap_const_lv1_0))) then 
            trunc_ln717_6_out_ap_vld <= ap_const_logic_1;
        else 
            trunc_ln717_6_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

end behav;
