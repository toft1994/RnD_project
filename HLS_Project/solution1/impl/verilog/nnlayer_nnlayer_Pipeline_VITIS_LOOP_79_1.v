// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_79_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        numOfInNeurons,
        p_ZL8weights_0_load,
        p_ZL8weights_1_load,
        p_ZL8weights_2_load,
        p_ZL8weights_3_load,
        p_ZL8weights_4_load,
        p_ZL8weights_5_load,
        p_ZL8weights_6_load,
        p_ZL8weights_7_load,
        p_ZL8weights_8_load,
        p_ZL8weights_9_load,
        p_ZL8weights_10_load,
        p_ZL8weights_11_load,
        p_ZL8weights_12_load,
        p_ZL8weights_13_load,
        p_ZL8weights_14_load,
        p_ZL8weights_15_load,
        p_ZL8weights_16_load,
        p_ZL8weights_17_load,
        p_ZL8weights_18_load,
        p_ZL8weights_19_load,
        p_ZL8weights_20_load,
        p_ZL8weights_21_load,
        p_ZL8weights_22_load,
        p_ZL8weights_23_load,
        p_ZL8weights_24_load,
        p_ZL8weights_25_load,
        p_ZL8weights_26_load,
        p_ZL8weights_27_load,
        p_ZL8weights_28_load,
        p_ZL8weights_29_load,
        p_ZL8weights_30_load,
        p_ZL8weights_31_load,
        p_ZL8weights_32_load,
        p_ZL8weights_33_load,
        p_ZL8weights_34_load,
        p_ZL8weights_35_load,
        p_ZL8weights_36_load,
        p_ZL8weights_37_load,
        p_ZL8weights_38_load,
        p_ZL8weights_39_load,
        p_ZL8weights_40_load,
        p_ZL8weights_41_load,
        p_ZL8weights_42_load,
        p_ZL8weights_43_load,
        p_ZL8weights_44_load,
        p_ZL8weights_45_load,
        p_ZL8weights_46_load,
        p_ZL8weights_47_load,
        p_ZL8weights_48_load,
        p_ZL8weights_49_load,
        p_ZL8weights_50_load,
        p_ZL8weights_51_load,
        p_ZL8weights_52_load,
        p_ZL8weights_53_load,
        p_ZL8weights_54_load,
        p_ZL8weights_55_load,
        p_ZL8weights_56_load,
        p_ZL8weights_57_load,
        p_ZL8weights_58_load,
        p_ZL8weights_59_load,
        p_ZL8weights_60_load,
        p_ZL8weights_61_load,
        p_ZL8weights_62_load,
        p_ZL8weights_63_load,
        sext_ln1245,
        sext_ln1245_1,
        sext_ln1245_2,
        sext_ln1245_3,
        sext_ln1245_4,
        sext_ln1245_5,
        sext_ln1245_6,
        sext_ln1245_7,
        mux_case_762_phi_out,
        mux_case_762_phi_out_ap_vld,
        mux_case_661_phi_out,
        mux_case_661_phi_out_ap_vld,
        mux_case_560_phi_out,
        mux_case_560_phi_out_ap_vld,
        mux_case_459_phi_out,
        mux_case_459_phi_out_ap_vld,
        mux_case_358_phi_out,
        mux_case_358_phi_out_ap_vld,
        mux_case_257_phi_out,
        mux_case_257_phi_out_ap_vld,
        mux_case_156_phi_out,
        mux_case_156_phi_out_ap_vld,
        mux_case_055_phi_out,
        mux_case_055_phi_out_ap_vld,
        p_ZL7output_0_i,
        p_ZL7output_0_o,
        p_ZL7output_0_o_ap_vld,
        p_ZL7output_1_i,
        p_ZL7output_1_o,
        p_ZL7output_1_o_ap_vld,
        p_ZL7output_2_i,
        p_ZL7output_2_o,
        p_ZL7output_2_o_ap_vld,
        p_ZL7output_3_i,
        p_ZL7output_3_o,
        p_ZL7output_3_o_ap_vld,
        p_ZL7output_4_i,
        p_ZL7output_4_o,
        p_ZL7output_4_o_ap_vld,
        p_ZL7output_5_i,
        p_ZL7output_5_o,
        p_ZL7output_5_o_ap_vld,
        p_ZL7output_6_i,
        p_ZL7output_6_o,
        p_ZL7output_6_o_ap_vld,
        p_ZL7output_7_i,
        p_ZL7output_7_o,
        p_ZL7output_7_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] numOfInNeurons;
input  [15:0] p_ZL8weights_0_load;
input  [15:0] p_ZL8weights_1_load;
input  [15:0] p_ZL8weights_2_load;
input  [15:0] p_ZL8weights_3_load;
input  [15:0] p_ZL8weights_4_load;
input  [15:0] p_ZL8weights_5_load;
input  [15:0] p_ZL8weights_6_load;
input  [15:0] p_ZL8weights_7_load;
input  [15:0] p_ZL8weights_8_load;
input  [15:0] p_ZL8weights_9_load;
input  [15:0] p_ZL8weights_10_load;
input  [15:0] p_ZL8weights_11_load;
input  [15:0] p_ZL8weights_12_load;
input  [15:0] p_ZL8weights_13_load;
input  [15:0] p_ZL8weights_14_load;
input  [15:0] p_ZL8weights_15_load;
input  [15:0] p_ZL8weights_16_load;
input  [15:0] p_ZL8weights_17_load;
input  [15:0] p_ZL8weights_18_load;
input  [15:0] p_ZL8weights_19_load;
input  [15:0] p_ZL8weights_20_load;
input  [15:0] p_ZL8weights_21_load;
input  [15:0] p_ZL8weights_22_load;
input  [15:0] p_ZL8weights_23_load;
input  [15:0] p_ZL8weights_24_load;
input  [15:0] p_ZL8weights_25_load;
input  [15:0] p_ZL8weights_26_load;
input  [15:0] p_ZL8weights_27_load;
input  [15:0] p_ZL8weights_28_load;
input  [15:0] p_ZL8weights_29_load;
input  [15:0] p_ZL8weights_30_load;
input  [15:0] p_ZL8weights_31_load;
input  [15:0] p_ZL8weights_32_load;
input  [15:0] p_ZL8weights_33_load;
input  [15:0] p_ZL8weights_34_load;
input  [15:0] p_ZL8weights_35_load;
input  [15:0] p_ZL8weights_36_load;
input  [15:0] p_ZL8weights_37_load;
input  [15:0] p_ZL8weights_38_load;
input  [15:0] p_ZL8weights_39_load;
input  [15:0] p_ZL8weights_40_load;
input  [15:0] p_ZL8weights_41_load;
input  [15:0] p_ZL8weights_42_load;
input  [15:0] p_ZL8weights_43_load;
input  [15:0] p_ZL8weights_44_load;
input  [15:0] p_ZL8weights_45_load;
input  [15:0] p_ZL8weights_46_load;
input  [15:0] p_ZL8weights_47_load;
input  [15:0] p_ZL8weights_48_load;
input  [15:0] p_ZL8weights_49_load;
input  [15:0] p_ZL8weights_50_load;
input  [15:0] p_ZL8weights_51_load;
input  [15:0] p_ZL8weights_52_load;
input  [15:0] p_ZL8weights_53_load;
input  [15:0] p_ZL8weights_54_load;
input  [15:0] p_ZL8weights_55_load;
input  [15:0] p_ZL8weights_56_load;
input  [15:0] p_ZL8weights_57_load;
input  [15:0] p_ZL8weights_58_load;
input  [15:0] p_ZL8weights_59_load;
input  [15:0] p_ZL8weights_60_load;
input  [15:0] p_ZL8weights_61_load;
input  [15:0] p_ZL8weights_62_load;
input  [15:0] p_ZL8weights_63_load;
input  [15:0] sext_ln1245;
input  [15:0] sext_ln1245_1;
input  [15:0] sext_ln1245_2;
input  [15:0] sext_ln1245_3;
input  [15:0] sext_ln1245_4;
input  [15:0] sext_ln1245_5;
input  [15:0] sext_ln1245_6;
input  [15:0] sext_ln1245_7;
output  [15:0] mux_case_762_phi_out;
output   mux_case_762_phi_out_ap_vld;
output  [15:0] mux_case_661_phi_out;
output   mux_case_661_phi_out_ap_vld;
output  [15:0] mux_case_560_phi_out;
output   mux_case_560_phi_out_ap_vld;
output  [15:0] mux_case_459_phi_out;
output   mux_case_459_phi_out_ap_vld;
output  [15:0] mux_case_358_phi_out;
output   mux_case_358_phi_out_ap_vld;
output  [15:0] mux_case_257_phi_out;
output   mux_case_257_phi_out_ap_vld;
output  [15:0] mux_case_156_phi_out;
output   mux_case_156_phi_out_ap_vld;
output  [15:0] mux_case_055_phi_out;
output   mux_case_055_phi_out_ap_vld;
input  [15:0] p_ZL7output_0_i;
output  [15:0] p_ZL7output_0_o;
output   p_ZL7output_0_o_ap_vld;
input  [15:0] p_ZL7output_1_i;
output  [15:0] p_ZL7output_1_o;
output   p_ZL7output_1_o_ap_vld;
input  [15:0] p_ZL7output_2_i;
output  [15:0] p_ZL7output_2_o;
output   p_ZL7output_2_o_ap_vld;
input  [15:0] p_ZL7output_3_i;
output  [15:0] p_ZL7output_3_o;
output   p_ZL7output_3_o_ap_vld;
input  [15:0] p_ZL7output_4_i;
output  [15:0] p_ZL7output_4_o;
output   p_ZL7output_4_o_ap_vld;
input  [15:0] p_ZL7output_5_i;
output  [15:0] p_ZL7output_5_o;
output   p_ZL7output_5_o_ap_vld;
input  [15:0] p_ZL7output_6_i;
output  [15:0] p_ZL7output_6_o;
output   p_ZL7output_6_o_ap_vld;
input  [15:0] p_ZL7output_7_i;
output  [15:0] p_ZL7output_7_o;
output   p_ZL7output_7_o_ap_vld;

reg ap_idle;
reg mux_case_762_phi_out_ap_vld;
reg mux_case_661_phi_out_ap_vld;
reg mux_case_560_phi_out_ap_vld;
reg mux_case_459_phi_out_ap_vld;
reg mux_case_358_phi_out_ap_vld;
reg mux_case_257_phi_out_ap_vld;
reg mux_case_156_phi_out_ap_vld;
reg mux_case_055_phi_out_ap_vld;
reg[15:0] p_ZL7output_0_o;
reg p_ZL7output_0_o_ap_vld;
reg[15:0] p_ZL7output_1_o;
reg p_ZL7output_1_o_ap_vld;
reg[15:0] p_ZL7output_2_o;
reg p_ZL7output_2_o_ap_vld;
reg[15:0] p_ZL7output_3_o;
reg p_ZL7output_3_o_ap_vld;
reg[15:0] p_ZL7output_4_o;
reg p_ZL7output_4_o_ap_vld;
reg[15:0] p_ZL7output_5_o;
reg p_ZL7output_5_o_ap_vld;
reg[15:0] p_ZL7output_6_o;
reg p_ZL7output_6_o_ap_vld;
reg[15:0] p_ZL7output_7_o;
reg p_ZL7output_7_o_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
reg   [0:0] icmp_ln79_reg_2672;
reg    ap_condition_exit_pp0_iter0_stage2;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln1245_7_cast_fu_956_p1;
reg  signed [23:0] sext_ln1245_7_cast_reg_2627;
wire  signed [23:0] sext_ln1245_6_cast_fu_960_p1;
reg  signed [23:0] sext_ln1245_6_cast_reg_2632;
wire  signed [23:0] sext_ln1245_5_cast_fu_964_p1;
reg  signed [23:0] sext_ln1245_5_cast_reg_2637;
wire  signed [23:0] sext_ln1245_4_cast_fu_968_p1;
reg  signed [23:0] sext_ln1245_4_cast_reg_2642;
wire  signed [23:0] sext_ln1245_3_cast_fu_972_p1;
reg  signed [23:0] sext_ln1245_3_cast_reg_2647;
wire  signed [23:0] sext_ln1245_2_cast_fu_976_p1;
reg  signed [23:0] sext_ln1245_2_cast_reg_2652;
wire  signed [23:0] sext_ln1245_1_cast_fu_980_p1;
reg  signed [23:0] sext_ln1245_1_cast_reg_2657;
reg   [3:0] indvars_iv33_load_reg_2667;
wire   [0:0] icmp_ln79_fu_1001_p2;
reg   [0:0] icmp_ln79_reg_2672_pp0_iter1_reg;
wire   [15:0] tmp_1_1_fu_1164_p66;
reg  signed [15:0] tmp_1_1_reg_2681;
wire   [15:0] tmp_1_2_fu_1304_p66;
reg  signed [15:0] tmp_1_2_reg_2686;
wire   [15:0] tmp_1_3_fu_1444_p66;
reg  signed [15:0] tmp_1_3_reg_2691;
wire   [15:0] tmp_1_4_fu_1584_p66;
reg  signed [15:0] tmp_1_4_reg_2696;
wire   [15:0] tmp_1_5_fu_1724_p66;
reg  signed [15:0] tmp_1_5_reg_2701;
wire   [15:0] tmp_1_6_fu_1864_p66;
reg  signed [15:0] tmp_1_6_reg_2706;
wire   [15:0] tmp_1_7_fu_2004_p66;
reg  signed [15:0] tmp_1_7_reg_2711;
wire   [2:0] trunc_ln736_fu_2138_p1;
reg   [2:0] trunc_ln736_reg_2716;
reg   [2:0] trunc_ln736_reg_2716_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] p_ZL7output_0_load_reg_2725;
wire    ap_block_pp0_stage2_11001;
reg   [15:0] p_ZL7output_1_load_reg_2736;
reg   [15:0] p_ZL7output_2_load_reg_2747;
reg   [15:0] p_ZL7output_3_load_reg_2758;
reg   [15:0] p_ZL7output_4_load_reg_2769;
reg   [15:0] p_ZL7output_5_load_reg_2780;
reg   [15:0] p_ZL7output_6_load_reg_2791;
reg   [15:0] p_ZL7output_7_load_reg_2802;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire    ap_block_pp0_stage7_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [15:0] ap_phi_mux_mux_case_762_phi_fu_791_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_762_reg_788;
reg   [15:0] ap_phi_mux_mux_case_661_phi_fu_812_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_661_reg_809;
reg   [15:0] ap_phi_mux_mux_case_560_phi_fu_833_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_560_reg_830;
reg   [15:0] ap_phi_mux_mux_case_459_phi_fu_854_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_459_reg_851;
reg   [15:0] ap_phi_mux_mux_case_358_phi_fu_875_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_358_reg_872;
reg   [15:0] ap_phi_mux_mux_case_257_phi_fu_896_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_257_reg_893;
reg   [15:0] ap_phi_mux_mux_case_156_phi_fu_917_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_156_reg_914;
reg   [15:0] ap_phi_mux_mux_case_055_phi_fu_938_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_055_reg_935;
wire    ap_block_pp0_stage2;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_0_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_1_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_2_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_3_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_4_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_5_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_6_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_7_load;
reg   [15:0] mux_case_055_phi_fu_254;
reg   [15:0] mux_case_156_phi_fu_258;
reg   [15:0] mux_case_257_phi_fu_262;
reg   [15:0] mux_case_358_phi_fu_266;
reg   [15:0] mux_case_459_phi_fu_270;
reg   [15:0] mux_case_560_phi_fu_274;
reg   [15:0] mux_case_661_phi_fu_278;
reg   [15:0] mux_case_762_phi_fu_282;
reg   [15:0] conv1250_i_fu_286;
wire   [15:0] add_ln86_fu_2145_p2;
wire    ap_loop_init;
reg   [15:0] ap_sig_allocacmp_conv1250_i_load_1;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_sig_allocacmp_conv1250_i_load;
reg   [3:0] indvars_iv33_fu_290;
wire   [3:0] add_ln79_fu_1007_p2;
reg   [3:0] ap_sig_allocacmp_indvars_iv33_load;
wire    ap_block_pp0_stage2_01001;
wire  signed [15:0] tmp_1_fu_1020_p66;
wire   [16:0] zext_ln736_fu_1016_p1;
wire   [16:0] tmp_1_1_fu_1164_p65;
wire   [16:0] tmp_1_2_fu_1304_p65;
wire   [16:0] tmp_1_3_fu_1444_p65;
wire   [16:0] tmp_1_4_fu_1584_p65;
wire   [16:0] tmp_1_5_fu_1724_p65;
wire   [16:0] tmp_1_6_fu_1864_p65;
wire   [16:0] tmp_1_7_fu_2004_p65;
wire    ap_block_pp0_stage1;
wire   [15:0] tmp_fu_2196_p10;
wire  signed [23:0] tmp_2_fu_2228_p1;
wire   [23:0] grp_fu_2499_p3;
wire    ap_block_pp0_stage3;
wire   [15:0] tmp_2_fu_2228_p4;
wire  signed [23:0] tmp_4_fu_2248_p1;
wire   [23:0] grp_fu_2508_p3;
wire    ap_block_pp0_stage4;
wire   [15:0] tmp_4_fu_2248_p4;
wire  signed [23:0] tmp_5_fu_2268_p1;
wire   [23:0] grp_fu_2516_p3;
wire    ap_block_pp0_stage5;
wire   [15:0] tmp_5_fu_2268_p4;
wire  signed [23:0] tmp_7_fu_2288_p1;
wire   [23:0] grp_fu_2524_p3;
wire    ap_block_pp0_stage6;
wire   [15:0] tmp_7_fu_2288_p4;
wire  signed [23:0] tmp_8_fu_2308_p1;
wire   [23:0] grp_fu_2532_p3;
wire    ap_block_pp0_stage7;
wire   [15:0] tmp_8_fu_2308_p4;
wire  signed [23:0] tmp_9_fu_2328_p1;
wire   [23:0] grp_fu_2540_p3;
wire   [15:0] tmp_9_fu_2328_p4;
wire  signed [23:0] tmp_s_fu_2345_p1;
wire   [23:0] grp_fu_2548_p3;
wire   [15:0] tmp_s_fu_2345_p4;
wire  signed [23:0] trunc_ln717_7_fu_2362_p1;
wire   [23:0] grp_fu_2556_p3;
wire   [23:0] grp_fu_2499_p2;
wire  signed [15:0] grp_fu_2508_p0;
wire   [23:0] grp_fu_2508_p2;
wire  signed [15:0] grp_fu_2516_p0;
wire   [23:0] grp_fu_2516_p2;
wire  signed [15:0] grp_fu_2524_p0;
wire   [23:0] grp_fu_2524_p2;
wire  signed [15:0] grp_fu_2532_p0;
wire   [23:0] grp_fu_2532_p2;
wire  signed [15:0] grp_fu_2540_p0;
wire   [23:0] grp_fu_2540_p2;
wire  signed [15:0] grp_fu_2548_p0;
wire   [23:0] grp_fu_2548_p2;
wire  signed [15:0] grp_fu_2556_p0;
wire   [23:0] grp_fu_2556_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U84(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(ap_sig_allocacmp_conv1250_i_load_1),
    .dout(tmp_1_fu_1020_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U85(
    .din0(16'd0),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_1_fu_1164_p65),
    .dout(tmp_1_1_fu_1164_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U86(
    .din0(16'd0),
    .din1(16'd0),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_2_fu_1304_p65),
    .dout(tmp_1_2_fu_1304_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U87(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_3_fu_1444_p65),
    .dout(tmp_1_3_fu_1444_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U88(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_4_fu_1584_p65),
    .dout(tmp_1_4_fu_1584_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U89(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_5_fu_1724_p65),
    .dout(tmp_1_5_fu_1724_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U90(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_6_fu_1864_p65),
    .dout(tmp_1_6_fu_1864_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U91(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_1_7_fu_2004_p65),
    .dout(tmp_1_7_fu_2004_p66)
);

nnlayer_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U92(
    .din0(ap_sig_allocacmp_p_ZL7output_0_load),
    .din1(ap_sig_allocacmp_p_ZL7output_1_load),
    .din2(ap_sig_allocacmp_p_ZL7output_2_load),
    .din3(ap_sig_allocacmp_p_ZL7output_3_load),
    .din4(ap_sig_allocacmp_p_ZL7output_4_load),
    .din5(ap_sig_allocacmp_p_ZL7output_5_load),
    .din6(ap_sig_allocacmp_p_ZL7output_6_load),
    .din7(ap_sig_allocacmp_p_ZL7output_7_load),
    .din8(indvars_iv33_load_reg_2667),
    .dout(tmp_fu_2196_p10)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln1245),
    .din1(tmp_1_fu_1020_p66),
    .din2(grp_fu_2499_p2),
    .ce(1'b1),
    .dout(grp_fu_2499_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2508_p0),
    .din1(tmp_1_1_reg_2681),
    .din2(grp_fu_2508_p2),
    .ce(1'b1),
    .dout(grp_fu_2508_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2516_p0),
    .din1(tmp_1_2_reg_2686),
    .din2(grp_fu_2516_p2),
    .ce(1'b1),
    .dout(grp_fu_2516_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2524_p0),
    .din1(tmp_1_3_reg_2691),
    .din2(grp_fu_2524_p2),
    .ce(1'b1),
    .dout(grp_fu_2524_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2532_p0),
    .din1(tmp_1_4_reg_2696),
    .din2(grp_fu_2532_p2),
    .ce(1'b1),
    .dout(grp_fu_2532_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2540_p0),
    .din1(tmp_1_5_reg_2701),
    .din2(grp_fu_2540_p2),
    .ce(1'b1),
    .dout(grp_fu_2540_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2548_p0),
    .din1(tmp_1_6_reg_2706),
    .din2(grp_fu_2548_p2),
    .ce(1'b1),
    .dout(grp_fu_2548_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2556_p0),
    .din1(tmp_1_7_reg_2711),
    .din2(grp_fu_2556_p2),
    .ce(1'b1),
    .dout(grp_fu_2556_p3)
);

nnlayer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage2),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln79_fu_1001_p2 == 1'd0))) begin
            conv1250_i_fu_286 <= add_ln86_fu_2145_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            conv1250_i_fu_286 <= 16'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln79_fu_1001_p2 == 1'd0))) begin
            indvars_iv33_fu_290 <= add_ln79_fu_1007_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv33_fu_290 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln79_reg_2672 <= icmp_ln79_fu_1001_p2;
        icmp_ln79_reg_2672_pp0_iter1_reg <= icmp_ln79_reg_2672;
        indvars_iv33_load_reg_2667 <= ap_sig_allocacmp_indvars_iv33_load;
        sext_ln1245_1_cast_reg_2657 <= sext_ln1245_1_cast_fu_980_p1;
        sext_ln1245_2_cast_reg_2652 <= sext_ln1245_2_cast_fu_976_p1;
        sext_ln1245_3_cast_reg_2647 <= sext_ln1245_3_cast_fu_972_p1;
        sext_ln1245_4_cast_reg_2642 <= sext_ln1245_4_cast_fu_968_p1;
        sext_ln1245_5_cast_reg_2637 <= sext_ln1245_5_cast_fu_964_p1;
        sext_ln1245_6_cast_reg_2632 <= sext_ln1245_6_cast_fu_960_p1;
        sext_ln1245_7_cast_reg_2627 <= sext_ln1245_7_cast_fu_956_p1;
        trunc_ln736_reg_2716_pp0_iter1_reg <= trunc_ln736_reg_2716;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_055_phi_fu_254 <= ap_phi_mux_mux_case_055_phi_fu_938_p16;
        mux_case_156_phi_fu_258 <= ap_phi_mux_mux_case_156_phi_fu_917_p16;
        mux_case_257_phi_fu_262 <= ap_phi_mux_mux_case_257_phi_fu_896_p16;
        mux_case_358_phi_fu_266 <= ap_phi_mux_mux_case_358_phi_fu_875_p16;
        mux_case_459_phi_fu_270 <= ap_phi_mux_mux_case_459_phi_fu_854_p16;
        mux_case_560_phi_fu_274 <= ap_phi_mux_mux_case_560_phi_fu_833_p16;
        mux_case_661_phi_fu_278 <= ap_phi_mux_mux_case_661_phi_fu_812_p16;
        mux_case_762_phi_fu_282 <= ap_phi_mux_mux_case_762_phi_fu_791_p16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln79_reg_2672 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_0_load_reg_2725 <= ap_sig_allocacmp_p_ZL7output_0_load;
        p_ZL7output_1_load_reg_2736 <= ap_sig_allocacmp_p_ZL7output_1_load;
        p_ZL7output_2_load_reg_2747 <= ap_sig_allocacmp_p_ZL7output_2_load;
        p_ZL7output_3_load_reg_2758 <= ap_sig_allocacmp_p_ZL7output_3_load;
        p_ZL7output_4_load_reg_2769 <= ap_sig_allocacmp_p_ZL7output_4_load;
        p_ZL7output_5_load_reg_2780 <= ap_sig_allocacmp_p_ZL7output_5_load;
        p_ZL7output_6_load_reg_2791 <= ap_sig_allocacmp_p_ZL7output_6_load;
        p_ZL7output_7_load_reg_2802 <= ap_sig_allocacmp_p_ZL7output_7_load;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln79_fu_1001_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_1_1_reg_2681 <= tmp_1_1_fu_1164_p66;
        tmp_1_2_reg_2686 <= tmp_1_2_fu_1304_p66;
        tmp_1_3_reg_2691 <= tmp_1_3_fu_1444_p66;
        tmp_1_4_reg_2696 <= tmp_1_4_fu_1584_p66;
        tmp_1_5_reg_2701 <= tmp_1_5_fu_1724_p66;
        tmp_1_6_reg_2706 <= tmp_1_6_fu_1864_p66;
        tmp_1_7_reg_2711 <= tmp_1_7_fu_2004_p66;
        trunc_ln736_reg_2716 <= trunc_ln736_fu_2138_p1;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_055_phi_fu_938_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_055_phi_fu_938_p16 = p_ZL7output_0_load_reg_2725;
    end else begin
        ap_phi_mux_mux_case_055_phi_fu_938_p16 = ap_phi_reg_pp0_iter1_mux_case_055_reg_935;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_156_phi_fu_917_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_156_phi_fu_917_p16 = p_ZL7output_1_load_reg_2736;
    end else begin
        ap_phi_mux_mux_case_156_phi_fu_917_p16 = ap_phi_reg_pp0_iter1_mux_case_156_reg_914;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_257_phi_fu_896_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_257_phi_fu_896_p16 = p_ZL7output_2_load_reg_2747;
    end else begin
        ap_phi_mux_mux_case_257_phi_fu_896_p16 = ap_phi_reg_pp0_iter1_mux_case_257_reg_893;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_358_phi_fu_875_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_358_phi_fu_875_p16 = p_ZL7output_3_load_reg_2758;
    end else begin
        ap_phi_mux_mux_case_358_phi_fu_875_p16 = ap_phi_reg_pp0_iter1_mux_case_358_reg_872;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_459_phi_fu_854_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_459_phi_fu_854_p16 = p_ZL7output_4_load_reg_2769;
    end else begin
        ap_phi_mux_mux_case_459_phi_fu_854_p16 = ap_phi_reg_pp0_iter1_mux_case_459_reg_851;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_560_phi_fu_833_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_560_phi_fu_833_p16 = p_ZL7output_5_load_reg_2780;
    end else begin
        ap_phi_mux_mux_case_560_phi_fu_833_p16 = ap_phi_reg_pp0_iter1_mux_case_560_reg_830;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_661_phi_fu_812_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_661_phi_fu_812_p16 = p_ZL7output_6_load_reg_2791;
    end else begin
        ap_phi_mux_mux_case_661_phi_fu_812_p16 = ap_phi_reg_pp0_iter1_mux_case_661_reg_809;
    end
end

always @ (*) begin
    if ((((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)) | ((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0)))) begin
        ap_phi_mux_mux_case_762_phi_fu_791_p16 = p_ZL7output_7_load_reg_2802;
    end else if (((trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_mux_case_762_phi_fu_791_p16 = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_phi_mux_mux_case_762_phi_fu_791_p16 = ap_phi_reg_pp0_iter1_mux_case_762_reg_788;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_conv1250_i_load = 16'd0;
    end else begin
        ap_sig_allocacmp_conv1250_i_load = conv1250_i_fu_286;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_conv1250_i_load_1 = 16'd0;
    end else begin
        ap_sig_allocacmp_conv1250_i_load_1 = conv1250_i_fu_286;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv33_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv33_load = indvars_iv33_fu_290;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_0_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_0_load = p_ZL7output_0_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_1_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_1_load = p_ZL7output_1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_2_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_2_load = p_ZL7output_2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_3_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_3_load = p_ZL7output_3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_4_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_4_load = p_ZL7output_4_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_5_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_5_load = p_ZL7output_5_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_6_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_6_load = p_ZL7output_6_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_ZL7output_7_load = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_7_load = p_ZL7output_7_i;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_055_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_055_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_156_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_156_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_257_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_257_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_358_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_358_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_459_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_459_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_560_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_560_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_661_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_661_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln79_reg_2672 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mux_case_762_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_762_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_0_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_0_o = p_ZL7output_0_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd0) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_0_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_1_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_1_o = p_ZL7output_1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd1) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_1_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_2_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_2_o = p_ZL7output_2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd2) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_2_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_3_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_3_o = p_ZL7output_3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd3) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_3_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_4_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_4_o = p_ZL7output_4_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd4) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_4_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_5_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_5_o = p_ZL7output_5_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd5) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_5_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_6_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_6_o = p_ZL7output_6_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd6) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_6_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_7_o = {{trunc_ln717_7_fu_2362_p1[23:8]}};
    end else begin
        p_ZL7output_7_o = p_ZL7output_7_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (trunc_ln736_reg_2716_pp0_iter1_reg == 3'd7) & (icmp_ln79_reg_2672_pp0_iter1_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_ZL7output_7_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage2)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln79_fu_1007_p2 = (ap_sig_allocacmp_indvars_iv33_load + 4'd1);

assign add_ln86_fu_2145_p2 = (ap_sig_allocacmp_conv1250_i_load + numOfInNeurons);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage2;

assign ap_phi_reg_pp0_iter1_mux_case_055_reg_935 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_156_reg_914 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_257_reg_893 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_358_reg_872 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_459_reg_851 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_560_reg_830 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_661_reg_809 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_762_reg_788 = 'bx;

assign grp_fu_2499_p2 = {{tmp_fu_2196_p10}, {8'd0}};

assign grp_fu_2508_p0 = sext_ln1245_1_cast_reg_2657;

assign grp_fu_2508_p2 = {{tmp_2_fu_2228_p4}, {8'd0}};

assign grp_fu_2516_p0 = sext_ln1245_2_cast_reg_2652;

assign grp_fu_2516_p2 = {{tmp_4_fu_2248_p4}, {8'd0}};

assign grp_fu_2524_p0 = sext_ln1245_3_cast_reg_2647;

assign grp_fu_2524_p2 = {{tmp_5_fu_2268_p4}, {8'd0}};

assign grp_fu_2532_p0 = sext_ln1245_4_cast_reg_2642;

assign grp_fu_2532_p2 = {{tmp_7_fu_2288_p4}, {8'd0}};

assign grp_fu_2540_p0 = sext_ln1245_5_cast_reg_2637;

assign grp_fu_2540_p2 = {{tmp_8_fu_2308_p4}, {8'd0}};

assign grp_fu_2548_p0 = sext_ln1245_6_cast_reg_2632;

assign grp_fu_2548_p2 = {{tmp_9_fu_2328_p4}, {8'd0}};

assign grp_fu_2556_p0 = sext_ln1245_7_cast_reg_2627;

assign grp_fu_2556_p2 = {{tmp_s_fu_2345_p4}, {8'd0}};

assign icmp_ln79_fu_1001_p2 = ((ap_sig_allocacmp_indvars_iv33_load == 4'd8) ? 1'b1 : 1'b0);

assign mux_case_055_phi_out = mux_case_055_phi_fu_254;

assign mux_case_156_phi_out = mux_case_156_phi_fu_258;

assign mux_case_257_phi_out = mux_case_257_phi_fu_262;

assign mux_case_358_phi_out = mux_case_358_phi_fu_266;

assign mux_case_459_phi_out = mux_case_459_phi_fu_270;

assign mux_case_560_phi_out = mux_case_560_phi_fu_274;

assign mux_case_661_phi_out = mux_case_661_phi_fu_278;

assign mux_case_762_phi_out = mux_case_762_phi_fu_282;

assign sext_ln1245_1_cast_fu_980_p1 = $signed(sext_ln1245_1);

assign sext_ln1245_2_cast_fu_976_p1 = $signed(sext_ln1245_2);

assign sext_ln1245_3_cast_fu_972_p1 = $signed(sext_ln1245_3);

assign sext_ln1245_4_cast_fu_968_p1 = $signed(sext_ln1245_4);

assign sext_ln1245_5_cast_fu_964_p1 = $signed(sext_ln1245_5);

assign sext_ln1245_6_cast_fu_960_p1 = $signed(sext_ln1245_6);

assign sext_ln1245_7_cast_fu_956_p1 = $signed(sext_ln1245_7);

assign tmp_1_1_fu_1164_p65 = (zext_ln736_fu_1016_p1 + 17'd1);

assign tmp_1_2_fu_1304_p65 = (zext_ln736_fu_1016_p1 + 17'd2);

assign tmp_1_3_fu_1444_p65 = (zext_ln736_fu_1016_p1 + 17'd3);

assign tmp_1_4_fu_1584_p65 = (zext_ln736_fu_1016_p1 + 17'd4);

assign tmp_1_5_fu_1724_p65 = (zext_ln736_fu_1016_p1 + 17'd5);

assign tmp_1_6_fu_1864_p65 = (zext_ln736_fu_1016_p1 + 17'd6);

assign tmp_1_7_fu_2004_p65 = (zext_ln736_fu_1016_p1 + 17'd7);

assign tmp_2_fu_2228_p1 = grp_fu_2499_p3;

assign tmp_2_fu_2228_p4 = {{tmp_2_fu_2228_p1[23:8]}};

assign tmp_4_fu_2248_p1 = grp_fu_2508_p3;

assign tmp_4_fu_2248_p4 = {{tmp_4_fu_2248_p1[23:8]}};

assign tmp_5_fu_2268_p1 = grp_fu_2516_p3;

assign tmp_5_fu_2268_p4 = {{tmp_5_fu_2268_p1[23:8]}};

assign tmp_7_fu_2288_p1 = grp_fu_2524_p3;

assign tmp_7_fu_2288_p4 = {{tmp_7_fu_2288_p1[23:8]}};

assign tmp_8_fu_2308_p1 = grp_fu_2532_p3;

assign tmp_8_fu_2308_p4 = {{tmp_8_fu_2308_p1[23:8]}};

assign tmp_9_fu_2328_p1 = grp_fu_2540_p3;

assign tmp_9_fu_2328_p4 = {{tmp_9_fu_2328_p1[23:8]}};

assign tmp_s_fu_2345_p1 = grp_fu_2548_p3;

assign tmp_s_fu_2345_p4 = {{tmp_s_fu_2345_p1[23:8]}};

assign trunc_ln717_7_fu_2362_p1 = grp_fu_2556_p3;

assign trunc_ln736_fu_2138_p1 = ap_sig_allocacmp_indvars_iv33_load[2:0];

assign zext_ln736_fu_1016_p1 = ap_sig_allocacmp_conv1250_i_load_1;

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_79_1
