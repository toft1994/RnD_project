// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_46_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        mul_ln1169,
        mul_ln1169_1,
        mul_ln1169_2,
        mul_ln1169_3,
        mul_ln1169_4,
        mul_ln1169_5,
        mul_ln1169_6,
        mul_ln46,
        mux_case_75290_phi_out,
        mux_case_75290_phi_out_ap_vld,
        mux_case_65186_phi_out,
        mux_case_65186_phi_out_ap_vld,
        mux_case_55082_phi_out,
        mux_case_55082_phi_out_ap_vld,
        mux_case_44978_phi_out,
        mux_case_44978_phi_out_ap_vld,
        mux_case_34874_phi_out,
        mux_case_34874_phi_out_ap_vld,
        mux_case_24770_phi_out,
        mux_case_24770_phi_out_ap_vld,
        mux_case_14666_phi_out,
        mux_case_14666_phi_out_ap_vld,
        mux_case_04562_phi_out,
        mux_case_04562_phi_out_ap_vld,
        p_ZL7output_0_i,
        p_ZL7output_0_o,
        p_ZL7output_0_o_ap_vld,
        p_ZL7output_1_i,
        p_ZL7output_1_o,
        p_ZL7output_1_o_ap_vld,
        p_ZL7output_2_i,
        p_ZL7output_2_o,
        p_ZL7output_2_o_ap_vld,
        p_ZL7output_3_i,
        p_ZL7output_3_o,
        p_ZL7output_3_o_ap_vld,
        p_ZL7output_4_i,
        p_ZL7output_4_o,
        p_ZL7output_4_o_ap_vld,
        p_ZL7output_5_i,
        p_ZL7output_5_o,
        p_ZL7output_5_o_ap_vld,
        p_ZL7output_6_i,
        p_ZL7output_6_o,
        p_ZL7output_6_o_ap_vld,
        p_ZL7output_7_i,
        p_ZL7output_7_o,
        p_ZL7output_7_o_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [23:0] mul_ln1169;
input  [23:0] mul_ln1169_1;
input  [23:0] mul_ln1169_2;
input  [23:0] mul_ln1169_3;
input  [23:0] mul_ln1169_4;
input  [23:0] mul_ln1169_5;
input  [23:0] mul_ln1169_6;
input  [23:0] mul_ln46;
output  [15:0] mux_case_75290_phi_out;
output   mux_case_75290_phi_out_ap_vld;
output  [15:0] mux_case_65186_phi_out;
output   mux_case_65186_phi_out_ap_vld;
output  [15:0] mux_case_55082_phi_out;
output   mux_case_55082_phi_out_ap_vld;
output  [15:0] mux_case_44978_phi_out;
output   mux_case_44978_phi_out_ap_vld;
output  [15:0] mux_case_34874_phi_out;
output   mux_case_34874_phi_out_ap_vld;
output  [15:0] mux_case_24770_phi_out;
output   mux_case_24770_phi_out_ap_vld;
output  [15:0] mux_case_14666_phi_out;
output   mux_case_14666_phi_out_ap_vld;
output  [15:0] mux_case_04562_phi_out;
output   mux_case_04562_phi_out_ap_vld;
input  [15:0] p_ZL7output_0_i;
output  [15:0] p_ZL7output_0_o;
output   p_ZL7output_0_o_ap_vld;
input  [15:0] p_ZL7output_1_i;
output  [15:0] p_ZL7output_1_o;
output   p_ZL7output_1_o_ap_vld;
input  [15:0] p_ZL7output_2_i;
output  [15:0] p_ZL7output_2_o;
output   p_ZL7output_2_o_ap_vld;
input  [15:0] p_ZL7output_3_i;
output  [15:0] p_ZL7output_3_o;
output   p_ZL7output_3_o_ap_vld;
input  [15:0] p_ZL7output_4_i;
output  [15:0] p_ZL7output_4_o;
output   p_ZL7output_4_o_ap_vld;
input  [15:0] p_ZL7output_5_i;
output  [15:0] p_ZL7output_5_o;
output   p_ZL7output_5_o_ap_vld;
input  [15:0] p_ZL7output_6_i;
output  [15:0] p_ZL7output_6_o;
output   p_ZL7output_6_o_ap_vld;
input  [15:0] p_ZL7output_7_i;
output  [15:0] p_ZL7output_7_o;
output   p_ZL7output_7_o_ap_vld;

reg ap_idle;
reg mux_case_75290_phi_out_ap_vld;
reg mux_case_65186_phi_out_ap_vld;
reg mux_case_55082_phi_out_ap_vld;
reg mux_case_44978_phi_out_ap_vld;
reg mux_case_34874_phi_out_ap_vld;
reg mux_case_24770_phi_out_ap_vld;
reg mux_case_14666_phi_out_ap_vld;
reg mux_case_04562_phi_out_ap_vld;
reg[15:0] p_ZL7output_0_o;
reg p_ZL7output_0_o_ap_vld;
reg[15:0] p_ZL7output_1_o;
reg p_ZL7output_1_o_ap_vld;
reg[15:0] p_ZL7output_2_o;
reg p_ZL7output_2_o_ap_vld;
reg[15:0] p_ZL7output_3_o;
reg p_ZL7output_3_o_ap_vld;
reg[15:0] p_ZL7output_4_o;
reg p_ZL7output_4_o_ap_vld;
reg[15:0] p_ZL7output_5_o;
reg p_ZL7output_5_o_ap_vld;
reg[15:0] p_ZL7output_6_o;
reg p_ZL7output_6_o_ap_vld;
reg[15:0] p_ZL7output_7_o;
reg p_ZL7output_7_o_ap_vld;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln46_fu_418_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln46_reg_890;
reg   [15:0] p_ZL7output_0_load_reg_894;
reg   [15:0] p_ZL7output_1_load_reg_905;
reg   [15:0] p_ZL7output_2_load_reg_916;
reg   [15:0] p_ZL7output_3_load_reg_927;
reg   [15:0] p_ZL7output_4_load_reg_938;
reg   [15:0] p_ZL7output_5_load_reg_949;
reg   [15:0] p_ZL7output_6_load_reg_960;
reg   [15:0] p_ZL7output_7_load_reg_971;
reg   [15:0] tmp_2_reg_982;
wire   [2:0] trunc_ln736_fu_532_p1;
reg   [2:0] trunc_ln736_reg_987;
reg   [15:0] tmp_7_reg_991;
wire    ap_block_pp0_stage1_11001;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [15:0] ap_phi_mux_mux_case_75290_phi_fu_245_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_75290_reg_242;
reg   [15:0] ap_phi_mux_mux_case_65186_phi_fu_266_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_65186_reg_263;
reg   [15:0] ap_phi_mux_mux_case_55082_phi_fu_287_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_55082_reg_284;
reg   [15:0] ap_phi_mux_mux_case_44978_phi_fu_308_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_44978_reg_305;
reg   [15:0] ap_phi_mux_mux_case_34874_phi_fu_329_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_34874_reg_326;
reg   [15:0] ap_phi_mux_mux_case_24770_phi_fu_350_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_24770_reg_347;
reg   [15:0] ap_phi_mux_mux_case_14666_phi_fu_371_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_14666_reg_368;
reg   [15:0] ap_phi_mux_mux_case_04562_phi_fu_392_p16;
wire   [15:0] ap_phi_reg_pp0_iter1_mux_case_04562_reg_389;
wire    ap_block_pp0_stage0;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_0_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_1_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_2_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_3_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_4_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_5_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_6_load;
reg   [15:0] ap_sig_allocacmp_p_ZL7output_7_load;
reg   [15:0] mux_case_04562_phi_fu_102;
reg   [15:0] mux_case_14666_phi_fu_106;
reg   [15:0] mux_case_24770_phi_fu_110;
reg   [15:0] mux_case_34874_phi_fu_114;
reg   [15:0] mux_case_44978_phi_fu_118;
reg   [15:0] mux_case_55082_phi_fu_122;
reg   [15:0] mux_case_65186_phi_fu_126;
reg   [15:0] mux_case_75290_phi_fu_130;
reg   [3:0] indvars_iv23_fu_134;
wire   [3:0] add_ln46_fu_424_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_indvars_iv23_load;
wire    ap_block_pp0_stage0_01001;
wire   [15:0] tmp_fu_462_p10;
wire   [23:0] shl_ln_fu_484_p3;
wire   [23:0] add_ln1245_fu_492_p2;
wire   [15:0] tmp_1_fu_498_p4;
wire   [23:0] shl_ln737_1_fu_508_p3;
wire   [23:0] add_ln1245_1_fu_516_p2;
wire    ap_block_pp0_stage1;
wire   [23:0] shl_ln737_2_fu_541_p3;
wire   [23:0] add_ln1245_2_fu_548_p2;
wire   [15:0] tmp_5_fu_553_p4;
wire   [23:0] shl_ln737_3_fu_563_p3;
wire   [23:0] add_ln1245_3_fu_571_p2;
wire   [15:0] tmp_6_fu_576_p4;
wire   [23:0] shl_ln737_4_fu_586_p3;
wire   [23:0] add_ln1245_4_fu_594_p2;
wire   [23:0] shl_ln737_5_fu_609_p3;
wire   [23:0] add_ln1245_5_fu_616_p2;
wire   [15:0] tmp_8_fu_621_p4;
wire   [23:0] shl_ln737_6_fu_631_p3;
wire   [23:0] add_ln1245_6_fu_639_p2;
wire   [15:0] tmp_9_fu_644_p4;
wire   [23:0] shl_ln737_7_fu_654_p3;
wire   [23:0] add_ln1245_7_fu_662_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

nnlayer_mux_84_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
mux_84_16_1_1_U28(
    .din0(ap_sig_allocacmp_p_ZL7output_0_load),
    .din1(ap_sig_allocacmp_p_ZL7output_1_load),
    .din2(ap_sig_allocacmp_p_ZL7output_2_load),
    .din3(ap_sig_allocacmp_p_ZL7output_3_load),
    .din4(ap_sig_allocacmp_p_ZL7output_4_load),
    .din5(ap_sig_allocacmp_p_ZL7output_5_load),
    .din6(ap_sig_allocacmp_p_ZL7output_6_load),
    .din7(ap_sig_allocacmp_p_ZL7output_7_load),
    .din8(ap_sig_allocacmp_indvars_iv23_load),
    .dout(tmp_fu_462_p10)
);

nnlayer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln46_fu_418_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvars_iv23_fu_134 <= add_ln46_fu_424_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvars_iv23_fu_134 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln46_reg_890 <= icmp_ln46_fu_418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_04562_phi_fu_102 <= ap_phi_mux_mux_case_04562_phi_fu_392_p16;
        mux_case_14666_phi_fu_106 <= ap_phi_mux_mux_case_14666_phi_fu_371_p16;
        mux_case_24770_phi_fu_110 <= ap_phi_mux_mux_case_24770_phi_fu_350_p16;
        mux_case_34874_phi_fu_114 <= ap_phi_mux_mux_case_34874_phi_fu_329_p16;
        mux_case_44978_phi_fu_118 <= ap_phi_mux_mux_case_44978_phi_fu_308_p16;
        mux_case_55082_phi_fu_122 <= ap_phi_mux_mux_case_55082_phi_fu_287_p16;
        mux_case_65186_phi_fu_126 <= ap_phi_mux_mux_case_65186_phi_fu_266_p16;
        mux_case_75290_phi_fu_130 <= ap_phi_mux_mux_case_75290_phi_fu_245_p16;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln46_fu_418_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_ZL7output_0_load_reg_894 <= ap_sig_allocacmp_p_ZL7output_0_load;
        p_ZL7output_1_load_reg_905 <= ap_sig_allocacmp_p_ZL7output_1_load;
        p_ZL7output_2_load_reg_916 <= ap_sig_allocacmp_p_ZL7output_2_load;
        p_ZL7output_3_load_reg_927 <= ap_sig_allocacmp_p_ZL7output_3_load;
        p_ZL7output_4_load_reg_938 <= ap_sig_allocacmp_p_ZL7output_4_load;
        p_ZL7output_5_load_reg_949 <= ap_sig_allocacmp_p_ZL7output_5_load;
        p_ZL7output_6_load_reg_960 <= ap_sig_allocacmp_p_ZL7output_6_load;
        p_ZL7output_7_load_reg_971 <= ap_sig_allocacmp_p_ZL7output_7_load;
        tmp_2_reg_982 <= {{add_ln1245_1_fu_516_p2[23:8]}};
        trunc_ln736_reg_987 <= trunc_ln736_fu_532_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln46_reg_890 == 1'd0))) begin
        tmp_7_reg_991 <= {{add_ln1245_4_fu_594_p2[23:8]}};
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_04562_phi_fu_392_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_04562_phi_fu_392_p16 = p_ZL7output_0_load_reg_894;
    end else begin
        ap_phi_mux_mux_case_04562_phi_fu_392_p16 = ap_phi_reg_pp0_iter1_mux_case_04562_reg_389;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_14666_phi_fu_371_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_14666_phi_fu_371_p16 = p_ZL7output_1_load_reg_905;
    end else begin
        ap_phi_mux_mux_case_14666_phi_fu_371_p16 = ap_phi_reg_pp0_iter1_mux_case_14666_reg_368;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_24770_phi_fu_350_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_24770_phi_fu_350_p16 = p_ZL7output_2_load_reg_916;
    end else begin
        ap_phi_mux_mux_case_24770_phi_fu_350_p16 = ap_phi_reg_pp0_iter1_mux_case_24770_reg_347;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_34874_phi_fu_329_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_34874_phi_fu_329_p16 = p_ZL7output_3_load_reg_927;
    end else begin
        ap_phi_mux_mux_case_34874_phi_fu_329_p16 = ap_phi_reg_pp0_iter1_mux_case_34874_reg_326;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_44978_phi_fu_308_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_44978_phi_fu_308_p16 = p_ZL7output_4_load_reg_938;
    end else begin
        ap_phi_mux_mux_case_44978_phi_fu_308_p16 = ap_phi_reg_pp0_iter1_mux_case_44978_reg_305;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_55082_phi_fu_287_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_55082_phi_fu_287_p16 = p_ZL7output_5_load_reg_949;
    end else begin
        ap_phi_mux_mux_case_55082_phi_fu_287_p16 = ap_phi_reg_pp0_iter1_mux_case_55082_reg_284;
    end
end

always @ (*) begin
    if (((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_65186_phi_fu_266_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_65186_phi_fu_266_p16 = p_ZL7output_6_load_reg_960;
    end else begin
        ap_phi_mux_mux_case_65186_phi_fu_266_p16 = ap_phi_reg_pp0_iter1_mux_case_65186_reg_263;
    end
end

always @ (*) begin
    if ((((trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0)) | ((trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0)))) begin
        ap_phi_mux_mux_case_75290_phi_fu_245_p16 = p_ZL7output_7_load_reg_971;
    end else if (((trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_phi_mux_mux_case_75290_phi_fu_245_p16 = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_phi_mux_mux_case_75290_phi_fu_245_p16 = ap_phi_reg_pp0_iter1_mux_case_75290_reg_242;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_indvars_iv23_load = 4'd0;
    end else begin
        ap_sig_allocacmp_indvars_iv23_load = indvars_iv23_fu_134;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_0_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_0_load = p_ZL7output_0_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_1_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_1_load = p_ZL7output_1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_2_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_2_load = p_ZL7output_2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_3_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_3_load = p_ZL7output_3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_4_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_4_load = p_ZL7output_4_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_5_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_5_load = p_ZL7output_5_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_6_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_6_load = p_ZL7output_6_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0))) begin
        ap_sig_allocacmp_p_ZL7output_7_load = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        ap_sig_allocacmp_p_ZL7output_7_load = p_ZL7output_7_i;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_04562_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_04562_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_14666_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_14666_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_24770_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_24770_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_34874_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_34874_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_44978_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_44978_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_55082_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_55082_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_65186_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_65186_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln46_fu_418_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mux_case_75290_phi_out_ap_vld = 1'b1;
    end else begin
        mux_case_75290_phi_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_0_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_0_o = p_ZL7output_0_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd0) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_0_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_0_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_1_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_1_o = p_ZL7output_1_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd1) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_1_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_1_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_2_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_2_o = p_ZL7output_2_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd2) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_2_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_2_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_3_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_3_o = p_ZL7output_3_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd3) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_3_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_3_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_4_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_4_o = p_ZL7output_4_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd4) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_4_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_4_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_5_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_5_o = p_ZL7output_5_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd5) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_5_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_5_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_6_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_6_o = p_ZL7output_6_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd6) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_6_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_6_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_7_o = {{add_ln1245_7_fu_662_p2[23:8]}};
    end else begin
        p_ZL7output_7_o = p_ZL7output_7_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln736_reg_987 == 3'd7) & (icmp_ln46_reg_890 == 1'd0))) begin
        p_ZL7output_7_o_ap_vld = 1'b1;
    end else begin
        p_ZL7output_7_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1245_1_fu_516_p2 = (shl_ln737_1_fu_508_p3 + mul_ln1169_1);

assign add_ln1245_2_fu_548_p2 = (shl_ln737_2_fu_541_p3 + mul_ln1169_2);

assign add_ln1245_3_fu_571_p2 = (shl_ln737_3_fu_563_p3 + mul_ln1169_3);

assign add_ln1245_4_fu_594_p2 = (shl_ln737_4_fu_586_p3 + mul_ln1169_4);

assign add_ln1245_5_fu_616_p2 = (shl_ln737_5_fu_609_p3 + mul_ln1169_5);

assign add_ln1245_6_fu_639_p2 = (shl_ln737_6_fu_631_p3 + mul_ln1169_6);

assign add_ln1245_7_fu_662_p2 = (shl_ln737_7_fu_654_p3 + mul_ln46);

assign add_ln1245_fu_492_p2 = (shl_ln_fu_484_p3 + mul_ln1169);

assign add_ln46_fu_424_p2 = (ap_sig_allocacmp_indvars_iv23_load + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter1_mux_case_04562_reg_389 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_14666_reg_368 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_24770_reg_347 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_34874_reg_326 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_44978_reg_305 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_55082_reg_284 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_65186_reg_263 = 'bx;

assign ap_phi_reg_pp0_iter1_mux_case_75290_reg_242 = 'bx;

assign icmp_ln46_fu_418_p2 = ((ap_sig_allocacmp_indvars_iv23_load == 4'd8) ? 1'b1 : 1'b0);

assign mux_case_04562_phi_out = mux_case_04562_phi_fu_102;

assign mux_case_14666_phi_out = mux_case_14666_phi_fu_106;

assign mux_case_24770_phi_out = mux_case_24770_phi_fu_110;

assign mux_case_34874_phi_out = mux_case_34874_phi_fu_114;

assign mux_case_44978_phi_out = mux_case_44978_phi_fu_118;

assign mux_case_55082_phi_out = mux_case_55082_phi_fu_122;

assign mux_case_65186_phi_out = mux_case_65186_phi_fu_126;

assign mux_case_75290_phi_out = mux_case_75290_phi_fu_130;

assign shl_ln737_1_fu_508_p3 = {{tmp_1_fu_498_p4}, {8'd0}};

assign shl_ln737_2_fu_541_p3 = {{tmp_2_reg_982}, {8'd0}};

assign shl_ln737_3_fu_563_p3 = {{tmp_5_fu_553_p4}, {8'd0}};

assign shl_ln737_4_fu_586_p3 = {{tmp_6_fu_576_p4}, {8'd0}};

assign shl_ln737_5_fu_609_p3 = {{tmp_7_reg_991}, {8'd0}};

assign shl_ln737_6_fu_631_p3 = {{tmp_8_fu_621_p4}, {8'd0}};

assign shl_ln737_7_fu_654_p3 = {{tmp_9_fu_644_p4}, {8'd0}};

assign shl_ln_fu_484_p3 = {{tmp_fu_462_p10}, {8'd0}};

assign tmp_1_fu_498_p4 = {{add_ln1245_fu_492_p2[23:8]}};

assign tmp_5_fu_553_p4 = {{add_ln1245_2_fu_548_p2[23:8]}};

assign tmp_6_fu_576_p4 = {{add_ln1245_3_fu_571_p2[23:8]}};

assign tmp_8_fu_621_p4 = {{add_ln1245_5_fu_616_p2[23:8]}};

assign tmp_9_fu_644_p4 = {{add_ln1245_6_fu_639_p2[23:8]}};

assign trunc_ln736_fu_532_p1 = ap_sig_allocacmp_indvars_iv23_load[2:0];

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_46_1
