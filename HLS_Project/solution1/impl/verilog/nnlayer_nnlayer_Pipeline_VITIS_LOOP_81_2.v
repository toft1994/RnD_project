// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_81_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp,
        numOfInNeurons,
        zext_ln81,
        p_ZL8weights_0_load,
        p_ZL8weights_1_load,
        p_ZL8weights_2_load,
        p_ZL8weights_3_load,
        p_ZL8weights_4_load,
        p_ZL8weights_5_load,
        p_ZL8weights_6_load,
        p_ZL8weights_7_load,
        p_ZL8weights_8_load,
        p_ZL8weights_9_load,
        p_ZL8weights_10_load,
        p_ZL8weights_11_load,
        p_ZL8weights_12_load,
        p_ZL8weights_13_load,
        p_ZL8weights_14_load,
        p_ZL8weights_15_load,
        p_ZL8weights_16_load,
        p_ZL8weights_17_load,
        p_ZL8weights_18_load,
        p_ZL8weights_19_load,
        p_ZL8weights_20_load,
        p_ZL8weights_21_load,
        p_ZL8weights_22_load,
        p_ZL8weights_23_load,
        p_ZL8weights_24_load,
        p_ZL8weights_25_load,
        p_ZL8weights_26_load,
        p_ZL8weights_27_load,
        p_ZL8weights_28_load,
        p_ZL8weights_29_load,
        p_ZL8weights_30_load,
        p_ZL8weights_31_load,
        p_ZL8weights_32_load,
        p_ZL8weights_33_load,
        p_ZL8weights_34_load,
        p_ZL8weights_35_load,
        p_ZL8weights_36_load,
        p_ZL8weights_37_load,
        p_ZL8weights_38_load,
        p_ZL8weights_39_load,
        p_ZL8weights_40_load,
        p_ZL8weights_41_load,
        p_ZL8weights_42_load,
        p_ZL8weights_43_load,
        p_ZL8weights_44_load,
        p_ZL8weights_45_load,
        p_ZL8weights_46_load,
        p_ZL8weights_47_load,
        p_ZL8weights_48_load,
        p_ZL8weights_49_load,
        p_ZL8weights_50_load,
        p_ZL8weights_51_load,
        p_ZL8weights_52_load,
        p_ZL8weights_53_load,
        p_ZL8weights_54_load,
        p_ZL8weights_55_load,
        p_ZL8weights_56_load,
        p_ZL8weights_57_load,
        p_ZL8weights_58_load,
        p_ZL8weights_59_load,
        p_ZL8weights_60_load,
        p_ZL8weights_61_load,
        p_ZL8weights_62_load,
        p_ZL8weights_63_load,
        p_ZL6input_7_load,
        p_ZL6input_6_load,
        p_ZL6input_5_load,
        p_ZL6input_4_load,
        p_ZL6input_3_load,
        p_ZL6input_2_load,
        p_ZL6input_1_load,
        p_ZL6input_0_load,
        p_out,
        p_out_ap_vld,
        trunc_ln717_6_out,
        trunc_ln717_6_out_ap_vld,
        trunc_ln717_5_out,
        trunc_ln717_5_out_ap_vld,
        trunc_ln717_4_out,
        trunc_ln717_4_out_ap_vld,
        trunc_ln717_3_out,
        trunc_ln717_3_out_ap_vld,
        trunc_ln717_2_out,
        trunc_ln717_2_out_ap_vld,
        trunc_ln717_1_out,
        trunc_ln717_1_out_ap_vld,
        trunc_ln1_out,
        trunc_ln1_out_ap_vld,
        ap_return
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_pp0_stage0 = 17'd2;
parameter    ap_ST_fsm_pp0_stage1 = 17'd4;
parameter    ap_ST_fsm_pp0_stage2 = 17'd8;
parameter    ap_ST_fsm_pp0_stage3 = 17'd16;
parameter    ap_ST_fsm_pp0_stage4 = 17'd32;
parameter    ap_ST_fsm_pp0_stage5 = 17'd64;
parameter    ap_ST_fsm_pp0_stage6 = 17'd128;
parameter    ap_ST_fsm_pp0_stage7 = 17'd256;
parameter    ap_ST_fsm_state13 = 17'd512;
parameter    ap_ST_fsm_state14 = 17'd1024;
parameter    ap_ST_fsm_state15 = 17'd2048;
parameter    ap_ST_fsm_state16 = 17'd4096;
parameter    ap_ST_fsm_state17 = 17'd8192;
parameter    ap_ST_fsm_state18 = 17'd16384;
parameter    ap_ST_fsm_state19 = 17'd32768;
parameter    ap_ST_fsm_state20 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] tmp;
input  [15:0] numOfInNeurons;
input  [15:0] zext_ln81;
input  [15:0] p_ZL8weights_0_load;
input  [15:0] p_ZL8weights_1_load;
input  [15:0] p_ZL8weights_2_load;
input  [15:0] p_ZL8weights_3_load;
input  [15:0] p_ZL8weights_4_load;
input  [15:0] p_ZL8weights_5_load;
input  [15:0] p_ZL8weights_6_load;
input  [15:0] p_ZL8weights_7_load;
input  [15:0] p_ZL8weights_8_load;
input  [15:0] p_ZL8weights_9_load;
input  [15:0] p_ZL8weights_10_load;
input  [15:0] p_ZL8weights_11_load;
input  [15:0] p_ZL8weights_12_load;
input  [15:0] p_ZL8weights_13_load;
input  [15:0] p_ZL8weights_14_load;
input  [15:0] p_ZL8weights_15_load;
input  [15:0] p_ZL8weights_16_load;
input  [15:0] p_ZL8weights_17_load;
input  [15:0] p_ZL8weights_18_load;
input  [15:0] p_ZL8weights_19_load;
input  [15:0] p_ZL8weights_20_load;
input  [15:0] p_ZL8weights_21_load;
input  [15:0] p_ZL8weights_22_load;
input  [15:0] p_ZL8weights_23_load;
input  [15:0] p_ZL8weights_24_load;
input  [15:0] p_ZL8weights_25_load;
input  [15:0] p_ZL8weights_26_load;
input  [15:0] p_ZL8weights_27_load;
input  [15:0] p_ZL8weights_28_load;
input  [15:0] p_ZL8weights_29_load;
input  [15:0] p_ZL8weights_30_load;
input  [15:0] p_ZL8weights_31_load;
input  [15:0] p_ZL8weights_32_load;
input  [15:0] p_ZL8weights_33_load;
input  [15:0] p_ZL8weights_34_load;
input  [15:0] p_ZL8weights_35_load;
input  [15:0] p_ZL8weights_36_load;
input  [15:0] p_ZL8weights_37_load;
input  [15:0] p_ZL8weights_38_load;
input  [15:0] p_ZL8weights_39_load;
input  [15:0] p_ZL8weights_40_load;
input  [15:0] p_ZL8weights_41_load;
input  [15:0] p_ZL8weights_42_load;
input  [15:0] p_ZL8weights_43_load;
input  [15:0] p_ZL8weights_44_load;
input  [15:0] p_ZL8weights_45_load;
input  [15:0] p_ZL8weights_46_load;
input  [15:0] p_ZL8weights_47_load;
input  [15:0] p_ZL8weights_48_load;
input  [15:0] p_ZL8weights_49_load;
input  [15:0] p_ZL8weights_50_load;
input  [15:0] p_ZL8weights_51_load;
input  [15:0] p_ZL8weights_52_load;
input  [15:0] p_ZL8weights_53_load;
input  [15:0] p_ZL8weights_54_load;
input  [15:0] p_ZL8weights_55_load;
input  [15:0] p_ZL8weights_56_load;
input  [15:0] p_ZL8weights_57_load;
input  [15:0] p_ZL8weights_58_load;
input  [15:0] p_ZL8weights_59_load;
input  [15:0] p_ZL8weights_60_load;
input  [15:0] p_ZL8weights_61_load;
input  [15:0] p_ZL8weights_62_load;
input  [15:0] p_ZL8weights_63_load;
input  [15:0] p_ZL6input_7_load;
input  [15:0] p_ZL6input_6_load;
input  [15:0] p_ZL6input_5_load;
input  [15:0] p_ZL6input_4_load;
input  [15:0] p_ZL6input_3_load;
input  [15:0] p_ZL6input_2_load;
input  [15:0] p_ZL6input_1_load;
input  [15:0] p_ZL6input_0_load;
output  [15:0] p_out;
output   p_out_ap_vld;
output  [15:0] trunc_ln717_6_out;
output   trunc_ln717_6_out_ap_vld;
output  [15:0] trunc_ln717_5_out;
output   trunc_ln717_5_out_ap_vld;
output  [15:0] trunc_ln717_4_out;
output   trunc_ln717_4_out_ap_vld;
output  [15:0] trunc_ln717_3_out;
output   trunc_ln717_3_out_ap_vld;
output  [15:0] trunc_ln717_2_out;
output   trunc_ln717_2_out_ap_vld;
output  [15:0] trunc_ln717_1_out;
output   trunc_ln717_1_out_ap_vld;
output  [15:0] trunc_ln1_out;
output   trunc_ln1_out_ap_vld;
output  [2:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[15:0] p_out;
reg p_out_ap_vld;
reg trunc_ln717_6_out_ap_vld;
reg trunc_ln717_5_out_ap_vld;
reg trunc_ln717_4_out_ap_vld;
reg trunc_ln717_3_out_ap_vld;
reg trunc_ln717_2_out_ap_vld;
reg trunc_ln717_1_out_ap_vld;
reg trunc_ln1_out_ap_vld;
reg[2:0] ap_return;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [16:0] zext_ln81_cast_fu_788_p1;
reg   [16:0] zext_ln81_cast_reg_3691;
wire   [0:0] icmp_ln81_fu_805_p2;
reg   [0:0] icmp_ln81_reg_3703;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln81_reg_3703_pp0_iter1_reg;
wire   [0:0] icmp_ln81_1_fu_1040_p2;
reg   [0:0] icmp_ln81_1_reg_3717;
reg   [0:0] icmp_ln81_1_reg_3717_pp0_iter1_reg;
wire   [15:0] tmp_2_1_fu_1050_p66;
reg  signed [15:0] tmp_2_1_reg_3721;
wire   [15:0] tmp_3_1_fu_1120_p66;
reg  signed [15:0] tmp_3_1_reg_3726;
wire   [0:0] icmp_ln81_2_fu_1263_p2;
reg   [0:0] icmp_ln81_2_reg_3731;
reg   [0:0] icmp_ln81_2_reg_3731_pp0_iter1_reg;
wire   [15:0] tmp_2_2_fu_1273_p66;
reg  signed [15:0] tmp_2_2_reg_3735;
wire   [15:0] tmp_3_2_fu_1343_p66;
reg  signed [15:0] tmp_3_2_reg_3740;
wire   [0:0] icmp_ln81_3_fu_1486_p2;
reg   [0:0] icmp_ln81_3_reg_3745;
reg   [0:0] icmp_ln81_3_reg_3745_pp0_iter1_reg;
wire   [15:0] tmp_2_3_fu_1496_p66;
reg  signed [15:0] tmp_2_3_reg_3749;
wire   [15:0] tmp_3_3_fu_1566_p66;
reg  signed [15:0] tmp_3_3_reg_3754;
wire   [0:0] icmp_ln81_4_fu_1709_p2;
reg   [0:0] icmp_ln81_4_reg_3759;
reg   [0:0] icmp_ln81_4_reg_3759_pp0_iter1_reg;
wire   [15:0] tmp_2_4_fu_1719_p66;
reg  signed [15:0] tmp_2_4_reg_3763;
wire   [15:0] tmp_3_4_fu_1789_p66;
reg  signed [15:0] tmp_3_4_reg_3768;
wire   [0:0] icmp_ln81_5_fu_1932_p2;
reg   [0:0] icmp_ln81_5_reg_3773;
reg   [0:0] icmp_ln81_5_reg_3773_pp0_iter1_reg;
wire   [15:0] tmp_2_5_fu_1942_p66;
reg  signed [15:0] tmp_2_5_reg_3777;
wire   [15:0] tmp_3_5_fu_2012_p66;
reg  signed [15:0] tmp_3_5_reg_3782;
wire   [0:0] icmp_ln81_6_fu_2155_p2;
reg   [0:0] icmp_ln81_6_reg_3787;
reg   [0:0] icmp_ln81_6_reg_3787_pp0_iter1_reg;
wire   [15:0] tmp_2_6_fu_2165_p66;
reg  signed [15:0] tmp_2_6_reg_3791;
wire   [15:0] tmp_3_6_fu_2235_p66;
reg  signed [15:0] tmp_3_6_reg_3796;
wire   [0:0] icmp_ln81_7_fu_2378_p2;
reg   [0:0] icmp_ln81_7_reg_3801;
reg   [0:0] icmp_ln81_7_reg_3801_pp0_iter1_reg;
wire   [15:0] tmp_2_7_fu_2388_p66;
reg  signed [15:0] tmp_2_7_reg_3805;
wire   [15:0] tmp_3_7_fu_2458_p66;
reg  signed [15:0] tmp_3_7_reg_3810;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state11_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [15:0] grp_load_fu_784_p1;
reg   [15:0] p_load84_reg_3825;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_state12_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [15:0] trunc_ln1_fu_2622_p4;
reg   [15:0] trunc_ln1_reg_3845;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [15:0] trunc_ln717_1_fu_2645_p4;
reg   [15:0] trunc_ln717_1_reg_3865;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state6_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [15:0] trunc_ln717_2_fu_2668_p4;
reg   [15:0] trunc_ln717_2_reg_3885;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state7_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_11001;
wire   [15:0] trunc_ln717_3_fu_2691_p4;
reg   [15:0] trunc_ln717_3_reg_3905;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state8_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_11001;
wire   [15:0] trunc_ln717_4_fu_2714_p4;
reg   [15:0] trunc_ln717_4_reg_3925;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state9_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_11001;
wire   [15:0] trunc_ln717_5_fu_2737_p4;
reg   [15:0] trunc_ln717_5_reg_3945;
reg    ap_enable_reg_pp0_iter1;
wire   [15:0] trunc_ln717_6_fu_2754_p4;
reg   [15:0] trunc_ln717_6_reg_3955;
wire    ap_block_pp0_stage7_subdone;
reg    ap_predicate_tran11to13_state9;
reg    ap_predicate_tran11to14_state9;
reg    ap_predicate_tran11to15_state9;
reg    ap_predicate_tran11to16_state9;
reg    ap_predicate_tran11to17_state9;
reg    ap_predicate_tran11to18_state9;
reg    ap_predicate_tran11to19_state9;
reg    ap_condition_pp0_flush_enable;
wire    ap_block_pp0_stage1_subdone;
reg   [2:0] ap_phi_mux_UnifiedRetVal_phi_fu_758_p16;
reg   [2:0] UnifiedRetVal_reg_748;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
reg   [15:0] inc3741_i_0_fu_234;
wire   [15:0] add_ln81_fu_2591_p2;
wire    ap_block_pp0_stage0;
reg   [15:0] empty_fu_238;
reg   [15:0] ap_sig_allocacmp_p_load84;
wire    ap_block_pp0_stage2;
wire   [16:0] zext_ln81_1_fu_810_p1;
wire   [16:0] tmp_2_fu_819_p65;
wire  signed [15:0] tmp_2_fu_819_p66;
wire  signed [15:0] tmp_3_fu_893_p66;
wire   [15:0] or_ln81_fu_1030_p2;
wire   [16:0] zext_ln81_2_fu_1036_p1;
wire   [16:0] tmp_2_1_fu_1050_p65;
wire   [15:0] or_ln81_1_fu_1253_p2;
wire   [16:0] zext_ln81_3_fu_1259_p1;
wire   [16:0] tmp_2_2_fu_1273_p65;
wire   [15:0] or_ln81_2_fu_1476_p2;
wire   [16:0] zext_ln81_4_fu_1482_p1;
wire   [16:0] tmp_2_3_fu_1496_p65;
wire   [15:0] or_ln81_3_fu_1699_p2;
wire   [16:0] zext_ln81_5_fu_1705_p1;
wire   [16:0] tmp_2_4_fu_1719_p65;
wire   [15:0] or_ln81_4_fu_1922_p2;
wire   [16:0] zext_ln81_6_fu_1928_p1;
wire   [16:0] tmp_2_5_fu_1942_p65;
wire   [15:0] or_ln81_5_fu_2145_p2;
wire   [16:0] zext_ln81_7_fu_2151_p1;
wire   [16:0] tmp_2_6_fu_2165_p65;
wire   [15:0] or_ln81_6_fu_2368_p2;
wire   [16:0] zext_ln81_8_fu_2374_p1;
wire   [16:0] tmp_2_7_fu_2388_p65;
wire    ap_block_pp0_stage1;
wire  signed [23:0] trunc_ln1_fu_2622_p1;
wire   [23:0] grp_fu_2785_p3;
wire    ap_block_pp0_stage3;
wire  signed [23:0] trunc_ln717_1_fu_2645_p1;
wire   [23:0] grp_fu_2794_p3;
wire    ap_block_pp0_stage4;
wire  signed [23:0] trunc_ln717_2_fu_2668_p1;
wire   [23:0] grp_fu_2803_p3;
wire    ap_block_pp0_stage5;
wire  signed [23:0] trunc_ln717_3_fu_2691_p1;
wire   [23:0] grp_fu_2812_p3;
wire    ap_block_pp0_stage6;
wire  signed [23:0] trunc_ln717_4_fu_2714_p1;
wire   [23:0] grp_fu_2821_p3;
wire    ap_block_pp0_stage7;
wire  signed [23:0] trunc_ln717_5_fu_2737_p1;
wire   [23:0] grp_fu_2830_p3;
wire  signed [23:0] trunc_ln717_6_fu_2754_p1;
wire   [23:0] grp_fu_2839_p3;
wire  signed [23:0] trunc_ln717_7_fu_2771_p1;
wire   [23:0] grp_fu_2848_p3;
wire   [23:0] grp_fu_2785_p2;
wire   [23:0] grp_fu_2794_p2;
wire   [23:0] grp_fu_2803_p2;
wire   [23:0] grp_fu_2812_p2;
wire   [23:0] grp_fu_2821_p2;
wire   [23:0] grp_fu_2830_p2;
wire   [23:0] grp_fu_2839_p2;
wire   [23:0] grp_fu_2848_p2;
reg   [2:0] ap_return_preg;
reg   [16:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_block_pp0_stage0_subdone;
reg   [7:0] ap_exit_tran_regpp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_preg = 3'd0;
end

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U84(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_fu_819_p65),
    .dout(tmp_2_fu_819_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U85(
    .din0(p_ZL6input_0_load),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(inc3741_i_0_fu_234),
    .dout(tmp_3_fu_893_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U86(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_1_fu_1050_p65),
    .dout(tmp_2_1_fu_1050_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U87(
    .din0(16'd0),
    .din1(p_ZL6input_1_load),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_fu_1030_p2),
    .dout(tmp_3_1_fu_1120_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U88(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_2_fu_1273_p65),
    .dout(tmp_2_2_fu_1273_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U89(
    .din0(16'd0),
    .din1(16'd0),
    .din2(p_ZL6input_2_load),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_1_fu_1253_p2),
    .dout(tmp_3_2_fu_1343_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U90(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_3_fu_1496_p65),
    .dout(tmp_2_3_fu_1496_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U91(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(p_ZL6input_3_load),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_2_fu_1476_p2),
    .dout(tmp_3_3_fu_1566_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U92(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_4_fu_1719_p65),
    .dout(tmp_2_4_fu_1719_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U93(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(p_ZL6input_4_load),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_3_fu_1699_p2),
    .dout(tmp_3_4_fu_1789_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U94(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_5_fu_1942_p65),
    .dout(tmp_2_5_fu_1942_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U95(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(p_ZL6input_5_load),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_4_fu_1922_p2),
    .dout(tmp_3_5_fu_2012_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U96(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_6_fu_2165_p65),
    .dout(tmp_2_6_fu_2165_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U97(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(p_ZL6input_6_load),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_5_fu_2145_p2),
    .dout(tmp_3_6_fu_2235_p66)
);

nnlayer_mux_6417_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 17 ),
    .dout_WIDTH( 16 ))
mux_6417_16_1_1_U98(
    .din0(p_ZL8weights_0_load),
    .din1(p_ZL8weights_1_load),
    .din2(p_ZL8weights_2_load),
    .din3(p_ZL8weights_3_load),
    .din4(p_ZL8weights_4_load),
    .din5(p_ZL8weights_5_load),
    .din6(p_ZL8weights_6_load),
    .din7(p_ZL8weights_7_load),
    .din8(p_ZL8weights_8_load),
    .din9(p_ZL8weights_9_load),
    .din10(p_ZL8weights_10_load),
    .din11(p_ZL8weights_11_load),
    .din12(p_ZL8weights_12_load),
    .din13(p_ZL8weights_13_load),
    .din14(p_ZL8weights_14_load),
    .din15(p_ZL8weights_15_load),
    .din16(p_ZL8weights_16_load),
    .din17(p_ZL8weights_17_load),
    .din18(p_ZL8weights_18_load),
    .din19(p_ZL8weights_19_load),
    .din20(p_ZL8weights_20_load),
    .din21(p_ZL8weights_21_load),
    .din22(p_ZL8weights_22_load),
    .din23(p_ZL8weights_23_load),
    .din24(p_ZL8weights_24_load),
    .din25(p_ZL8weights_25_load),
    .din26(p_ZL8weights_26_load),
    .din27(p_ZL8weights_27_load),
    .din28(p_ZL8weights_28_load),
    .din29(p_ZL8weights_29_load),
    .din30(p_ZL8weights_30_load),
    .din31(p_ZL8weights_31_load),
    .din32(p_ZL8weights_32_load),
    .din33(p_ZL8weights_33_load),
    .din34(p_ZL8weights_34_load),
    .din35(p_ZL8weights_35_load),
    .din36(p_ZL8weights_36_load),
    .din37(p_ZL8weights_37_load),
    .din38(p_ZL8weights_38_load),
    .din39(p_ZL8weights_39_load),
    .din40(p_ZL8weights_40_load),
    .din41(p_ZL8weights_41_load),
    .din42(p_ZL8weights_42_load),
    .din43(p_ZL8weights_43_load),
    .din44(p_ZL8weights_44_load),
    .din45(p_ZL8weights_45_load),
    .din46(p_ZL8weights_46_load),
    .din47(p_ZL8weights_47_load),
    .din48(p_ZL8weights_48_load),
    .din49(p_ZL8weights_49_load),
    .din50(p_ZL8weights_50_load),
    .din51(p_ZL8weights_51_load),
    .din52(p_ZL8weights_52_load),
    .din53(p_ZL8weights_53_load),
    .din54(p_ZL8weights_54_load),
    .din55(p_ZL8weights_55_load),
    .din56(p_ZL8weights_56_load),
    .din57(p_ZL8weights_57_load),
    .din58(p_ZL8weights_58_load),
    .din59(p_ZL8weights_59_load),
    .din60(p_ZL8weights_60_load),
    .din61(p_ZL8weights_61_load),
    .din62(p_ZL8weights_62_load),
    .din63(p_ZL8weights_63_load),
    .din64(tmp_2_7_fu_2388_p65),
    .dout(tmp_2_7_fu_2388_p66)
);

nnlayer_mux_6416_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mux_6416_16_1_1_U99(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(p_ZL6input_7_load),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(16'd0),
    .din64(or_ln81_6_fu_2368_p2),
    .dout(tmp_3_7_fu_2458_p66)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U100(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_fu_893_p66),
    .din1(tmp_2_fu_819_p66),
    .din2(grp_fu_2785_p2),
    .ce(1'b1),
    .dout(grp_fu_2785_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U101(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_1_reg_3726),
    .din1(tmp_2_1_reg_3721),
    .din2(grp_fu_2794_p2),
    .ce(1'b1),
    .dout(grp_fu_2794_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U102(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_2_reg_3740),
    .din1(tmp_2_2_reg_3735),
    .din2(grp_fu_2803_p2),
    .ce(1'b1),
    .dout(grp_fu_2803_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U103(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_3_reg_3754),
    .din1(tmp_2_3_reg_3749),
    .din2(grp_fu_2812_p2),
    .ce(1'b1),
    .dout(grp_fu_2812_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U104(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_4_reg_3768),
    .din1(tmp_2_4_reg_3763),
    .din2(grp_fu_2821_p2),
    .ce(1'b1),
    .dout(grp_fu_2821_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U105(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_5_reg_3782),
    .din1(tmp_2_5_reg_3777),
    .din2(grp_fu_2830_p2),
    .ce(1'b1),
    .dout(grp_fu_2830_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U106(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_6_reg_3796),
    .din1(tmp_2_6_reg_3791),
    .din2(grp_fu_2839_p2),
    .ce(1'b1),
    .dout(grp_fu_2839_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U107(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_7_reg_3810),
    .din1(tmp_2_7_reg_3805),
    .din2(grp_fu_2848_p2),
    .ce(1'b1),
    .dout(grp_fu_2848_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_preg <= 3'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            ap_return_preg <= ap_phi_mux_UnifiedRetVal_phi_fu_758_p16;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        UnifiedRetVal_reg_748 <= 3'd7;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        UnifiedRetVal_reg_748 <= 3'd6;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        UnifiedRetVal_reg_748 <= 3'd5;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        UnifiedRetVal_reg_748 <= 3'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        UnifiedRetVal_reg_748 <= 3'd3;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        UnifiedRetVal_reg_748 <= 3'd2;
    end else if (((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        UnifiedRetVal_reg_748 <= 3'd1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        UnifiedRetVal_reg_748 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        if ((icmp_ln81_reg_3703 == 1'd1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
            ap_exit_tran_regpp0[1] <= 1'b1;
            ap_exit_tran_regpp0[2] <= 1'b1;
        end else if ((ap_predicate_tran11to19_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
            ap_exit_tran_regpp0[1] <= 1'b1;
            ap_exit_tran_regpp0[2] <= 1'b1;
        end else if ((ap_predicate_tran11to18_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
            ap_exit_tran_regpp0[1] <= 1'b0;
            ap_exit_tran_regpp0[2] <= 1'b1;
        end else if ((ap_predicate_tran11to17_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
            ap_exit_tran_regpp0[1] <= 1'b0;
            ap_exit_tran_regpp0[2] <= 1'b1;
        end else if ((ap_predicate_tran11to16_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
            ap_exit_tran_regpp0[1] <= 1'b1;
            ap_exit_tran_regpp0[2] <= 1'b0;
        end else if ((ap_predicate_tran11to15_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
            ap_exit_tran_regpp0[1] <= 1'b1;
            ap_exit_tran_regpp0[2] <= 1'b0;
        end else if ((ap_predicate_tran11to14_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b1;
            ap_exit_tran_regpp0[1] <= 1'b0;
            ap_exit_tran_regpp0[2] <= 1'b0;
        end else if ((ap_predicate_tran11to13_state9 == 1'b1)) begin
                        ap_exit_tran_regpp0[0] <= 1'b0;
            ap_exit_tran_regpp0[1] <= 1'b0;
            ap_exit_tran_regpp0[2] <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_fu_238 <= tmp;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln81_7_reg_3801_pp0_iter1_reg == 1'd0) & (icmp_ln81_6_reg_3787_pp0_iter1_reg == 1'd0) & (icmp_ln81_5_reg_3773_pp0_iter1_reg == 1'd0) & (icmp_ln81_4_reg_3759_pp0_iter1_reg == 1'd0) & (icmp_ln81_3_reg_3745_pp0_iter1_reg == 1'd0) & (icmp_ln81_2_reg_3731_pp0_iter1_reg == 1'd0) & (icmp_ln81_1_reg_3717_pp0_iter1_reg == 1'd0) & (icmp_ln81_reg_3703_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        empty_fu_238 <= {{trunc_ln717_7_fu_2771_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        inc3741_i_0_fu_234 <= 16'd0;
    end else if (((icmp_ln81_7_fu_2378_p2 == 1'd0) & (icmp_ln81_6_fu_2155_p2 == 1'd0) & (icmp_ln81_5_fu_1932_p2 == 1'd0) & (icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        inc3741_i_0_fu_234 <= add_ln81_fu_2591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_1_reg_3717 <= icmp_ln81_1_fu_1040_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_1_reg_3717_pp0_iter1_reg <= icmp_ln81_1_reg_3717;
        icmp_ln81_2_reg_3731_pp0_iter1_reg <= icmp_ln81_2_reg_3731;
        icmp_ln81_3_reg_3745_pp0_iter1_reg <= icmp_ln81_3_reg_3745;
        icmp_ln81_4_reg_3759_pp0_iter1_reg <= icmp_ln81_4_reg_3759;
        icmp_ln81_5_reg_3773_pp0_iter1_reg <= icmp_ln81_5_reg_3773;
        icmp_ln81_6_reg_3787_pp0_iter1_reg <= icmp_ln81_6_reg_3787;
        icmp_ln81_7_reg_3801_pp0_iter1_reg <= icmp_ln81_7_reg_3801;
        icmp_ln81_reg_3703_pp0_iter1_reg <= icmp_ln81_reg_3703;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_2_reg_3731 <= icmp_ln81_2_fu_1263_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_3_reg_3745 <= icmp_ln81_3_fu_1486_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_4_reg_3759 <= icmp_ln81_4_fu_1709_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_5_reg_3773 <= icmp_ln81_5_fu_1932_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_5_fu_1932_p2 == 1'd0) & (icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_6_reg_3787 <= icmp_ln81_6_fu_2155_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_6_fu_2155_p2 == 1'd0) & (icmp_ln81_5_fu_1932_p2 == 1'd0) & (icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_7_reg_3801 <= icmp_ln81_7_fu_2378_p2;
        tmp_2_6_reg_3791 <= tmp_2_6_fu_2165_p66;
        tmp_3_6_reg_3796 <= tmp_3_6_fu_2235_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln81_reg_3703 <= icmp_ln81_fu_805_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        p_load84_reg_3825 <= grp_load_fu_784_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_1_reg_3721 <= tmp_2_1_fu_1050_p66;
        tmp_3_1_reg_3726 <= tmp_3_1_fu_1120_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_2_reg_3735 <= tmp_2_2_fu_1273_p66;
        tmp_3_2_reg_3740 <= tmp_3_2_fu_1343_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_3_reg_3749 <= tmp_2_3_fu_1496_p66;
        tmp_3_3_reg_3754 <= tmp_3_3_fu_1566_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_4_reg_3763 <= tmp_2_4_fu_1719_p66;
        tmp_3_4_reg_3768 <= tmp_3_4_fu_1789_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_5_fu_1932_p2 == 1'd0) & (icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_5_reg_3777 <= tmp_2_5_fu_1942_p66;
        tmp_3_5_reg_3782 <= tmp_3_5_fu_2012_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_7_fu_2378_p2 == 1'd0) & (icmp_ln81_6_fu_2155_p2 == 1'd0) & (icmp_ln81_5_fu_1932_p2 == 1'd0) & (icmp_ln81_4_fu_1709_p2 == 1'd0) & (icmp_ln81_3_fu_1486_p2 == 1'd0) & (icmp_ln81_2_fu_1263_p2 == 1'd0) & (icmp_ln81_1_fu_1040_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_fu_805_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_2_7_reg_3805 <= tmp_2_7_fu_2388_p66;
        tmp_3_7_reg_3810 <= tmp_3_7_fu_2458_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        trunc_ln1_reg_3845 <= {{trunc_ln1_fu_2622_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_1_reg_3717 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        trunc_ln717_1_reg_3865 <= {{trunc_ln717_1_fu_2645_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        trunc_ln717_2_reg_3885 <= {{trunc_ln717_2_fu_2668_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        trunc_ln717_3_reg_3905 <= {{trunc_ln717_3_fu_2691_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        trunc_ln717_4_reg_3925 <= {{trunc_ln717_4_fu_2714_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln717_5_reg_3945 <= {{trunc_ln717_5_fu_2737_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln81_6_reg_3787_pp0_iter1_reg == 1'd0) & (icmp_ln81_5_reg_3773_pp0_iter1_reg == 1'd0) & (icmp_ln81_4_reg_3759_pp0_iter1_reg == 1'd0) & (icmp_ln81_3_reg_3745_pp0_iter1_reg == 1'd0) & (icmp_ln81_2_reg_3731_pp0_iter1_reg == 1'd0) & (icmp_ln81_1_reg_3717_pp0_iter1_reg == 1'd0) & (icmp_ln81_reg_3703_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        trunc_ln717_6_reg_3955 <= {{trunc_ln717_6_fu_2754_p1[23:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        zext_ln81_cast_reg_3691[15 : 0] <= zext_ln81_cast_fu_788_p1[15 : 0];
    end
end

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7) & ((ap_predicate_tran11to19_state9 == 1'b1) | (ap_predicate_tran11to18_state9 == 1'b1) | (ap_predicate_tran11to17_state9 == 1'b1) | (ap_predicate_tran11to16_state9 == 1'b1) | (ap_predicate_tran11to15_state9 == 1'b1) | (ap_predicate_tran11to14_state9 == 1'b1) | (ap_predicate_tran11to13_state9 == 1'b1) | (icmp_ln81_reg_3703 == 1'd1)))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        ap_phi_mux_UnifiedRetVal_phi_fu_758_p16 = 3'd1;
    end else begin
        ap_phi_mux_UnifiedRetVal_phi_fu_758_p16 = UnifiedRetVal_reg_748;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_758_p16;
    end else begin
        ap_return = ap_return_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln81_7_reg_3801_pp0_iter1_reg == 1'd0) & (icmp_ln81_6_reg_3787_pp0_iter1_reg == 1'd0) & (icmp_ln81_5_reg_3773_pp0_iter1_reg == 1'd0) & (icmp_ln81_4_reg_3759_pp0_iter1_reg == 1'd0) & (icmp_ln81_3_reg_3745_pp0_iter1_reg == 1'd0) & (icmp_ln81_2_reg_3731_pp0_iter1_reg == 1'd0) & (icmp_ln81_1_reg_3717_pp0_iter1_reg == 1'd0) & (icmp_ln81_reg_3703_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_sig_allocacmp_p_load84 = {{trunc_ln717_7_fu_2771_p1[23:8]}};
    end else begin
        ap_sig_allocacmp_p_load84 = empty_fu_238;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        grp_load_fu_784_p1 = empty_fu_238;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_load_fu_784_p1 = ap_sig_allocacmp_p_load84;
    end else begin
        grp_load_fu_784_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        p_out = p_load84_reg_3825;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        p_out = grp_load_fu_784_p1;
    end else begin
        p_out = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state20) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        p_out_ap_vld = 1'b1;
    end else begin
        p_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln1_out_ap_vld = 1'b1;
    end else begin
        trunc_ln1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln717_1_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln717_2_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln717_3_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_3_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln717_4_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_4_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13)))) begin
        trunc_ln717_5_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_5_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        trunc_ln717_6_out_ap_vld = 1'b1;
    end else begin
        trunc_ln717_6_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd7) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd6) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd5) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd4) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd3) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd2) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_exit_tran_regpp0 == 8'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln81_fu_2591_p2 = (inc3741_i_0_fu_234 + 16'd8);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_predicate_tran11to13_state9 = ((icmp_ln81_7_reg_3801 == 1'd1) & (icmp_ln81_6_reg_3787 == 1'd0) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to14_state9 = ((icmp_ln81_6_reg_3787 == 1'd1) & (icmp_ln81_5_reg_3773 == 1'd0) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to15_state9 = ((icmp_ln81_5_reg_3773 == 1'd1) & (icmp_ln81_4_reg_3759 == 1'd0) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to16_state9 = ((icmp_ln81_4_reg_3759 == 1'd1) & (icmp_ln81_3_reg_3745 == 1'd0) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to17_state9 = ((icmp_ln81_3_reg_3745 == 1'd1) & (icmp_ln81_2_reg_3731 == 1'd0) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to18_state9 = ((icmp_ln81_2_reg_3731 == 1'd1) & (icmp_ln81_1_reg_3717 == 1'd0) & (icmp_ln81_reg_3703 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran11to19_state9 = ((icmp_ln81_1_reg_3717 == 1'd1) & (icmp_ln81_reg_3703 == 1'd0));
end

assign grp_fu_2785_p2 = {{grp_load_fu_784_p1}, {8'd0}};

assign grp_fu_2794_p2 = {{trunc_ln1_fu_2622_p4}, {8'd0}};

assign grp_fu_2803_p2 = {{trunc_ln717_1_fu_2645_p4}, {8'd0}};

assign grp_fu_2812_p2 = {{trunc_ln717_2_fu_2668_p4}, {8'd0}};

assign grp_fu_2821_p2 = {{trunc_ln717_3_fu_2691_p4}, {8'd0}};

assign grp_fu_2830_p2 = {{trunc_ln717_4_fu_2714_p4}, {8'd0}};

assign grp_fu_2839_p2 = {{trunc_ln717_5_fu_2737_p4}, {8'd0}};

assign grp_fu_2848_p2 = {{trunc_ln717_6_fu_2754_p4}, {8'd0}};

assign icmp_ln81_1_fu_1040_p2 = ((or_ln81_fu_1030_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_2_fu_1263_p2 = ((or_ln81_1_fu_1253_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_3_fu_1486_p2 = ((or_ln81_2_fu_1476_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_4_fu_1709_p2 = ((or_ln81_3_fu_1699_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_5_fu_1932_p2 = ((or_ln81_4_fu_1922_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_6_fu_2155_p2 = ((or_ln81_5_fu_2145_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_7_fu_2378_p2 = ((or_ln81_6_fu_2368_p2 == numOfInNeurons) ? 1'b1 : 1'b0);

assign icmp_ln81_fu_805_p2 = ((inc3741_i_0_fu_234 == numOfInNeurons) ? 1'b1 : 1'b0);

assign or_ln81_1_fu_1253_p2 = (inc3741_i_0_fu_234 | 16'd2);

assign or_ln81_2_fu_1476_p2 = (inc3741_i_0_fu_234 | 16'd3);

assign or_ln81_3_fu_1699_p2 = (inc3741_i_0_fu_234 | 16'd4);

assign or_ln81_4_fu_1922_p2 = (inc3741_i_0_fu_234 | 16'd5);

assign or_ln81_5_fu_2145_p2 = (inc3741_i_0_fu_234 | 16'd6);

assign or_ln81_6_fu_2368_p2 = (inc3741_i_0_fu_234 | 16'd7);

assign or_ln81_fu_1030_p2 = (inc3741_i_0_fu_234 | 16'd1);

assign tmp_2_1_fu_1050_p65 = (zext_ln81_2_fu_1036_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_2_fu_1273_p65 = (zext_ln81_3_fu_1259_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_3_fu_1496_p65 = (zext_ln81_4_fu_1482_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_4_fu_1719_p65 = (zext_ln81_5_fu_1705_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_5_fu_1942_p65 = (zext_ln81_6_fu_1928_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_6_fu_2165_p65 = (zext_ln81_7_fu_2151_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_7_fu_2388_p65 = (zext_ln81_8_fu_2374_p1 + zext_ln81_cast_reg_3691);

assign tmp_2_fu_819_p65 = (zext_ln81_1_fu_810_p1 + zext_ln81_cast_reg_3691);

assign trunc_ln1_fu_2622_p1 = grp_fu_2785_p3;

assign trunc_ln1_fu_2622_p4 = {{trunc_ln1_fu_2622_p1[23:8]}};

assign trunc_ln1_out = trunc_ln1_reg_3845;

assign trunc_ln717_1_fu_2645_p1 = grp_fu_2794_p3;

assign trunc_ln717_1_fu_2645_p4 = {{trunc_ln717_1_fu_2645_p1[23:8]}};

assign trunc_ln717_1_out = trunc_ln717_1_reg_3865;

assign trunc_ln717_2_fu_2668_p1 = grp_fu_2803_p3;

assign trunc_ln717_2_fu_2668_p4 = {{trunc_ln717_2_fu_2668_p1[23:8]}};

assign trunc_ln717_2_out = trunc_ln717_2_reg_3885;

assign trunc_ln717_3_fu_2691_p1 = grp_fu_2812_p3;

assign trunc_ln717_3_fu_2691_p4 = {{trunc_ln717_3_fu_2691_p1[23:8]}};

assign trunc_ln717_3_out = trunc_ln717_3_reg_3905;

assign trunc_ln717_4_fu_2714_p1 = grp_fu_2821_p3;

assign trunc_ln717_4_fu_2714_p4 = {{trunc_ln717_4_fu_2714_p1[23:8]}};

assign trunc_ln717_4_out = trunc_ln717_4_reg_3925;

assign trunc_ln717_5_fu_2737_p1 = grp_fu_2830_p3;

assign trunc_ln717_5_fu_2737_p4 = {{trunc_ln717_5_fu_2737_p1[23:8]}};

assign trunc_ln717_5_out = trunc_ln717_5_reg_3945;

assign trunc_ln717_6_fu_2754_p1 = grp_fu_2839_p3;

assign trunc_ln717_6_fu_2754_p4 = {{trunc_ln717_6_fu_2754_p1[23:8]}};

assign trunc_ln717_6_out = trunc_ln717_6_reg_3955;

assign trunc_ln717_7_fu_2771_p1 = grp_fu_2848_p3;

assign zext_ln81_1_fu_810_p1 = inc3741_i_0_fu_234;

assign zext_ln81_2_fu_1036_p1 = or_ln81_fu_1030_p2;

assign zext_ln81_3_fu_1259_p1 = or_ln81_1_fu_1253_p2;

assign zext_ln81_4_fu_1482_p1 = or_ln81_2_fu_1476_p2;

assign zext_ln81_5_fu_1705_p1 = or_ln81_3_fu_1699_p2;

assign zext_ln81_6_fu_1928_p1 = or_ln81_4_fu_1922_p2;

assign zext_ln81_7_fu_2151_p1 = or_ln81_5_fu_2145_p2;

assign zext_ln81_8_fu_2374_p1 = or_ln81_6_fu_2368_p2;

assign zext_ln81_cast_fu_788_p1 = zext_ln81;

always @ (posedge ap_clk) begin
    zext_ln81_cast_reg_3691[16] <= 1'b0;
    ap_exit_tran_regpp0[7:3] <= 5'b00000;
end

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_81_2
