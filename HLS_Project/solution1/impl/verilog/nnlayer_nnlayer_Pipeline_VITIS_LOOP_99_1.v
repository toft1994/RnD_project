// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
// Version: 2021.2
// Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module nnlayer_nnlayer_Pipeline_VITIS_LOOP_99_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        weights_0_load,
        weights_8_load,
        weights_16_load,
        weights_24_load,
        weights_32_load,
        weights_40_load,
        weights_48_load,
        weights_56_load,
        sext_ln1245,
        weights_1_load,
        weights_9_load,
        weights_17_load,
        weights_25_load,
        weights_33_load,
        weights_41_load,
        weights_49_load,
        weights_57_load,
        sext_ln1245_1,
        weights_2_load,
        weights_10_load,
        weights_18_load,
        weights_26_load,
        weights_34_load,
        weights_42_load,
        weights_50_load,
        weights_58_load,
        sext_ln1245_2,
        weights_3_load,
        weights_11_load,
        weights_19_load,
        weights_27_load,
        weights_35_load,
        weights_43_load,
        weights_51_load,
        weights_59_load,
        sext_ln1245_3,
        weights_4_load,
        weights_12_load,
        weights_20_load,
        weights_28_load,
        weights_36_load,
        weights_44_load,
        weights_52_load,
        weights_60_load,
        sext_ln1245_4,
        weights_5_load,
        weights_13_load,
        weights_21_load,
        weights_29_load,
        weights_37_load,
        weights_45_load,
        weights_53_load,
        weights_61_load,
        sext_ln1245_5,
        weights_6_load,
        weights_14_load,
        weights_22_load,
        weights_30_load,
        weights_38_load,
        weights_46_load,
        weights_54_load,
        weights_62_load,
        sext_ln1245_6,
        weights_7_load,
        weights_15_load,
        weights_23_load,
        weights_31_load,
        weights_39_load,
        weights_47_load,
        weights_55_load,
        weights_63_load,
        sext_ln1245_7,
        output_V_address0,
        output_V_ce0,
        output_V_we0,
        output_V_d0,
        output_V_address1,
        output_V_ce1,
        output_V_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] weights_0_load;
input  [15:0] weights_8_load;
input  [15:0] weights_16_load;
input  [15:0] weights_24_load;
input  [15:0] weights_32_load;
input  [15:0] weights_40_load;
input  [15:0] weights_48_load;
input  [15:0] weights_56_load;
input  [15:0] sext_ln1245;
input  [15:0] weights_1_load;
input  [15:0] weights_9_load;
input  [15:0] weights_17_load;
input  [15:0] weights_25_load;
input  [15:0] weights_33_load;
input  [15:0] weights_41_load;
input  [15:0] weights_49_load;
input  [15:0] weights_57_load;
input  [15:0] sext_ln1245_1;
input  [15:0] weights_2_load;
input  [15:0] weights_10_load;
input  [15:0] weights_18_load;
input  [15:0] weights_26_load;
input  [15:0] weights_34_load;
input  [15:0] weights_42_load;
input  [15:0] weights_50_load;
input  [15:0] weights_58_load;
input  [15:0] sext_ln1245_2;
input  [15:0] weights_3_load;
input  [15:0] weights_11_load;
input  [15:0] weights_19_load;
input  [15:0] weights_27_load;
input  [15:0] weights_35_load;
input  [15:0] weights_43_load;
input  [15:0] weights_51_load;
input  [15:0] weights_59_load;
input  [15:0] sext_ln1245_3;
input  [15:0] weights_4_load;
input  [15:0] weights_12_load;
input  [15:0] weights_20_load;
input  [15:0] weights_28_load;
input  [15:0] weights_36_load;
input  [15:0] weights_44_load;
input  [15:0] weights_52_load;
input  [15:0] weights_60_load;
input  [15:0] sext_ln1245_4;
input  [15:0] weights_5_load;
input  [15:0] weights_13_load;
input  [15:0] weights_21_load;
input  [15:0] weights_29_load;
input  [15:0] weights_37_load;
input  [15:0] weights_45_load;
input  [15:0] weights_53_load;
input  [15:0] weights_61_load;
input  [15:0] sext_ln1245_5;
input  [15:0] weights_6_load;
input  [15:0] weights_14_load;
input  [15:0] weights_22_load;
input  [15:0] weights_30_load;
input  [15:0] weights_38_load;
input  [15:0] weights_46_load;
input  [15:0] weights_54_load;
input  [15:0] weights_62_load;
input  [15:0] sext_ln1245_6;
input  [15:0] weights_7_load;
input  [15:0] weights_15_load;
input  [15:0] weights_23_load;
input  [15:0] weights_31_load;
input  [15:0] weights_39_load;
input  [15:0] weights_47_load;
input  [15:0] weights_55_load;
input  [15:0] weights_63_load;
input  [15:0] sext_ln1245_7;
output  [2:0] output_V_address0;
output   output_V_ce0;
output   output_V_we0;
output  [15:0] output_V_d0;
output  [2:0] output_V_address1;
output   output_V_ce1;
input  [15:0] output_V_q1;

reg ap_idle;
reg output_V_ce0;
reg output_V_we0;
reg output_V_ce1;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_state4_pp0_stage0_iter3;
wire    ap_block_state5_pp0_stage0_iter4;
wire    ap_block_state6_pp0_stage0_iter5;
wire    ap_block_state7_pp0_stage0_iter6;
wire    ap_block_state8_pp0_stage0_iter7;
wire    ap_block_state9_pp0_stage0_iter8;
wire    ap_block_state10_pp0_stage0_iter9;
wire    ap_block_state11_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln99_fu_712_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
wire  signed [23:0] sext_ln1245_7_cast_fu_672_p1;
reg  signed [23:0] sext_ln1245_7_cast_reg_2261;
wire  signed [23:0] sext_ln1245_6_cast_fu_676_p1;
reg  signed [23:0] sext_ln1245_6_cast_reg_2266;
wire  signed [23:0] sext_ln1245_5_cast_fu_680_p1;
reg  signed [23:0] sext_ln1245_5_cast_reg_2271;
wire  signed [23:0] sext_ln1245_4_cast_fu_684_p1;
reg  signed [23:0] sext_ln1245_4_cast_reg_2276;
wire  signed [23:0] sext_ln1245_3_cast_fu_688_p1;
reg  signed [23:0] sext_ln1245_3_cast_reg_2281;
wire  signed [23:0] sext_ln1245_2_cast_fu_692_p1;
reg  signed [23:0] sext_ln1245_2_cast_reg_2286;
wire  signed [23:0] sext_ln1245_1_cast_fu_696_p1;
reg  signed [23:0] sext_ln1245_1_cast_reg_2291;
wire   [5:0] mul_i_fu_733_p3;
reg   [5:0] mul_i_reg_2305;
reg   [5:0] mul_i_reg_2305_pp0_iter1_reg;
reg   [5:0] mul_i_reg_2305_pp0_iter2_reg;
reg   [5:0] mul_i_reg_2305_pp0_iter3_reg;
reg   [5:0] mul_i_reg_2305_pp0_iter4_reg;
reg   [5:0] mul_i_reg_2305_pp0_iter5_reg;
reg   [2:0] output_V_addr_reg_2316;
reg   [2:0] output_V_addr_reg_2316_pp0_iter1_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter2_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter3_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter4_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter5_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter6_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter7_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter8_reg;
reg   [2:0] output_V_addr_reg_2316_pp0_iter9_reg;
wire   [15:0] tmp_7_fu_1719_p66;
reg  signed [15:0] tmp_7_reg_2382;
wire   [63:0] outNeurons_cast2_fu_724_p1;
wire    ap_block_pp0_stage0;
reg   [3:0] outNeurons_fu_220;
wire   [3:0] add_ln99_fu_718_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_outNeurons_1;
wire   [2:0] empty_294_fu_729_p1;
wire   [5:0] tmp_fu_741_p58;
wire  signed [15:0] tmp_fu_741_p59;
wire   [5:0] tmp_s_fu_875_p59;
wire  signed [15:0] tmp_s_fu_875_p60;
wire   [5:0] tmp_2_fu_1006_p60;
wire  signed [15:0] tmp_2_fu_1006_p61;
wire  signed [23:0] tmp_8_fu_1126_p1;
wire   [23:0] grp_fu_1909_p3;
wire   [15:0] tmp_8_fu_1126_p4;
wire   [5:0] tmp_3_fu_1148_p61;
wire  signed [15:0] tmp_3_fu_1148_p62;
wire  signed [23:0] tmp_9_fu_1270_p1;
wire   [23:0] grp_fu_1918_p3;
wire   [15:0] tmp_9_fu_1270_p4;
wire   [5:0] tmp_4_fu_1292_p62;
wire  signed [15:0] tmp_4_fu_1292_p63;
wire  signed [23:0] tmp_1_fu_1416_p1;
wire   [23:0] grp_fu_1926_p3;
wire   [15:0] tmp_1_fu_1416_p4;
wire   [5:0] tmp_5_fu_1438_p63;
wire  signed [15:0] tmp_5_fu_1438_p64;
wire  signed [23:0] tmp_10_fu_1564_p1;
wire   [23:0] grp_fu_1934_p3;
wire   [15:0] tmp_10_fu_1564_p4;
wire   [5:0] tmp_6_fu_1586_p64;
wire  signed [15:0] tmp_6_fu_1586_p65;
wire   [5:0] tmp_7_fu_1719_p65;
wire  signed [23:0] tmp_11_fu_1845_p1;
wire   [23:0] grp_fu_1942_p3;
wire   [15:0] tmp_11_fu_1845_p4;
wire  signed [23:0] tmp_12_fu_1865_p1;
wire   [23:0] grp_fu_1950_p3;
wire   [15:0] tmp_12_fu_1865_p4;
wire  signed [23:0] tmp_13_fu_1882_p1;
wire   [23:0] grp_fu_1958_p3;
wire   [15:0] tmp_13_fu_1882_p4;
wire  signed [23:0] trunc_ln717_7_fu_1899_p1;
wire   [23:0] grp_fu_1966_p3;
wire   [23:0] grp_fu_1909_p2;
wire  signed [15:0] grp_fu_1918_p0;
wire   [23:0] grp_fu_1918_p2;
wire  signed [15:0] grp_fu_1926_p0;
wire   [23:0] grp_fu_1926_p2;
wire  signed [15:0] grp_fu_1934_p0;
wire   [23:0] grp_fu_1934_p2;
wire  signed [15:0] grp_fu_1942_p0;
wire   [23:0] grp_fu_1942_p2;
wire  signed [15:0] grp_fu_1950_p0;
wire   [23:0] grp_fu_1950_p2;
wire  signed [15:0] grp_fu_1958_p0;
wire   [23:0] grp_fu_1958_p2;
wire  signed [15:0] grp_fu_1966_p0;
wire   [23:0] grp_fu_1966_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_done_reg = 1'b0;
end

nnlayer_mux_576_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_576_16_1_1_U4(
    .din0(weights_0_load),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(weights_8_load),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(weights_16_load),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(weights_24_load),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(weights_32_load),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(weights_40_load),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(weights_48_load),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(weights_56_load),
    .din57(tmp_fu_741_p58),
    .dout(tmp_fu_741_p59)
);

nnlayer_mux_586_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_586_16_1_1_U5(
    .din0(16'd0),
    .din1(weights_1_load),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(weights_9_load),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(weights_17_load),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(weights_25_load),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(weights_33_load),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(weights_41_load),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(weights_49_load),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(weights_57_load),
    .din58(tmp_s_fu_875_p59),
    .dout(tmp_s_fu_875_p60)
);

nnlayer_mux_596_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_596_16_1_1_U6(
    .din0(16'd0),
    .din1(16'd0),
    .din2(weights_2_load),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(weights_10_load),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(weights_18_load),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(weights_26_load),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(weights_34_load),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(weights_42_load),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(weights_50_load),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(weights_58_load),
    .din59(tmp_2_fu_1006_p60),
    .dout(tmp_2_fu_1006_p61)
);

nnlayer_mux_606_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_606_16_1_1_U7(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(weights_3_load),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(weights_11_load),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(weights_19_load),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(weights_27_load),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(weights_35_load),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(weights_43_load),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(weights_51_load),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(weights_59_load),
    .din60(tmp_3_fu_1148_p61),
    .dout(tmp_3_fu_1148_p62)
);

nnlayer_mux_616_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_616_16_1_1_U8(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(weights_4_load),
    .din5(16'd0),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(weights_12_load),
    .din13(16'd0),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(weights_20_load),
    .din21(16'd0),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(weights_28_load),
    .din29(16'd0),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(weights_36_load),
    .din37(16'd0),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(weights_44_load),
    .din45(16'd0),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(weights_52_load),
    .din53(16'd0),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(weights_60_load),
    .din61(tmp_4_fu_1292_p62),
    .dout(tmp_4_fu_1292_p63)
);

nnlayer_mux_626_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_626_16_1_1_U9(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(weights_5_load),
    .din6(16'd0),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(weights_13_load),
    .din14(16'd0),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(weights_21_load),
    .din22(16'd0),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(weights_29_load),
    .din30(16'd0),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(weights_37_load),
    .din38(16'd0),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(weights_45_load),
    .din46(16'd0),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(weights_53_load),
    .din54(16'd0),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(weights_61_load),
    .din62(tmp_5_fu_1438_p63),
    .dout(tmp_5_fu_1438_p64)
);

nnlayer_mux_636_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_636_16_1_1_U10(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(weights_6_load),
    .din7(16'd0),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(weights_14_load),
    .din15(16'd0),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(weights_22_load),
    .din23(16'd0),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(weights_30_load),
    .din31(16'd0),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(weights_38_load),
    .din39(16'd0),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(weights_46_load),
    .din47(16'd0),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(weights_54_load),
    .din55(16'd0),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(weights_62_load),
    .din63(tmp_6_fu_1586_p64),
    .dout(tmp_6_fu_1586_p65)
);

nnlayer_mux_646_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 16 ),
    .din26_WIDTH( 16 ),
    .din27_WIDTH( 16 ),
    .din28_WIDTH( 16 ),
    .din29_WIDTH( 16 ),
    .din30_WIDTH( 16 ),
    .din31_WIDTH( 16 ),
    .din32_WIDTH( 16 ),
    .din33_WIDTH( 16 ),
    .din34_WIDTH( 16 ),
    .din35_WIDTH( 16 ),
    .din36_WIDTH( 16 ),
    .din37_WIDTH( 16 ),
    .din38_WIDTH( 16 ),
    .din39_WIDTH( 16 ),
    .din40_WIDTH( 16 ),
    .din41_WIDTH( 16 ),
    .din42_WIDTH( 16 ),
    .din43_WIDTH( 16 ),
    .din44_WIDTH( 16 ),
    .din45_WIDTH( 16 ),
    .din46_WIDTH( 16 ),
    .din47_WIDTH( 16 ),
    .din48_WIDTH( 16 ),
    .din49_WIDTH( 16 ),
    .din50_WIDTH( 16 ),
    .din51_WIDTH( 16 ),
    .din52_WIDTH( 16 ),
    .din53_WIDTH( 16 ),
    .din54_WIDTH( 16 ),
    .din55_WIDTH( 16 ),
    .din56_WIDTH( 16 ),
    .din57_WIDTH( 16 ),
    .din58_WIDTH( 16 ),
    .din59_WIDTH( 16 ),
    .din60_WIDTH( 16 ),
    .din61_WIDTH( 16 ),
    .din62_WIDTH( 16 ),
    .din63_WIDTH( 16 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 16 ))
mux_646_16_1_1_U11(
    .din0(16'd0),
    .din1(16'd0),
    .din2(16'd0),
    .din3(16'd0),
    .din4(16'd0),
    .din5(16'd0),
    .din6(16'd0),
    .din7(weights_7_load),
    .din8(16'd0),
    .din9(16'd0),
    .din10(16'd0),
    .din11(16'd0),
    .din12(16'd0),
    .din13(16'd0),
    .din14(16'd0),
    .din15(weights_15_load),
    .din16(16'd0),
    .din17(16'd0),
    .din18(16'd0),
    .din19(16'd0),
    .din20(16'd0),
    .din21(16'd0),
    .din22(16'd0),
    .din23(weights_23_load),
    .din24(16'd0),
    .din25(16'd0),
    .din26(16'd0),
    .din27(16'd0),
    .din28(16'd0),
    .din29(16'd0),
    .din30(16'd0),
    .din31(weights_31_load),
    .din32(16'd0),
    .din33(16'd0),
    .din34(16'd0),
    .din35(16'd0),
    .din36(16'd0),
    .din37(16'd0),
    .din38(16'd0),
    .din39(weights_39_load),
    .din40(16'd0),
    .din41(16'd0),
    .din42(16'd0),
    .din43(16'd0),
    .din44(16'd0),
    .din45(16'd0),
    .din46(16'd0),
    .din47(weights_47_load),
    .din48(16'd0),
    .din49(16'd0),
    .din50(16'd0),
    .din51(16'd0),
    .din52(16'd0),
    .din53(16'd0),
    .din54(16'd0),
    .din55(weights_55_load),
    .din56(16'd0),
    .din57(16'd0),
    .din58(16'd0),
    .din59(16'd0),
    .din60(16'd0),
    .din61(16'd0),
    .din62(16'd0),
    .din63(weights_63_load),
    .din64(tmp_7_fu_1719_p65),
    .dout(tmp_7_fu_1719_p66)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln1245),
    .din1(tmp_fu_741_p59),
    .din2(grp_fu_1909_p2),
    .ce(1'b1),
    .dout(grp_fu_1909_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1918_p0),
    .din1(tmp_s_fu_875_p60),
    .din2(grp_fu_1918_p2),
    .ce(1'b1),
    .dout(grp_fu_1918_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1926_p0),
    .din1(tmp_2_fu_1006_p61),
    .din2(grp_fu_1926_p2),
    .ce(1'b1),
    .dout(grp_fu_1926_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1934_p0),
    .din1(tmp_3_fu_1148_p62),
    .din2(grp_fu_1934_p2),
    .ce(1'b1),
    .dout(grp_fu_1934_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1942_p0),
    .din1(tmp_4_fu_1292_p63),
    .din2(grp_fu_1942_p2),
    .ce(1'b1),
    .dout(grp_fu_1942_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1950_p0),
    .din1(tmp_5_fu_1438_p64),
    .din2(grp_fu_1950_p2),
    .ce(1'b1),
    .dout(grp_fu_1950_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1958_p0),
    .din1(tmp_6_fu_1586_p65),
    .din2(grp_fu_1958_p2),
    .ce(1'b1),
    .dout(grp_fu_1958_p3)
);

nnlayer_mac_muladd_16s_16s_24ns_24_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 24 ),
    .dout_WIDTH( 24 ))
mac_muladd_16s_16s_24ns_24_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1966_p0),
    .din1(tmp_7_reg_2382),
    .din2(grp_fu_1966_p2),
    .ce(1'b1),
    .dout(grp_fu_1966_p3)
);

nnlayer_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln99_fu_712_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            outNeurons_fu_220 <= add_ln99_fu_718_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            outNeurons_fu_220 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        mul_i_reg_2305_pp0_iter1_reg[5 : 3] <= mul_i_reg_2305[5 : 3];
        output_V_addr_reg_2316_pp0_iter1_reg <= output_V_addr_reg_2316;
        sext_ln1245_1_cast_reg_2291 <= sext_ln1245_1_cast_fu_696_p1;
        sext_ln1245_2_cast_reg_2286 <= sext_ln1245_2_cast_fu_692_p1;
        sext_ln1245_3_cast_reg_2281 <= sext_ln1245_3_cast_fu_688_p1;
        sext_ln1245_4_cast_reg_2276 <= sext_ln1245_4_cast_fu_684_p1;
        sext_ln1245_5_cast_reg_2271 <= sext_ln1245_5_cast_fu_680_p1;
        sext_ln1245_6_cast_reg_2266 <= sext_ln1245_6_cast_fu_676_p1;
        sext_ln1245_7_cast_reg_2261 <= sext_ln1245_7_cast_fu_672_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        mul_i_reg_2305_pp0_iter2_reg[5 : 3] <= mul_i_reg_2305_pp0_iter1_reg[5 : 3];
        mul_i_reg_2305_pp0_iter3_reg[5 : 3] <= mul_i_reg_2305_pp0_iter2_reg[5 : 3];
        mul_i_reg_2305_pp0_iter4_reg[5 : 3] <= mul_i_reg_2305_pp0_iter3_reg[5 : 3];
        mul_i_reg_2305_pp0_iter5_reg[5 : 3] <= mul_i_reg_2305_pp0_iter4_reg[5 : 3];
        output_V_addr_reg_2316_pp0_iter2_reg <= output_V_addr_reg_2316_pp0_iter1_reg;
        output_V_addr_reg_2316_pp0_iter3_reg <= output_V_addr_reg_2316_pp0_iter2_reg;
        output_V_addr_reg_2316_pp0_iter4_reg <= output_V_addr_reg_2316_pp0_iter3_reg;
        output_V_addr_reg_2316_pp0_iter5_reg <= output_V_addr_reg_2316_pp0_iter4_reg;
        output_V_addr_reg_2316_pp0_iter6_reg <= output_V_addr_reg_2316_pp0_iter5_reg;
        output_V_addr_reg_2316_pp0_iter7_reg <= output_V_addr_reg_2316_pp0_iter6_reg;
        output_V_addr_reg_2316_pp0_iter8_reg <= output_V_addr_reg_2316_pp0_iter7_reg;
        output_V_addr_reg_2316_pp0_iter9_reg <= output_V_addr_reg_2316_pp0_iter8_reg;
        tmp_7_reg_2382 <= tmp_7_fu_1719_p66;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln99_fu_712_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_i_reg_2305[5 : 3] <= mul_i_fu_733_p3[5 : 3];
        output_V_addr_reg_2316 <= outNeurons_cast2_fu_724_p1;
    end
end

always @ (*) begin
    if (((icmp_ln99_fu_712_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_outNeurons_1 = 4'd0;
    end else begin
        ap_sig_allocacmp_outNeurons_1 = outNeurons_fu_220;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_V_ce0 = 1'b1;
    end else begin
        output_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        output_V_ce1 = 1'b1;
    end else begin
        output_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1))) begin
        output_V_we0 = 1'b1;
    end else begin
        output_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln99_fu_718_p2 = (ap_sig_allocacmp_outNeurons_1 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign empty_294_fu_729_p1 = ap_sig_allocacmp_outNeurons_1[2:0];

assign grp_fu_1909_p2 = {{output_V_q1}, {8'd0}};

assign grp_fu_1918_p0 = sext_ln1245_1_cast_reg_2291;

assign grp_fu_1918_p2 = {{tmp_8_fu_1126_p4}, {8'd0}};

assign grp_fu_1926_p0 = sext_ln1245_2_cast_reg_2286;

assign grp_fu_1926_p2 = {{tmp_9_fu_1270_p4}, {8'd0}};

assign grp_fu_1934_p0 = sext_ln1245_3_cast_reg_2281;

assign grp_fu_1934_p2 = {{tmp_1_fu_1416_p4}, {8'd0}};

assign grp_fu_1942_p0 = sext_ln1245_4_cast_reg_2276;

assign grp_fu_1942_p2 = {{tmp_10_fu_1564_p4}, {8'd0}};

assign grp_fu_1950_p0 = sext_ln1245_5_cast_reg_2271;

assign grp_fu_1950_p2 = {{tmp_11_fu_1845_p4}, {8'd0}};

assign grp_fu_1958_p0 = sext_ln1245_6_cast_reg_2266;

assign grp_fu_1958_p2 = {{tmp_12_fu_1865_p4}, {8'd0}};

assign grp_fu_1966_p0 = sext_ln1245_7_cast_reg_2261;

assign grp_fu_1966_p2 = {{tmp_13_fu_1882_p4}, {8'd0}};

assign icmp_ln99_fu_712_p2 = ((ap_sig_allocacmp_outNeurons_1 == 4'd8) ? 1'b1 : 1'b0);

assign mul_i_fu_733_p3 = {{empty_294_fu_729_p1}, {3'd0}};

assign outNeurons_cast2_fu_724_p1 = ap_sig_allocacmp_outNeurons_1;

assign output_V_address0 = output_V_addr_reg_2316_pp0_iter9_reg;

assign output_V_address1 = output_V_addr_reg_2316;

assign output_V_d0 = {{trunc_ln717_7_fu_1899_p1[23:8]}};

assign sext_ln1245_1_cast_fu_696_p1 = $signed(sext_ln1245_1);

assign sext_ln1245_2_cast_fu_692_p1 = $signed(sext_ln1245_2);

assign sext_ln1245_3_cast_fu_688_p1 = $signed(sext_ln1245_3);

assign sext_ln1245_4_cast_fu_684_p1 = $signed(sext_ln1245_4);

assign sext_ln1245_5_cast_fu_680_p1 = $signed(sext_ln1245_5);

assign sext_ln1245_6_cast_fu_676_p1 = $signed(sext_ln1245_6);

assign sext_ln1245_7_cast_fu_672_p1 = $signed(sext_ln1245_7);

assign tmp_10_fu_1564_p1 = grp_fu_1934_p3;

assign tmp_10_fu_1564_p4 = {{tmp_10_fu_1564_p1[23:8]}};

assign tmp_11_fu_1845_p1 = grp_fu_1942_p3;

assign tmp_11_fu_1845_p4 = {{tmp_11_fu_1845_p1[23:8]}};

assign tmp_12_fu_1865_p1 = grp_fu_1950_p3;

assign tmp_12_fu_1865_p4 = {{tmp_12_fu_1865_p1[23:8]}};

assign tmp_13_fu_1882_p1 = grp_fu_1958_p3;

assign tmp_13_fu_1882_p4 = {{tmp_13_fu_1882_p1[23:8]}};

assign tmp_1_fu_1416_p1 = grp_fu_1926_p3;

assign tmp_1_fu_1416_p4 = {{tmp_1_fu_1416_p1[23:8]}};

assign tmp_2_fu_1006_p60 = (mul_i_reg_2305_pp0_iter1_reg | 6'd2);

assign tmp_3_fu_1148_p61 = (mul_i_reg_2305_pp0_iter2_reg | 6'd3);

assign tmp_4_fu_1292_p62 = (mul_i_reg_2305_pp0_iter3_reg | 6'd4);

assign tmp_5_fu_1438_p63 = (mul_i_reg_2305_pp0_iter4_reg | 6'd5);

assign tmp_6_fu_1586_p64 = (mul_i_reg_2305_pp0_iter5_reg | 6'd6);

assign tmp_7_fu_1719_p65 = (mul_i_reg_2305_pp0_iter5_reg | 6'd7);

assign tmp_8_fu_1126_p1 = grp_fu_1909_p3;

assign tmp_8_fu_1126_p4 = {{tmp_8_fu_1126_p1[23:8]}};

assign tmp_9_fu_1270_p1 = grp_fu_1918_p3;

assign tmp_9_fu_1270_p4 = {{tmp_9_fu_1270_p1[23:8]}};

assign tmp_fu_741_p58 = {{empty_294_fu_729_p1}, {3'd0}};

assign tmp_s_fu_875_p59 = (mul_i_reg_2305 | 6'd1);

assign trunc_ln717_7_fu_1899_p1 = grp_fu_1966_p3;

always @ (posedge ap_clk) begin
    mul_i_reg_2305[2:0] <= 3'b000;
    mul_i_reg_2305_pp0_iter1_reg[2:0] <= 3'b000;
    mul_i_reg_2305_pp0_iter2_reg[2:0] <= 3'b000;
    mul_i_reg_2305_pp0_iter3_reg[2:0] <= 3'b000;
    mul_i_reg_2305_pp0_iter4_reg[2:0] <= 3'b000;
    mul_i_reg_2305_pp0_iter5_reg[2:0] <= 3'b000;
end

endmodule //nnlayer_nnlayer_Pipeline_VITIS_LOOP_99_1
