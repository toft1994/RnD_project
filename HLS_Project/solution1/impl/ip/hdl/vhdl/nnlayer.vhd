-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
-- Version: 2021.2
-- Copyright (C) Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity nnlayer is
generic (
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 18;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_local_block : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of nnlayer is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "nnlayer_nnlayer,hls_ip_2021_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.565000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=67,HLS_SYN_DSP=0,HLS_SYN_FF=740,HLS_SYN_LUT=1092,HLS_VERSION=2021_2}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant C_S_AXI_DATA_WIDTH : INTEGER range 63 downto 0 := 20;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_local_deadlock : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal input_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal output_r_ce0 : STD_LOGIC;
    signal output_r_we0 : STD_LOGIC;
    signal output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal output_r_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal weights_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal bias_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal numOfInNeurons : STD_LOGIC_VECTOR (15 downto 0);
    signal numOfOutNeurons : STD_LOGIC_VECTOR (15 downto 0);
    signal activation : STD_LOGIC_VECTOR (7 downto 0);
    signal numOfOutNeurons_read_reg_136 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln47_fu_124_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln47_reg_152 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_130_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bound_reg_156 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_idle : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_ready : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_we0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_idle : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_ready : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_we0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_done : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_idle : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_ready : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_ce0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_we0 : STD_LOGIC;
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_d0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg : STD_LOGIC := '0';
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm_state5 : STD_LOGIC;
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal grp_fu_130_p0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_130_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_130_ce : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_state8_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal grp_fu_130_p00 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_130_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component nnlayer_nnlayer_Pipeline_VITIS_LOOP_33_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        numOfOutNeurons : IN STD_LOGIC_VECTOR (15 downto 0);
        bias_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        bias_ce0 : OUT STD_LOGIC;
        bias_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nnlayer_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        bound : IN STD_LOGIC_VECTOR (31 downto 0);
        numOfOutNeurons : IN STD_LOGIC_VECTOR (15 downto 0);
        input_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_r_ce0 : OUT STD_LOGIC;
        input_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weights_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weights_ce0 : OUT STD_LOGIC;
        weights_q0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nnlayer_nnlayer_Pipeline_VITIS_LOOP_10_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_r_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : OUT STD_LOGIC;
        output_r_we0 : OUT STD_LOGIC;
        output_r_d0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_r_q0 : IN STD_LOGIC_VECTOR (15 downto 0) );
    end component;


    component nnlayer_mul_mul_16ns_16ns_32_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (15 downto 0);
        din1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component nnlayer_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        numOfInNeurons : OUT STD_LOGIC_VECTOR (15 downto 0);
        numOfOutNeurons : OUT STD_LOGIC_VECTOR (15 downto 0);
        activation : OUT STD_LOGIC_VECTOR (7 downto 0);
        input_r_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        input_r_ce0 : IN STD_LOGIC;
        input_r_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        output_r_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        output_r_ce0 : IN STD_LOGIC;
        output_r_we0 : IN STD_LOGIC;
        output_r_d0 : IN STD_LOGIC_VECTOR (15 downto 0);
        output_r_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        bias_address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        bias_ce0 : IN STD_LOGIC;
        bias_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        weights_address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        weights_ce0 : IN STD_LOGIC;
        weights_q0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC;
        ap_local_deadlock : IN STD_LOGIC_VECTOR (0 downto 0) );
    end component;



begin
    grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88 : component nnlayer_nnlayer_Pipeline_VITIS_LOOP_33_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start,
        ap_done => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done,
        ap_idle => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_idle,
        ap_ready => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_ready,
        numOfOutNeurons => numOfOutNeurons_read_reg_136,
        bias_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_address0,
        bias_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_ce0,
        bias_q0 => bias_q0,
        output_r_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_address0,
        output_r_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_ce0,
        output_r_we0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_we0,
        output_r_d0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_d0);

    grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98 : component nnlayer_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start,
        ap_done => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done,
        ap_idle => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_idle,
        ap_ready => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_ready,
        bound => bound_reg_156,
        numOfOutNeurons => numOfOutNeurons_read_reg_136,
        input_r_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_address0,
        input_r_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_ce0,
        input_r_q0 => input_r_q0,
        weights_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_address0,
        weights_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_ce0,
        weights_q0 => weights_q0,
        output_r_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_address0,
        output_r_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_ce0,
        output_r_we0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_we0,
        output_r_d0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_d0,
        output_r_q0 => output_r_q0);

    grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110 : component nnlayer_nnlayer_Pipeline_VITIS_LOOP_10_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start,
        ap_done => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_done,
        ap_idle => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_idle,
        ap_ready => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_ready,
        output_r_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_address0,
        output_r_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_ce0,
        output_r_we0 => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_we0,
        output_r_d0 => grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_d0,
        output_r_q0 => output_r_q0);

    control_s_axi_U : component nnlayer_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        numOfInNeurons => numOfInNeurons,
        numOfOutNeurons => numOfOutNeurons,
        activation => activation,
        input_r_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_address0,
        input_r_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_input_r_ce0,
        input_r_q0 => input_r_q0,
        output_r_address0 => output_r_address0,
        output_r_ce0 => output_r_ce0,
        output_r_we0 => output_r_we0,
        output_r_d0 => output_r_d0,
        output_r_q0 => output_r_q0,
        bias_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_address0,
        bias_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_bias_ce0,
        bias_q0 => bias_q0,
        weights_address0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_address0,
        weights_ce0 => grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_weights_ce0,
        weights_q0 => weights_q0,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle,
        ap_local_deadlock => ap_local_deadlock);

    mul_mul_16ns_16ns_32_4_1_U12 : component nnlayer_mul_mul_16ns_16ns_32_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 16,
        din1_WIDTH => 16,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_130_p0,
        din1 => grp_fu_130_p1,
        ce => grp_fu_130_ce,
        dout => grp_fu_130_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_ready = ap_const_logic_1)) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_ready = ap_const_logic_1)) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (ap_const_logic_1 = ap_NS_fsm_state5))) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_ready = ap_const_logic_1)) then 
                    grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bound_reg_156 <= grp_fu_130_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln47_reg_152 <= icmp_ln47_fu_124_p2;
                numOfOutNeurons_read_reg_136 <= numOfOutNeurons;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done, grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done = ap_const_logic_1) and (icmp_ln47_reg_152 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                elsif (((grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done = ap_const_logic_1) and (icmp_ln47_reg_152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_NS_fsm_state5 <= ap_NS_fsm(4);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done)
    begin
        if ((grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;

    ap_ST_fsm_state6_blk_assign_proc : process(grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done)
    begin
        if ((grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state7_blk <= ap_const_logic_0;

    ap_ST_fsm_state8_blk_assign_proc : process(ap_block_state8_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state8_on_subcall_done)) then 
            ap_ST_fsm_state8_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state8_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state8_on_subcall_done_assign_proc : process(icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_done)
    begin
                ap_block_state8_on_subcall_done <= ((icmp_ln47_reg_152 = ap_const_lv1_1) and (grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;

    ap_local_block <= ap_const_logic_0;
    ap_local_deadlock <= ap_const_lv1_0;

    ap_ready_assign_proc : process(ap_CS_fsm_state8, ap_block_state8_on_subcall_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) and (ap_const_boolean_0 = ap_block_state8_on_subcall_done))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    grp_fu_130_ce_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state4, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state2)))) then 
            grp_fu_130_ce <= ap_const_logic_1;
        else 
            grp_fu_130_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_130_p0 <= grp_fu_130_p00(16 - 1 downto 0);
    grp_fu_130_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numOfInNeurons),32));
    grp_fu_130_p1 <= grp_fu_130_p10(16 - 1 downto 0);
    grp_fu_130_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(numOfOutNeurons),32));
    grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start <= grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_ap_start_reg;
    grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start <= grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_ap_start_reg;
    grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start <= grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_ap_start_reg;
    icmp_ln47_fu_124_p2 <= "1" when (activation = ap_const_lv8_1) else "0";

    output_r_address0_assign_proc : process(icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_address0, grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_address0, grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_address0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((icmp_ln47_reg_152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_address0 <= grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_address0 <= grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_r_address0 <= grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_address0;
        else 
            output_r_address0 <= "XXXXXXXX";
        end if; 
    end process;


    output_r_ce0_assign_proc : process(icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_ce0, grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_ce0, grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_ce0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((icmp_ln47_reg_152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_ce0 <= grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_ce0 <= grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_r_ce0 <= grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_ce0;
        else 
            output_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_r_d0_assign_proc : process(icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_d0, grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_d0, grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_d0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((icmp_ln47_reg_152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_d0 <= grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_d0 <= grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_r_d0 <= grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_d0;
        else 
            output_r_d0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_r_we0_assign_proc : process(icmp_ln47_reg_152, grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_we0, grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_we0, grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_we0, ap_CS_fsm_state2, ap_CS_fsm_state6, ap_CS_fsm_state8)
    begin
        if (((icmp_ln47_reg_152 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then 
            output_r_we0 <= grp_nnlayer_Pipeline_VITIS_LOOP_10_1_fu_110_output_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            output_r_we0 <= grp_nnlayer_Pipeline_VITIS_LOOP_37_2_VITIS_LOOP_39_3_fu_98_output_r_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_r_we0 <= grp_nnlayer_Pipeline_VITIS_LOOP_33_1_fu_88_output_r_we0;
        else 
            output_r_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
