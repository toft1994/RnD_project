# ==============================================================
# Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2021.2 (64-bit)
# Copyright 1986-2021 Xilinx, Inc. All Rights Reserved.
# ==============================================================
package require math::bignum
set SupportDataType 0
proc mysort {alist} { return $alist; }

proc glob-r {{dir .}} {
    # {{{
    set res {}
    foreach i [lsort [glob -nocomplain -dir $dir *]] {
        if {[file type $i]=="directory"} {
            eval lappend  res [glob-r $i]
        } else {
            lappend res $i
        }
    }
    set res
    # }}}
}


proc sort_file_names {files {top_name {}}} {
    if { [llength $files] < 2 } {
        return $files
    }
    set files [lsort -dictionary $files]
    if { $top_name eq "" } {
        return $files
    }
    set top_file ""
    set res {}
    foreach f $files {
        if { [file tail $f] eq $top_name } {
            if { $top_file ne "" } {
                error "Found multiple $top_name files"
            }
            set top_file $f
        } else {
            lappend res $f
        }
    }
    if { $top_file ne "" } {
        lappend res $top_file
    }
    return $res
}
    

## IP Info
set Vendor      "xilinx.com"
set Library     "hls"
set IPName      "nnlayer"
set Version     "1.0"
set DisplayName "Nnlayer"
set Revision    "2112441455"
set Description "An IP generated by Vitis HLS"
set Device      "zynq"
set AutoFamily  ""
set Taxonomy    "/VITIS_HLS_IP"
set target_part "xc7z020-clg484-1"
set target_lang "verilog"
set has_xpm_memory "0"
set has_blackbox "false"
set sdx_kernel_type "hls"
set xo_kernel_name "nnlayer"
set xo_kernel_files {}
set enable_xo_gen false
set kernel_xml [file join [pwd] ../kernel/kernel.xml]
set solution_dir "C:/Users/jespe/Desktop/Uni_Civil_10_Semester/RnD/RnD_project/HLS_Project/solution1"
set debug_dir "C:/Users/jespe/Desktop/Uni_Civil_10_Semester/RnD/RnD_project/HLS_Project/solution1/.debug"
set xo_hls_files_dir ""
set hdl_module_list {nnlayer_flow_control_loop_pipe_sequential_init
nnlayer_flow_control_loop_pipe_sequential_init
nnlayer_mul_24s_26ns_50_1_1
nnlayer_sdiv_18ns_16s_16_22_seq_1
nnlayer_sdiv_40ns_33ns_16_44_seq_1
nnlayer_sdiv_24ns_17s_24_28_seq_1
nnlayer_mac_muladd_16s_16s_24ns_24_4_1
nnlayer_mul_mul_16s_16s_16_4_1
nnlayer_mul_mul_9ns_16s_24_4_1
nnlayer_output_V_RAM_AUTO_1R1W
nnlayer_resArray_V_RAM_AUTO_1R1W
nnlayer_control_s_axi
nnlayer_Pipeline_VITIS_LOOP_77_1
nnlayer_Pipeline_VITIS_LOOP_16_1
nnlayer
}
set kernel_xo ""

## Variables
set Top "nnlayer"
set TopNoPrefix "nnlayer"
set VhdlFiles [sort_file_names [glob -nocomplain hdl/vhdl/*] ${Top}.vhd]
set VerilogFiles [sort_file_names [glob -nocomplain hdl/verilog/*] ${Top}.v]
set SWDriverFiles [sort_file_names [glob-r drivers]]
set SubcoreFiles [sort_file_names [glob -nocomplain subcore/*]]
set DocumentFiles [sort_file_names [glob -nocomplain doc/*]]
set BDFiles [sort_file_names [glob -nocomplain bd/*]]
set ConstraintFiles [sort_file_names [glob -nocomplain constraints/*]]
set MiscFiles [sort_file_names [glob -nocomplain misc/*]]
set Interfaces {
    s_axi_control {
        type "axi4lite"
        mode "slave"
        port_prefix "s_axi_control"
        param_prefix "C_S_AXI_CONTROL"
        addr_bits "16"
        port_width "AWADDR 16 WDATA 32 WSTRB 4 ARADDR 16 RDATA 32"
        registers {{0x00 CTRL RW 0x0 {Control signals} {{ 0 1 AP_START RW 0 "Control signal Register for 'ap_start'." } { 1 1 AP_DONE R 0 "Control signal Register for 'ap_done'." } { 2 1 AP_IDLE R 0 "Control signal Register for 'ap_idle'." } { 3 1 AP_READY R 0 "Control signal Register for 'ap_ready'." } { 4 3 RESERVED_1 R 0 "Reserved.  0s on read." } { 7 1 AUTO_RESTART RW 0 "Control signal Register for 'auto_restart'." } { 8 1 RESERVED_2 R 0 "Reserved.  0s on read." } { 9 1 RESERVED_3 R 0 "Reserved.  0s on read." } { 10 22 RESERVED_4 R 0 "Reserved.  0s on read." }}} {0x04 GIER RW 0x0 {Global Interrupt Enable Register} {{ 0 1 Enable RW 0 "Master enable for the device interrupt output to the system interrupt controller: 0 = Disabled, 1 = Enabled" } { 1 31 RESERVED R 0 "Reserved.  0s on read." }}} {0x08 IP_IER RW 0x0 {IP Interrupt Enable Register} {{0 1 CHAN0_INT_EN RW 0 {Enable Channel 0 (ap_done) Interrupt.  0 = Disabled, 1 = Enabled.}} {1 1 CHAN1_INT_EN RW 0 {Enable Channel 1 (ap_ready) Interrupt.  0 = Disabled, 1 = Enabled.}} {2 3 RESERVED_0 R 0 {Reserved.  0s on read.}} {5 1 CHAN2_INT_EN RW 0 {Enable Channel 2 (ap_local_deadlock) Interrupt.  0 = Disabled, 1 = Enabled.}} {6 26 RESERVED_1 R 0 {Reserved.  0s on read.}}}} {0x0c IP_ISR RW 0x0 {IP Interrupt Status Register} {{0 1 CHAN0_INT_ST RTOW 0 {Channel 0 (ap_done) Interrupt Status. 0 = No Channel 0 input interrupt, 1 = Channel 0 input interrup}} {1 1 CHAN1_INT_ST RTOW 0 {Channel 1 (ap_ready) Interrupt Status. 0 = No Channel 1 input interrupt, 1 = Channel 1 input interrup}} {2 3 RESERVED_0 R 0 {Reserved.  0s on read.}} {5 1 CHAN2_INT_ST RTOW 0 {Channel 2 (ap_local_deadlock) Interrupt Status. 0 = No Channel 2 input interrupt, 1 = Channel 2 input interrup}} {6 26 RESERVED_1 R 0 {Reserved.  0s on read.}}}} {0x10 input_0 W 0x0 "Data signal of input_0" {{0 16 input_0 W 0 "Bit 15 to 0 of input_0"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x18 input_1 W 0x0 "Data signal of input_1" {{0 16 input_1 W 0 "Bit 15 to 0 of input_1"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x20 input_2 W 0x0 "Data signal of input_2" {{0 16 input_2 W 0 "Bit 15 to 0 of input_2"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x28 input_3 W 0x0 "Data signal of input_3" {{0 16 input_3 W 0 "Bit 15 to 0 of input_3"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x30 input_4 W 0x0 "Data signal of input_4" {{0 16 input_4 W 0 "Bit 15 to 0 of input_4"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x38 input_5 W 0x0 "Data signal of input_5" {{0 16 input_5 W 0 "Bit 15 to 0 of input_5"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x40 input_6 W 0x0 "Data signal of input_6" {{0 16 input_6 W 0 "Bit 15 to 0 of input_6"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x48 input_7 W 0x0 "Data signal of input_7" {{0 16 input_7 W 0 "Bit 15 to 0 of input_7"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x50 input_8 W 0x0 "Data signal of input_8" {{0 16 input_8 W 0 "Bit 15 to 0 of input_8"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x58 input_9 W 0x0 "Data signal of input_9" {{0 16 input_9 W 0 "Bit 15 to 0 of input_9"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x60 input_10 W 0x0 "Data signal of input_10" {{0 16 input_10 W 0 "Bit 15 to 0 of input_10"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x68 input_11 W 0x0 "Data signal of input_11" {{0 16 input_11 W 0 "Bit 15 to 0 of input_11"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x70 input_12 W 0x0 "Data signal of input_12" {{0 16 input_12 W 0 "Bit 15 to 0 of input_12"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x78 input_13 W 0x0 "Data signal of input_13" {{0 16 input_13 W 0 "Bit 15 to 0 of input_13"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x80 input_14 W 0x0 "Data signal of input_14" {{0 16 input_14 W 0 "Bit 15 to 0 of input_14"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x88 input_15 W 0x0 "Data signal of input_15" {{0 16 input_15 W 0 "Bit 15 to 0 of input_15"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x90 input_16 W 0x0 "Data signal of input_16" {{0 16 input_16 W 0 "Bit 15 to 0 of input_16"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x98 input_17 W 0x0 "Data signal of input_17" {{0 16 input_17 W 0 "Bit 15 to 0 of input_17"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa0 input_18 W 0x0 "Data signal of input_18" {{0 16 input_18 W 0 "Bit 15 to 0 of input_18"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa8 input_19 W 0x0 "Data signal of input_19" {{0 16 input_19 W 0 "Bit 15 to 0 of input_19"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb0 input_20 W 0x0 "Data signal of input_20" {{0 16 input_20 W 0 "Bit 15 to 0 of input_20"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb8 input_21 W 0x0 "Data signal of input_21" {{0 16 input_21 W 0 "Bit 15 to 0 of input_21"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xc0 input_22 W 0x0 "Data signal of input_22" {{0 16 input_22 W 0 "Bit 15 to 0 of input_22"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xc8 input_23 W 0x0 "Data signal of input_23" {{0 16 input_23 W 0 "Bit 15 to 0 of input_23"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xd0 input_24 W 0x0 "Data signal of input_24" {{0 16 input_24 W 0 "Bit 15 to 0 of input_24"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xd8 input_25 W 0x0 "Data signal of input_25" {{0 16 input_25 W 0 "Bit 15 to 0 of input_25"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xe0 input_26 W 0x0 "Data signal of input_26" {{0 16 input_26 W 0 "Bit 15 to 0 of input_26"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xe8 input_27 W 0x0 "Data signal of input_27" {{0 16 input_27 W 0 "Bit 15 to 0 of input_27"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xf0 input_28 W 0x0 "Data signal of input_28" {{0 16 input_28 W 0 "Bit 15 to 0 of input_28"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xf8 input_29 W 0x0 "Data signal of input_29" {{0 16 input_29 W 0 "Bit 15 to 0 of input_29"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x100 input_30 W 0x0 "Data signal of input_30" {{0 16 input_30 W 0 "Bit 15 to 0 of input_30"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x108 input_31 W 0x0 "Data signal of input_31" {{0 16 input_31 W 0 "Bit 15 to 0 of input_31"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x110 input_32 W 0x0 "Data signal of input_32" {{0 16 input_32 W 0 "Bit 15 to 0 of input_32"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x118 input_33 W 0x0 "Data signal of input_33" {{0 16 input_33 W 0 "Bit 15 to 0 of input_33"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x120 input_34 W 0x0 "Data signal of input_34" {{0 16 input_34 W 0 "Bit 15 to 0 of input_34"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x128 input_35 W 0x0 "Data signal of input_35" {{0 16 input_35 W 0 "Bit 15 to 0 of input_35"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x130 input_36 W 0x0 "Data signal of input_36" {{0 16 input_36 W 0 "Bit 15 to 0 of input_36"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x138 input_37 W 0x0 "Data signal of input_37" {{0 16 input_37 W 0 "Bit 15 to 0 of input_37"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x140 input_38 W 0x0 "Data signal of input_38" {{0 16 input_38 W 0 "Bit 15 to 0 of input_38"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x148 input_39 W 0x0 "Data signal of input_39" {{0 16 input_39 W 0 "Bit 15 to 0 of input_39"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x150 input_40 W 0x0 "Data signal of input_40" {{0 16 input_40 W 0 "Bit 15 to 0 of input_40"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x158 input_41 W 0x0 "Data signal of input_41" {{0 16 input_41 W 0 "Bit 15 to 0 of input_41"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x160 input_42 W 0x0 "Data signal of input_42" {{0 16 input_42 W 0 "Bit 15 to 0 of input_42"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x168 input_43 W 0x0 "Data signal of input_43" {{0 16 input_43 W 0 "Bit 15 to 0 of input_43"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x170 input_44 W 0x0 "Data signal of input_44" {{0 16 input_44 W 0 "Bit 15 to 0 of input_44"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x178 input_45 W 0x0 "Data signal of input_45" {{0 16 input_45 W 0 "Bit 15 to 0 of input_45"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x180 input_46 W 0x0 "Data signal of input_46" {{0 16 input_46 W 0 "Bit 15 to 0 of input_46"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x188 input_47 W 0x0 "Data signal of input_47" {{0 16 input_47 W 0 "Bit 15 to 0 of input_47"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x190 input_48 W 0x0 "Data signal of input_48" {{0 16 input_48 W 0 "Bit 15 to 0 of input_48"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x198 input_49 W 0x0 "Data signal of input_49" {{0 16 input_49 W 0 "Bit 15 to 0 of input_49"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1a0 input_50 W 0x0 "Data signal of input_50" {{0 16 input_50 W 0 "Bit 15 to 0 of input_50"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1a8 input_51 W 0x0 "Data signal of input_51" {{0 16 input_51 W 0 "Bit 15 to 0 of input_51"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1b0 input_52 W 0x0 "Data signal of input_52" {{0 16 input_52 W 0 "Bit 15 to 0 of input_52"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1b8 input_53 W 0x0 "Data signal of input_53" {{0 16 input_53 W 0 "Bit 15 to 0 of input_53"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1c0 input_54 W 0x0 "Data signal of input_54" {{0 16 input_54 W 0 "Bit 15 to 0 of input_54"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1c8 input_55 W 0x0 "Data signal of input_55" {{0 16 input_55 W 0 "Bit 15 to 0 of input_55"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1d0 input_56 W 0x0 "Data signal of input_56" {{0 16 input_56 W 0 "Bit 15 to 0 of input_56"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1d8 input_57 W 0x0 "Data signal of input_57" {{0 16 input_57 W 0 "Bit 15 to 0 of input_57"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1e0 input_58 W 0x0 "Data signal of input_58" {{0 16 input_58 W 0 "Bit 15 to 0 of input_58"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1e8 input_59 W 0x0 "Data signal of input_59" {{0 16 input_59 W 0 "Bit 15 to 0 of input_59"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1f0 input_60 W 0x0 "Data signal of input_60" {{0 16 input_60 W 0 "Bit 15 to 0 of input_60"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x1f8 input_61 W 0x0 "Data signal of input_61" {{0 16 input_61 W 0 "Bit 15 to 0 of input_61"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x200 input_62 W 0x0 "Data signal of input_62" {{0 16 input_62 W 0 "Bit 15 to 0 of input_62"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x208 input_63 W 0x0 "Data signal of input_63" {{0 16 input_63 W 0 "Bit 15 to 0 of input_63"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x210 input_64 W 0x0 "Data signal of input_64" {{0 16 input_64 W 0 "Bit 15 to 0 of input_64"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x218 input_65 W 0x0 "Data signal of input_65" {{0 16 input_65 W 0 "Bit 15 to 0 of input_65"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x220 input_66 W 0x0 "Data signal of input_66" {{0 16 input_66 W 0 "Bit 15 to 0 of input_66"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x228 input_67 W 0x0 "Data signal of input_67" {{0 16 input_67 W 0 "Bit 15 to 0 of input_67"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x230 input_68 W 0x0 "Data signal of input_68" {{0 16 input_68 W 0 "Bit 15 to 0 of input_68"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x238 input_69 W 0x0 "Data signal of input_69" {{0 16 input_69 W 0 "Bit 15 to 0 of input_69"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x240 input_70 W 0x0 "Data signal of input_70" {{0 16 input_70 W 0 "Bit 15 to 0 of input_70"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x248 input_71 W 0x0 "Data signal of input_71" {{0 16 input_71 W 0 "Bit 15 to 0 of input_71"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x250 input_72 W 0x0 "Data signal of input_72" {{0 16 input_72 W 0 "Bit 15 to 0 of input_72"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x258 input_73 W 0x0 "Data signal of input_73" {{0 16 input_73 W 0 "Bit 15 to 0 of input_73"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x260 input_74 W 0x0 "Data signal of input_74" {{0 16 input_74 W 0 "Bit 15 to 0 of input_74"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x268 input_75 W 0x0 "Data signal of input_75" {{0 16 input_75 W 0 "Bit 15 to 0 of input_75"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x270 input_76 W 0x0 "Data signal of input_76" {{0 16 input_76 W 0 "Bit 15 to 0 of input_76"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x278 input_77 W 0x0 "Data signal of input_77" {{0 16 input_77 W 0 "Bit 15 to 0 of input_77"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x280 input_78 W 0x0 "Data signal of input_78" {{0 16 input_78 W 0 "Bit 15 to 0 of input_78"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x288 input_79 W 0x0 "Data signal of input_79" {{0 16 input_79 W 0 "Bit 15 to 0 of input_79"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x290 input_80 W 0x0 "Data signal of input_80" {{0 16 input_80 W 0 "Bit 15 to 0 of input_80"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x298 input_81 W 0x0 "Data signal of input_81" {{0 16 input_81 W 0 "Bit 15 to 0 of input_81"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2a0 input_82 W 0x0 "Data signal of input_82" {{0 16 input_82 W 0 "Bit 15 to 0 of input_82"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2a8 input_83 W 0x0 "Data signal of input_83" {{0 16 input_83 W 0 "Bit 15 to 0 of input_83"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2b0 input_84 W 0x0 "Data signal of input_84" {{0 16 input_84 W 0 "Bit 15 to 0 of input_84"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2b8 input_85 W 0x0 "Data signal of input_85" {{0 16 input_85 W 0 "Bit 15 to 0 of input_85"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2c0 input_86 W 0x0 "Data signal of input_86" {{0 16 input_86 W 0 "Bit 15 to 0 of input_86"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2c8 input_87 W 0x0 "Data signal of input_87" {{0 16 input_87 W 0 "Bit 15 to 0 of input_87"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2d0 input_88 W 0x0 "Data signal of input_88" {{0 16 input_88 W 0 "Bit 15 to 0 of input_88"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2d8 input_89 W 0x0 "Data signal of input_89" {{0 16 input_89 W 0 "Bit 15 to 0 of input_89"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2e0 input_90 W 0x0 "Data signal of input_90" {{0 16 input_90 W 0 "Bit 15 to 0 of input_90"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2e8 input_91 W 0x0 "Data signal of input_91" {{0 16 input_91 W 0 "Bit 15 to 0 of input_91"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2f0 input_92 W 0x0 "Data signal of input_92" {{0 16 input_92 W 0 "Bit 15 to 0 of input_92"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x2f8 input_93 W 0x0 "Data signal of input_93" {{0 16 input_93 W 0 "Bit 15 to 0 of input_93"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x300 input_94 W 0x0 "Data signal of input_94" {{0 16 input_94 W 0 "Bit 15 to 0 of input_94"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x308 input_95 W 0x0 "Data signal of input_95" {{0 16 input_95 W 0 "Bit 15 to 0 of input_95"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x310 input_96 W 0x0 "Data signal of input_96" {{0 16 input_96 W 0 "Bit 15 to 0 of input_96"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x318 input_97 W 0x0 "Data signal of input_97" {{0 16 input_97 W 0 "Bit 15 to 0 of input_97"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x320 input_98 W 0x0 "Data signal of input_98" {{0 16 input_98 W 0 "Bit 15 to 0 of input_98"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x328 input_99 W 0x0 "Data signal of input_99" {{0 16 input_99 W 0 "Bit 15 to 0 of input_99"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x330 input_100 W 0x0 "Data signal of input_100" {{0 16 input_100 W 0 "Bit 15 to 0 of input_100"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x338 input_101 W 0x0 "Data signal of input_101" {{0 16 input_101 W 0 "Bit 15 to 0 of input_101"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x340 input_102 W 0x0 "Data signal of input_102" {{0 16 input_102 W 0 "Bit 15 to 0 of input_102"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x348 input_103 W 0x0 "Data signal of input_103" {{0 16 input_103 W 0 "Bit 15 to 0 of input_103"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x350 input_104 W 0x0 "Data signal of input_104" {{0 16 input_104 W 0 "Bit 15 to 0 of input_104"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x358 input_105 W 0x0 "Data signal of input_105" {{0 16 input_105 W 0 "Bit 15 to 0 of input_105"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x360 input_106 W 0x0 "Data signal of input_106" {{0 16 input_106 W 0 "Bit 15 to 0 of input_106"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x368 input_107 W 0x0 "Data signal of input_107" {{0 16 input_107 W 0 "Bit 15 to 0 of input_107"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x370 input_108 W 0x0 "Data signal of input_108" {{0 16 input_108 W 0 "Bit 15 to 0 of input_108"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x378 input_109 W 0x0 "Data signal of input_109" {{0 16 input_109 W 0 "Bit 15 to 0 of input_109"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x380 input_110 W 0x0 "Data signal of input_110" {{0 16 input_110 W 0 "Bit 15 to 0 of input_110"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x388 input_111 W 0x0 "Data signal of input_111" {{0 16 input_111 W 0 "Bit 15 to 0 of input_111"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x390 input_112 W 0x0 "Data signal of input_112" {{0 16 input_112 W 0 "Bit 15 to 0 of input_112"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x398 input_113 W 0x0 "Data signal of input_113" {{0 16 input_113 W 0 "Bit 15 to 0 of input_113"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3a0 input_114 W 0x0 "Data signal of input_114" {{0 16 input_114 W 0 "Bit 15 to 0 of input_114"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3a8 input_115 W 0x0 "Data signal of input_115" {{0 16 input_115 W 0 "Bit 15 to 0 of input_115"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3b0 input_116 W 0x0 "Data signal of input_116" {{0 16 input_116 W 0 "Bit 15 to 0 of input_116"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3b8 input_117 W 0x0 "Data signal of input_117" {{0 16 input_117 W 0 "Bit 15 to 0 of input_117"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3c0 input_118 W 0x0 "Data signal of input_118" {{0 16 input_118 W 0 "Bit 15 to 0 of input_118"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3c8 input_119 W 0x0 "Data signal of input_119" {{0 16 input_119 W 0 "Bit 15 to 0 of input_119"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3d0 input_120 W 0x0 "Data signal of input_120" {{0 16 input_120 W 0 "Bit 15 to 0 of input_120"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3d8 input_121 W 0x0 "Data signal of input_121" {{0 16 input_121 W 0 "Bit 15 to 0 of input_121"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3e0 input_122 W 0x0 "Data signal of input_122" {{0 16 input_122 W 0 "Bit 15 to 0 of input_122"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3e8 input_123 W 0x0 "Data signal of input_123" {{0 16 input_123 W 0 "Bit 15 to 0 of input_123"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3f0 input_124 W 0x0 "Data signal of input_124" {{0 16 input_124 W 0 "Bit 15 to 0 of input_124"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x3f8 input_125 W 0x0 "Data signal of input_125" {{0 16 input_125 W 0 "Bit 15 to 0 of input_125"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x400 input_126 W 0x0 "Data signal of input_126" {{0 16 input_126 W 0 "Bit 15 to 0 of input_126"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x408 input_127 W 0x0 "Data signal of input_127" {{0 16 input_127 W 0 "Bit 15 to 0 of input_127"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x410 output_0 R 0x0 "Data signal of output_0" {{0 16 output_0 R 0 "Bit 15 to 0 of output_0"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x414 output_0_ctrl R 0x0 "Control signal of output_0" {{0 1 output_0_ap_vld R 0 "Control signal output_0_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x420 output_1 R 0x0 "Data signal of output_1" {{0 16 output_1 R 0 "Bit 15 to 0 of output_1"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x424 output_1_ctrl R 0x0 "Control signal of output_1" {{0 1 output_1_ap_vld R 0 "Control signal output_1_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x430 output_2 R 0x0 "Data signal of output_2" {{0 16 output_2 R 0 "Bit 15 to 0 of output_2"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x434 output_2_ctrl R 0x0 "Control signal of output_2" {{0 1 output_2_ap_vld R 0 "Control signal output_2_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x440 output_3 R 0x0 "Data signal of output_3" {{0 16 output_3 R 0 "Bit 15 to 0 of output_3"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x444 output_3_ctrl R 0x0 "Control signal of output_3" {{0 1 output_3_ap_vld R 0 "Control signal output_3_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x450 output_4 R 0x0 "Data signal of output_4" {{0 16 output_4 R 0 "Bit 15 to 0 of output_4"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x454 output_4_ctrl R 0x0 "Control signal of output_4" {{0 1 output_4_ap_vld R 0 "Control signal output_4_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x460 output_5 R 0x0 "Data signal of output_5" {{0 16 output_5 R 0 "Bit 15 to 0 of output_5"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x464 output_5_ctrl R 0x0 "Control signal of output_5" {{0 1 output_5_ap_vld R 0 "Control signal output_5_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x470 output_6 R 0x0 "Data signal of output_6" {{0 16 output_6 R 0 "Bit 15 to 0 of output_6"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x474 output_6_ctrl R 0x0 "Control signal of output_6" {{0 1 output_6_ap_vld R 0 "Control signal output_6_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x480 output_7 R 0x0 "Data signal of output_7" {{0 16 output_7 R 0 "Bit 15 to 0 of output_7"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x484 output_7_ctrl R 0x0 "Control signal of output_7" {{0 1 output_7_ap_vld R 0 "Control signal output_7_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x490 output_8 R 0x0 "Data signal of output_8" {{0 16 output_8 R 0 "Bit 15 to 0 of output_8"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x494 output_8_ctrl R 0x0 "Control signal of output_8" {{0 1 output_8_ap_vld R 0 "Control signal output_8_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4a0 output_9 R 0x0 "Data signal of output_9" {{0 16 output_9 R 0 "Bit 15 to 0 of output_9"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4a4 output_9_ctrl R 0x0 "Control signal of output_9" {{0 1 output_9_ap_vld R 0 "Control signal output_9_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4b0 output_10 R 0x0 "Data signal of output_10" {{0 16 output_10 R 0 "Bit 15 to 0 of output_10"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4b4 output_10_ctrl R 0x0 "Control signal of output_10" {{0 1 output_10_ap_vld R 0 "Control signal output_10_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4c0 output_11 R 0x0 "Data signal of output_11" {{0 16 output_11 R 0 "Bit 15 to 0 of output_11"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4c4 output_11_ctrl R 0x0 "Control signal of output_11" {{0 1 output_11_ap_vld R 0 "Control signal output_11_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4d0 output_12 R 0x0 "Data signal of output_12" {{0 16 output_12 R 0 "Bit 15 to 0 of output_12"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4d4 output_12_ctrl R 0x0 "Control signal of output_12" {{0 1 output_12_ap_vld R 0 "Control signal output_12_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4e0 output_13 R 0x0 "Data signal of output_13" {{0 16 output_13 R 0 "Bit 15 to 0 of output_13"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4e4 output_13_ctrl R 0x0 "Control signal of output_13" {{0 1 output_13_ap_vld R 0 "Control signal output_13_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x4f0 output_14 R 0x0 "Data signal of output_14" {{0 16 output_14 R 0 "Bit 15 to 0 of output_14"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x4f4 output_14_ctrl R 0x0 "Control signal of output_14" {{0 1 output_14_ap_vld R 0 "Control signal output_14_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x500 output_15 R 0x0 "Data signal of output_15" {{0 16 output_15 R 0 "Bit 15 to 0 of output_15"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x504 output_15_ctrl R 0x0 "Control signal of output_15" {{0 1 output_15_ap_vld R 0 "Control signal output_15_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x510 output_16 R 0x0 "Data signal of output_16" {{0 16 output_16 R 0 "Bit 15 to 0 of output_16"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x514 output_16_ctrl R 0x0 "Control signal of output_16" {{0 1 output_16_ap_vld R 0 "Control signal output_16_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x520 output_17 R 0x0 "Data signal of output_17" {{0 16 output_17 R 0 "Bit 15 to 0 of output_17"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x524 output_17_ctrl R 0x0 "Control signal of output_17" {{0 1 output_17_ap_vld R 0 "Control signal output_17_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x530 output_18 R 0x0 "Data signal of output_18" {{0 16 output_18 R 0 "Bit 15 to 0 of output_18"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x534 output_18_ctrl R 0x0 "Control signal of output_18" {{0 1 output_18_ap_vld R 0 "Control signal output_18_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x540 output_19 R 0x0 "Data signal of output_19" {{0 16 output_19 R 0 "Bit 15 to 0 of output_19"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x544 output_19_ctrl R 0x0 "Control signal of output_19" {{0 1 output_19_ap_vld R 0 "Control signal output_19_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x550 output_20 R 0x0 "Data signal of output_20" {{0 16 output_20 R 0 "Bit 15 to 0 of output_20"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x554 output_20_ctrl R 0x0 "Control signal of output_20" {{0 1 output_20_ap_vld R 0 "Control signal output_20_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x560 output_21 R 0x0 "Data signal of output_21" {{0 16 output_21 R 0 "Bit 15 to 0 of output_21"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x564 output_21_ctrl R 0x0 "Control signal of output_21" {{0 1 output_21_ap_vld R 0 "Control signal output_21_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x570 output_22 R 0x0 "Data signal of output_22" {{0 16 output_22 R 0 "Bit 15 to 0 of output_22"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x574 output_22_ctrl R 0x0 "Control signal of output_22" {{0 1 output_22_ap_vld R 0 "Control signal output_22_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x580 output_23 R 0x0 "Data signal of output_23" {{0 16 output_23 R 0 "Bit 15 to 0 of output_23"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x584 output_23_ctrl R 0x0 "Control signal of output_23" {{0 1 output_23_ap_vld R 0 "Control signal output_23_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x590 output_24 R 0x0 "Data signal of output_24" {{0 16 output_24 R 0 "Bit 15 to 0 of output_24"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x594 output_24_ctrl R 0x0 "Control signal of output_24" {{0 1 output_24_ap_vld R 0 "Control signal output_24_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5a0 output_25 R 0x0 "Data signal of output_25" {{0 16 output_25 R 0 "Bit 15 to 0 of output_25"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5a4 output_25_ctrl R 0x0 "Control signal of output_25" {{0 1 output_25_ap_vld R 0 "Control signal output_25_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5b0 output_26 R 0x0 "Data signal of output_26" {{0 16 output_26 R 0 "Bit 15 to 0 of output_26"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5b4 output_26_ctrl R 0x0 "Control signal of output_26" {{0 1 output_26_ap_vld R 0 "Control signal output_26_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5c0 output_27 R 0x0 "Data signal of output_27" {{0 16 output_27 R 0 "Bit 15 to 0 of output_27"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5c4 output_27_ctrl R 0x0 "Control signal of output_27" {{0 1 output_27_ap_vld R 0 "Control signal output_27_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5d0 output_28 R 0x0 "Data signal of output_28" {{0 16 output_28 R 0 "Bit 15 to 0 of output_28"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5d4 output_28_ctrl R 0x0 "Control signal of output_28" {{0 1 output_28_ap_vld R 0 "Control signal output_28_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5e0 output_29 R 0x0 "Data signal of output_29" {{0 16 output_29 R 0 "Bit 15 to 0 of output_29"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5e4 output_29_ctrl R 0x0 "Control signal of output_29" {{0 1 output_29_ap_vld R 0 "Control signal output_29_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x5f0 output_30 R 0x0 "Data signal of output_30" {{0 16 output_30 R 0 "Bit 15 to 0 of output_30"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x5f4 output_30_ctrl R 0x0 "Control signal of output_30" {{0 1 output_30_ap_vld R 0 "Control signal output_30_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x600 output_31 R 0x0 "Data signal of output_31" {{0 16 output_31 R 0 "Bit 15 to 0 of output_31"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x604 output_31_ctrl R 0x0 "Control signal of output_31" {{0 1 output_31_ap_vld R 0 "Control signal output_31_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x610 output_32 R 0x0 "Data signal of output_32" {{0 16 output_32 R 0 "Bit 15 to 0 of output_32"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x614 output_32_ctrl R 0x0 "Control signal of output_32" {{0 1 output_32_ap_vld R 0 "Control signal output_32_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x620 output_33 R 0x0 "Data signal of output_33" {{0 16 output_33 R 0 "Bit 15 to 0 of output_33"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x624 output_33_ctrl R 0x0 "Control signal of output_33" {{0 1 output_33_ap_vld R 0 "Control signal output_33_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x630 output_34 R 0x0 "Data signal of output_34" {{0 16 output_34 R 0 "Bit 15 to 0 of output_34"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x634 output_34_ctrl R 0x0 "Control signal of output_34" {{0 1 output_34_ap_vld R 0 "Control signal output_34_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x640 output_35 R 0x0 "Data signal of output_35" {{0 16 output_35 R 0 "Bit 15 to 0 of output_35"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x644 output_35_ctrl R 0x0 "Control signal of output_35" {{0 1 output_35_ap_vld R 0 "Control signal output_35_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x650 output_36 R 0x0 "Data signal of output_36" {{0 16 output_36 R 0 "Bit 15 to 0 of output_36"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x654 output_36_ctrl R 0x0 "Control signal of output_36" {{0 1 output_36_ap_vld R 0 "Control signal output_36_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x660 output_37 R 0x0 "Data signal of output_37" {{0 16 output_37 R 0 "Bit 15 to 0 of output_37"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x664 output_37_ctrl R 0x0 "Control signal of output_37" {{0 1 output_37_ap_vld R 0 "Control signal output_37_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x670 output_38 R 0x0 "Data signal of output_38" {{0 16 output_38 R 0 "Bit 15 to 0 of output_38"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x674 output_38_ctrl R 0x0 "Control signal of output_38" {{0 1 output_38_ap_vld R 0 "Control signal output_38_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x680 output_39 R 0x0 "Data signal of output_39" {{0 16 output_39 R 0 "Bit 15 to 0 of output_39"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x684 output_39_ctrl R 0x0 "Control signal of output_39" {{0 1 output_39_ap_vld R 0 "Control signal output_39_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x690 output_40 R 0x0 "Data signal of output_40" {{0 16 output_40 R 0 "Bit 15 to 0 of output_40"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x694 output_40_ctrl R 0x0 "Control signal of output_40" {{0 1 output_40_ap_vld R 0 "Control signal output_40_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6a0 output_41 R 0x0 "Data signal of output_41" {{0 16 output_41 R 0 "Bit 15 to 0 of output_41"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6a4 output_41_ctrl R 0x0 "Control signal of output_41" {{0 1 output_41_ap_vld R 0 "Control signal output_41_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6b0 output_42 R 0x0 "Data signal of output_42" {{0 16 output_42 R 0 "Bit 15 to 0 of output_42"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6b4 output_42_ctrl R 0x0 "Control signal of output_42" {{0 1 output_42_ap_vld R 0 "Control signal output_42_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6c0 output_43 R 0x0 "Data signal of output_43" {{0 16 output_43 R 0 "Bit 15 to 0 of output_43"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6c4 output_43_ctrl R 0x0 "Control signal of output_43" {{0 1 output_43_ap_vld R 0 "Control signal output_43_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6d0 output_44 R 0x0 "Data signal of output_44" {{0 16 output_44 R 0 "Bit 15 to 0 of output_44"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6d4 output_44_ctrl R 0x0 "Control signal of output_44" {{0 1 output_44_ap_vld R 0 "Control signal output_44_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6e0 output_45 R 0x0 "Data signal of output_45" {{0 16 output_45 R 0 "Bit 15 to 0 of output_45"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6e4 output_45_ctrl R 0x0 "Control signal of output_45" {{0 1 output_45_ap_vld R 0 "Control signal output_45_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x6f0 output_46 R 0x0 "Data signal of output_46" {{0 16 output_46 R 0 "Bit 15 to 0 of output_46"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x6f4 output_46_ctrl R 0x0 "Control signal of output_46" {{0 1 output_46_ap_vld R 0 "Control signal output_46_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x700 output_47 R 0x0 "Data signal of output_47" {{0 16 output_47 R 0 "Bit 15 to 0 of output_47"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x704 output_47_ctrl R 0x0 "Control signal of output_47" {{0 1 output_47_ap_vld R 0 "Control signal output_47_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x710 output_48 R 0x0 "Data signal of output_48" {{0 16 output_48 R 0 "Bit 15 to 0 of output_48"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x714 output_48_ctrl R 0x0 "Control signal of output_48" {{0 1 output_48_ap_vld R 0 "Control signal output_48_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x720 output_49 R 0x0 "Data signal of output_49" {{0 16 output_49 R 0 "Bit 15 to 0 of output_49"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x724 output_49_ctrl R 0x0 "Control signal of output_49" {{0 1 output_49_ap_vld R 0 "Control signal output_49_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x730 output_50 R 0x0 "Data signal of output_50" {{0 16 output_50 R 0 "Bit 15 to 0 of output_50"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x734 output_50_ctrl R 0x0 "Control signal of output_50" {{0 1 output_50_ap_vld R 0 "Control signal output_50_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x740 output_51 R 0x0 "Data signal of output_51" {{0 16 output_51 R 0 "Bit 15 to 0 of output_51"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x744 output_51_ctrl R 0x0 "Control signal of output_51" {{0 1 output_51_ap_vld R 0 "Control signal output_51_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x750 output_52 R 0x0 "Data signal of output_52" {{0 16 output_52 R 0 "Bit 15 to 0 of output_52"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x754 output_52_ctrl R 0x0 "Control signal of output_52" {{0 1 output_52_ap_vld R 0 "Control signal output_52_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x760 output_53 R 0x0 "Data signal of output_53" {{0 16 output_53 R 0 "Bit 15 to 0 of output_53"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x764 output_53_ctrl R 0x0 "Control signal of output_53" {{0 1 output_53_ap_vld R 0 "Control signal output_53_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x770 output_54 R 0x0 "Data signal of output_54" {{0 16 output_54 R 0 "Bit 15 to 0 of output_54"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x774 output_54_ctrl R 0x0 "Control signal of output_54" {{0 1 output_54_ap_vld R 0 "Control signal output_54_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x780 output_55 R 0x0 "Data signal of output_55" {{0 16 output_55 R 0 "Bit 15 to 0 of output_55"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x784 output_55_ctrl R 0x0 "Control signal of output_55" {{0 1 output_55_ap_vld R 0 "Control signal output_55_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x790 output_56 R 0x0 "Data signal of output_56" {{0 16 output_56 R 0 "Bit 15 to 0 of output_56"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x794 output_56_ctrl R 0x0 "Control signal of output_56" {{0 1 output_56_ap_vld R 0 "Control signal output_56_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7a0 output_57 R 0x0 "Data signal of output_57" {{0 16 output_57 R 0 "Bit 15 to 0 of output_57"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7a4 output_57_ctrl R 0x0 "Control signal of output_57" {{0 1 output_57_ap_vld R 0 "Control signal output_57_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7b0 output_58 R 0x0 "Data signal of output_58" {{0 16 output_58 R 0 "Bit 15 to 0 of output_58"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7b4 output_58_ctrl R 0x0 "Control signal of output_58" {{0 1 output_58_ap_vld R 0 "Control signal output_58_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7c0 output_59 R 0x0 "Data signal of output_59" {{0 16 output_59 R 0 "Bit 15 to 0 of output_59"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7c4 output_59_ctrl R 0x0 "Control signal of output_59" {{0 1 output_59_ap_vld R 0 "Control signal output_59_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7d0 output_60 R 0x0 "Data signal of output_60" {{0 16 output_60 R 0 "Bit 15 to 0 of output_60"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7d4 output_60_ctrl R 0x0 "Control signal of output_60" {{0 1 output_60_ap_vld R 0 "Control signal output_60_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7e0 output_61 R 0x0 "Data signal of output_61" {{0 16 output_61 R 0 "Bit 15 to 0 of output_61"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7e4 output_61_ctrl R 0x0 "Control signal of output_61" {{0 1 output_61_ap_vld R 0 "Control signal output_61_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x7f0 output_62 R 0x0 "Data signal of output_62" {{0 16 output_62 R 0 "Bit 15 to 0 of output_62"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x7f4 output_62_ctrl R 0x0 "Control signal of output_62" {{0 1 output_62_ap_vld R 0 "Control signal output_62_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x800 output_63 R 0x0 "Data signal of output_63" {{0 16 output_63 R 0 "Bit 15 to 0 of output_63"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x804 output_63_ctrl R 0x0 "Control signal of output_63" {{0 1 output_63_ap_vld R 0 "Control signal output_63_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x810 output_64 R 0x0 "Data signal of output_64" {{0 16 output_64 R 0 "Bit 15 to 0 of output_64"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x814 output_64_ctrl R 0x0 "Control signal of output_64" {{0 1 output_64_ap_vld R 0 "Control signal output_64_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x820 output_65 R 0x0 "Data signal of output_65" {{0 16 output_65 R 0 "Bit 15 to 0 of output_65"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x824 output_65_ctrl R 0x0 "Control signal of output_65" {{0 1 output_65_ap_vld R 0 "Control signal output_65_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x830 output_66 R 0x0 "Data signal of output_66" {{0 16 output_66 R 0 "Bit 15 to 0 of output_66"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x834 output_66_ctrl R 0x0 "Control signal of output_66" {{0 1 output_66_ap_vld R 0 "Control signal output_66_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x840 output_67 R 0x0 "Data signal of output_67" {{0 16 output_67 R 0 "Bit 15 to 0 of output_67"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x844 output_67_ctrl R 0x0 "Control signal of output_67" {{0 1 output_67_ap_vld R 0 "Control signal output_67_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x850 output_68 R 0x0 "Data signal of output_68" {{0 16 output_68 R 0 "Bit 15 to 0 of output_68"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x854 output_68_ctrl R 0x0 "Control signal of output_68" {{0 1 output_68_ap_vld R 0 "Control signal output_68_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x860 output_69 R 0x0 "Data signal of output_69" {{0 16 output_69 R 0 "Bit 15 to 0 of output_69"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x864 output_69_ctrl R 0x0 "Control signal of output_69" {{0 1 output_69_ap_vld R 0 "Control signal output_69_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x870 output_70 R 0x0 "Data signal of output_70" {{0 16 output_70 R 0 "Bit 15 to 0 of output_70"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x874 output_70_ctrl R 0x0 "Control signal of output_70" {{0 1 output_70_ap_vld R 0 "Control signal output_70_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x880 output_71 R 0x0 "Data signal of output_71" {{0 16 output_71 R 0 "Bit 15 to 0 of output_71"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x884 output_71_ctrl R 0x0 "Control signal of output_71" {{0 1 output_71_ap_vld R 0 "Control signal output_71_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x890 output_72 R 0x0 "Data signal of output_72" {{0 16 output_72 R 0 "Bit 15 to 0 of output_72"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x894 output_72_ctrl R 0x0 "Control signal of output_72" {{0 1 output_72_ap_vld R 0 "Control signal output_72_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8a0 output_73 R 0x0 "Data signal of output_73" {{0 16 output_73 R 0 "Bit 15 to 0 of output_73"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8a4 output_73_ctrl R 0x0 "Control signal of output_73" {{0 1 output_73_ap_vld R 0 "Control signal output_73_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8b0 output_74 R 0x0 "Data signal of output_74" {{0 16 output_74 R 0 "Bit 15 to 0 of output_74"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8b4 output_74_ctrl R 0x0 "Control signal of output_74" {{0 1 output_74_ap_vld R 0 "Control signal output_74_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8c0 output_75 R 0x0 "Data signal of output_75" {{0 16 output_75 R 0 "Bit 15 to 0 of output_75"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8c4 output_75_ctrl R 0x0 "Control signal of output_75" {{0 1 output_75_ap_vld R 0 "Control signal output_75_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8d0 output_76 R 0x0 "Data signal of output_76" {{0 16 output_76 R 0 "Bit 15 to 0 of output_76"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8d4 output_76_ctrl R 0x0 "Control signal of output_76" {{0 1 output_76_ap_vld R 0 "Control signal output_76_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8e0 output_77 R 0x0 "Data signal of output_77" {{0 16 output_77 R 0 "Bit 15 to 0 of output_77"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8e4 output_77_ctrl R 0x0 "Control signal of output_77" {{0 1 output_77_ap_vld R 0 "Control signal output_77_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x8f0 output_78 R 0x0 "Data signal of output_78" {{0 16 output_78 R 0 "Bit 15 to 0 of output_78"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x8f4 output_78_ctrl R 0x0 "Control signal of output_78" {{0 1 output_78_ap_vld R 0 "Control signal output_78_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x900 output_79 R 0x0 "Data signal of output_79" {{0 16 output_79 R 0 "Bit 15 to 0 of output_79"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x904 output_79_ctrl R 0x0 "Control signal of output_79" {{0 1 output_79_ap_vld R 0 "Control signal output_79_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x910 output_80 R 0x0 "Data signal of output_80" {{0 16 output_80 R 0 "Bit 15 to 0 of output_80"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x914 output_80_ctrl R 0x0 "Control signal of output_80" {{0 1 output_80_ap_vld R 0 "Control signal output_80_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x920 output_81 R 0x0 "Data signal of output_81" {{0 16 output_81 R 0 "Bit 15 to 0 of output_81"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x924 output_81_ctrl R 0x0 "Control signal of output_81" {{0 1 output_81_ap_vld R 0 "Control signal output_81_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x930 output_82 R 0x0 "Data signal of output_82" {{0 16 output_82 R 0 "Bit 15 to 0 of output_82"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x934 output_82_ctrl R 0x0 "Control signal of output_82" {{0 1 output_82_ap_vld R 0 "Control signal output_82_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x940 output_83 R 0x0 "Data signal of output_83" {{0 16 output_83 R 0 "Bit 15 to 0 of output_83"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x944 output_83_ctrl R 0x0 "Control signal of output_83" {{0 1 output_83_ap_vld R 0 "Control signal output_83_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x950 output_84 R 0x0 "Data signal of output_84" {{0 16 output_84 R 0 "Bit 15 to 0 of output_84"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x954 output_84_ctrl R 0x0 "Control signal of output_84" {{0 1 output_84_ap_vld R 0 "Control signal output_84_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x960 output_85 R 0x0 "Data signal of output_85" {{0 16 output_85 R 0 "Bit 15 to 0 of output_85"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x964 output_85_ctrl R 0x0 "Control signal of output_85" {{0 1 output_85_ap_vld R 0 "Control signal output_85_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x970 output_86 R 0x0 "Data signal of output_86" {{0 16 output_86 R 0 "Bit 15 to 0 of output_86"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x974 output_86_ctrl R 0x0 "Control signal of output_86" {{0 1 output_86_ap_vld R 0 "Control signal output_86_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x980 output_87 R 0x0 "Data signal of output_87" {{0 16 output_87 R 0 "Bit 15 to 0 of output_87"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x984 output_87_ctrl R 0x0 "Control signal of output_87" {{0 1 output_87_ap_vld R 0 "Control signal output_87_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x990 output_88 R 0x0 "Data signal of output_88" {{0 16 output_88 R 0 "Bit 15 to 0 of output_88"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x994 output_88_ctrl R 0x0 "Control signal of output_88" {{0 1 output_88_ap_vld R 0 "Control signal output_88_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9a0 output_89 R 0x0 "Data signal of output_89" {{0 16 output_89 R 0 "Bit 15 to 0 of output_89"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9a4 output_89_ctrl R 0x0 "Control signal of output_89" {{0 1 output_89_ap_vld R 0 "Control signal output_89_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9b0 output_90 R 0x0 "Data signal of output_90" {{0 16 output_90 R 0 "Bit 15 to 0 of output_90"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9b4 output_90_ctrl R 0x0 "Control signal of output_90" {{0 1 output_90_ap_vld R 0 "Control signal output_90_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9c0 output_91 R 0x0 "Data signal of output_91" {{0 16 output_91 R 0 "Bit 15 to 0 of output_91"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9c4 output_91_ctrl R 0x0 "Control signal of output_91" {{0 1 output_91_ap_vld R 0 "Control signal output_91_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9d0 output_92 R 0x0 "Data signal of output_92" {{0 16 output_92 R 0 "Bit 15 to 0 of output_92"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9d4 output_92_ctrl R 0x0 "Control signal of output_92" {{0 1 output_92_ap_vld R 0 "Control signal output_92_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9e0 output_93 R 0x0 "Data signal of output_93" {{0 16 output_93 R 0 "Bit 15 to 0 of output_93"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9e4 output_93_ctrl R 0x0 "Control signal of output_93" {{0 1 output_93_ap_vld R 0 "Control signal output_93_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0x9f0 output_94 R 0x0 "Data signal of output_94" {{0 16 output_94 R 0 "Bit 15 to 0 of output_94"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0x9f4 output_94_ctrl R 0x0 "Control signal of output_94" {{0 1 output_94_ap_vld R 0 "Control signal output_94_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa00 output_95 R 0x0 "Data signal of output_95" {{0 16 output_95 R 0 "Bit 15 to 0 of output_95"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa04 output_95_ctrl R 0x0 "Control signal of output_95" {{0 1 output_95_ap_vld R 0 "Control signal output_95_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa10 output_96 R 0x0 "Data signal of output_96" {{0 16 output_96 R 0 "Bit 15 to 0 of output_96"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa14 output_96_ctrl R 0x0 "Control signal of output_96" {{0 1 output_96_ap_vld R 0 "Control signal output_96_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa20 output_97 R 0x0 "Data signal of output_97" {{0 16 output_97 R 0 "Bit 15 to 0 of output_97"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa24 output_97_ctrl R 0x0 "Control signal of output_97" {{0 1 output_97_ap_vld R 0 "Control signal output_97_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa30 output_98 R 0x0 "Data signal of output_98" {{0 16 output_98 R 0 "Bit 15 to 0 of output_98"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa34 output_98_ctrl R 0x0 "Control signal of output_98" {{0 1 output_98_ap_vld R 0 "Control signal output_98_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa40 output_99 R 0x0 "Data signal of output_99" {{0 16 output_99 R 0 "Bit 15 to 0 of output_99"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa44 output_99_ctrl R 0x0 "Control signal of output_99" {{0 1 output_99_ap_vld R 0 "Control signal output_99_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa50 output_100 R 0x0 "Data signal of output_100" {{0 16 output_100 R 0 "Bit 15 to 0 of output_100"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa54 output_100_ctrl R 0x0 "Control signal of output_100" {{0 1 output_100_ap_vld R 0 "Control signal output_100_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa60 output_101 R 0x0 "Data signal of output_101" {{0 16 output_101 R 0 "Bit 15 to 0 of output_101"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa64 output_101_ctrl R 0x0 "Control signal of output_101" {{0 1 output_101_ap_vld R 0 "Control signal output_101_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa70 output_102 R 0x0 "Data signal of output_102" {{0 16 output_102 R 0 "Bit 15 to 0 of output_102"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa74 output_102_ctrl R 0x0 "Control signal of output_102" {{0 1 output_102_ap_vld R 0 "Control signal output_102_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa80 output_103 R 0x0 "Data signal of output_103" {{0 16 output_103 R 0 "Bit 15 to 0 of output_103"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa84 output_103_ctrl R 0x0 "Control signal of output_103" {{0 1 output_103_ap_vld R 0 "Control signal output_103_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xa90 output_104 R 0x0 "Data signal of output_104" {{0 16 output_104 R 0 "Bit 15 to 0 of output_104"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xa94 output_104_ctrl R 0x0 "Control signal of output_104" {{0 1 output_104_ap_vld R 0 "Control signal output_104_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xaa0 output_105 R 0x0 "Data signal of output_105" {{0 16 output_105 R 0 "Bit 15 to 0 of output_105"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xaa4 output_105_ctrl R 0x0 "Control signal of output_105" {{0 1 output_105_ap_vld R 0 "Control signal output_105_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xab0 output_106 R 0x0 "Data signal of output_106" {{0 16 output_106 R 0 "Bit 15 to 0 of output_106"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xab4 output_106_ctrl R 0x0 "Control signal of output_106" {{0 1 output_106_ap_vld R 0 "Control signal output_106_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xac0 output_107 R 0x0 "Data signal of output_107" {{0 16 output_107 R 0 "Bit 15 to 0 of output_107"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xac4 output_107_ctrl R 0x0 "Control signal of output_107" {{0 1 output_107_ap_vld R 0 "Control signal output_107_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xad0 output_108 R 0x0 "Data signal of output_108" {{0 16 output_108 R 0 "Bit 15 to 0 of output_108"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xad4 output_108_ctrl R 0x0 "Control signal of output_108" {{0 1 output_108_ap_vld R 0 "Control signal output_108_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xae0 output_109 R 0x0 "Data signal of output_109" {{0 16 output_109 R 0 "Bit 15 to 0 of output_109"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xae4 output_109_ctrl R 0x0 "Control signal of output_109" {{0 1 output_109_ap_vld R 0 "Control signal output_109_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xaf0 output_110 R 0x0 "Data signal of output_110" {{0 16 output_110 R 0 "Bit 15 to 0 of output_110"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xaf4 output_110_ctrl R 0x0 "Control signal of output_110" {{0 1 output_110_ap_vld R 0 "Control signal output_110_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb00 output_111 R 0x0 "Data signal of output_111" {{0 16 output_111 R 0 "Bit 15 to 0 of output_111"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb04 output_111_ctrl R 0x0 "Control signal of output_111" {{0 1 output_111_ap_vld R 0 "Control signal output_111_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb10 output_112 R 0x0 "Data signal of output_112" {{0 16 output_112 R 0 "Bit 15 to 0 of output_112"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb14 output_112_ctrl R 0x0 "Control signal of output_112" {{0 1 output_112_ap_vld R 0 "Control signal output_112_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb20 output_113 R 0x0 "Data signal of output_113" {{0 16 output_113 R 0 "Bit 15 to 0 of output_113"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb24 output_113_ctrl R 0x0 "Control signal of output_113" {{0 1 output_113_ap_vld R 0 "Control signal output_113_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb30 output_114 R 0x0 "Data signal of output_114" {{0 16 output_114 R 0 "Bit 15 to 0 of output_114"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb34 output_114_ctrl R 0x0 "Control signal of output_114" {{0 1 output_114_ap_vld R 0 "Control signal output_114_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb40 output_115 R 0x0 "Data signal of output_115" {{0 16 output_115 R 0 "Bit 15 to 0 of output_115"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb44 output_115_ctrl R 0x0 "Control signal of output_115" {{0 1 output_115_ap_vld R 0 "Control signal output_115_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb50 output_116 R 0x0 "Data signal of output_116" {{0 16 output_116 R 0 "Bit 15 to 0 of output_116"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb54 output_116_ctrl R 0x0 "Control signal of output_116" {{0 1 output_116_ap_vld R 0 "Control signal output_116_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb60 output_117 R 0x0 "Data signal of output_117" {{0 16 output_117 R 0 "Bit 15 to 0 of output_117"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb64 output_117_ctrl R 0x0 "Control signal of output_117" {{0 1 output_117_ap_vld R 0 "Control signal output_117_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb70 output_118 R 0x0 "Data signal of output_118" {{0 16 output_118 R 0 "Bit 15 to 0 of output_118"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb74 output_118_ctrl R 0x0 "Control signal of output_118" {{0 1 output_118_ap_vld R 0 "Control signal output_118_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb80 output_119 R 0x0 "Data signal of output_119" {{0 16 output_119 R 0 "Bit 15 to 0 of output_119"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb84 output_119_ctrl R 0x0 "Control signal of output_119" {{0 1 output_119_ap_vld R 0 "Control signal output_119_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xb90 output_120 R 0x0 "Data signal of output_120" {{0 16 output_120 R 0 "Bit 15 to 0 of output_120"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xb94 output_120_ctrl R 0x0 "Control signal of output_120" {{0 1 output_120_ap_vld R 0 "Control signal output_120_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xba0 output_121 R 0x0 "Data signal of output_121" {{0 16 output_121 R 0 "Bit 15 to 0 of output_121"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xba4 output_121_ctrl R 0x0 "Control signal of output_121" {{0 1 output_121_ap_vld R 0 "Control signal output_121_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xbb0 output_122 R 0x0 "Data signal of output_122" {{0 16 output_122 R 0 "Bit 15 to 0 of output_122"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xbb4 output_122_ctrl R 0x0 "Control signal of output_122" {{0 1 output_122_ap_vld R 0 "Control signal output_122_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xbc0 output_123 R 0x0 "Data signal of output_123" {{0 16 output_123 R 0 "Bit 15 to 0 of output_123"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xbc4 output_123_ctrl R 0x0 "Control signal of output_123" {{0 1 output_123_ap_vld R 0 "Control signal output_123_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xbd0 output_124 R 0x0 "Data signal of output_124" {{0 16 output_124 R 0 "Bit 15 to 0 of output_124"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xbd4 output_124_ctrl R 0x0 "Control signal of output_124" {{0 1 output_124_ap_vld R 0 "Control signal output_124_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xbe0 output_125 R 0x0 "Data signal of output_125" {{0 16 output_125 R 0 "Bit 15 to 0 of output_125"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xbe4 output_125_ctrl R 0x0 "Control signal of output_125" {{0 1 output_125_ap_vld R 0 "Control signal output_125_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xbf0 output_126 R 0x0 "Data signal of output_126" {{0 16 output_126 R 0 "Bit 15 to 0 of output_126"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xbf4 output_126_ctrl R 0x0 "Control signal of output_126" {{0 1 output_126_ap_vld R 0 "Control signal output_126_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xc00 output_127 R 0x0 "Data signal of output_127" {{0 16 output_127 R 0 "Bit 15 to 0 of output_127"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xc04 output_127_ctrl R 0x0 "Control signal of output_127" {{0 1 output_127_ap_vld R 0 "Control signal output_127_ap_vld"} {1 31 RESERVED R 0 "Reserved.  0s on read."}}} {0xc10 numOfOutputNeurons W 0x0 "Data signal of numOfOutputNeurons" {{0 16 numOfOutputNeurons W 0 "Bit 15 to 0 of numOfOutputNeurons"} {16 16 RESERVED R 0 "Reserved.  0s on read."}}} {0xc18 activation W 0x0 "Data signal of activation" {{0 8 activation W 0 "Bit 7 to 0 of activation"} {8 24 RESERVED R 0 "Reserved.  0s on read."}}}}
        memories "bias {base_address 3328 range 256} weights_0 {base_address 3584 range 256} weights_1 {base_address 3840 range 256} weights_2 {base_address 4096 range 256} weights_3 {base_address 4352 range 256} weights_4 {base_address 4608 range 256} weights_5 {base_address 4864 range 256} weights_6 {base_address 5120 range 256} weights_7 {base_address 5376 range 256} weights_8 {base_address 5632 range 256} weights_9 {base_address 5888 range 256} weights_10 {base_address 6144 range 256} weights_11 {base_address 6400 range 256} weights_12 {base_address 6656 range 256} weights_13 {base_address 6912 range 256} weights_14 {base_address 7168 range 256} weights_15 {base_address 7424 range 256} weights_16 {base_address 7680 range 256} weights_17 {base_address 7936 range 256} weights_18 {base_address 8192 range 256} weights_19 {base_address 8448 range 256} weights_20 {base_address 8704 range 256} weights_21 {base_address 8960 range 256} weights_22 {base_address 9216 range 256} weights_23 {base_address 9472 range 256} weights_24 {base_address 9728 range 256} weights_25 {base_address 9984 range 256} weights_26 {base_address 10240 range 256} weights_27 {base_address 10496 range 256} weights_28 {base_address 10752 range 256} weights_29 {base_address 11008 range 256} weights_30 {base_address 11264 range 256} weights_31 {base_address 11520 range 256} weights_32 {base_address 11776 range 256} weights_33 {base_address 12032 range 256} weights_34 {base_address 12288 range 256} weights_35 {base_address 12544 range 256} weights_36 {base_address 12800 range 256} weights_37 {base_address 13056 range 256} weights_38 {base_address 13312 range 256} weights_39 {base_address 13568 range 256} weights_40 {base_address 13824 range 256} weights_41 {base_address 14080 range 256} weights_42 {base_address 14336 range 256} weights_43 {base_address 14592 range 256} weights_44 {base_address 14848 range 256} weights_45 {base_address 15104 range 256} weights_46 {base_address 15360 range 256} weights_47 {base_address 15616 range 256} weights_48 {base_address 15872 range 256} weights_49 {base_address 16128 range 256} weights_50 {base_address 16384 range 256} weights_51 {base_address 16640 range 256} weights_52 {base_address 16896 range 256} weights_53 {base_address 17152 range 256} weights_54 {base_address 17408 range 256} weights_55 {base_address 17664 range 256} weights_56 {base_address 17920 range 256} weights_57 {base_address 18176 range 256} weights_58 {base_address 18432 range 256} weights_59 {base_address 18688 range 256} weights_60 {base_address 18944 range 256} weights_61 {base_address 19200 range 256} weights_62 {base_address 19456 range 256} weights_63 {base_address 19712 range 256} weights_64 {base_address 19968 range 256} weights_65 {base_address 20224 range 256} weights_66 {base_address 20480 range 256} weights_67 {base_address 20736 range 256} weights_68 {base_address 20992 range 256} weights_69 {base_address 21248 range 256} weights_70 {base_address 21504 range 256} weights_71 {base_address 21760 range 256} weights_72 {base_address 22016 range 256} weights_73 {base_address 22272 range 256} weights_74 {base_address 22528 range 256} weights_75 {base_address 22784 range 256} weights_76 {base_address 23040 range 256} weights_77 {base_address 23296 range 256} weights_78 {base_address 23552 range 256} weights_79 {base_address 23808 range 256} weights_80 {base_address 24064 range 256} weights_81 {base_address 24320 range 256} weights_82 {base_address 24576 range 256} weights_83 {base_address 24832 range 256} weights_84 {base_address 25088 range 256} weights_85 {base_address 25344 range 256} weights_86 {base_address 25600 range 256} weights_87 {base_address 25856 range 256} weights_88 {base_address 26112 range 256} weights_89 {base_address 26368 range 256} weights_90 {base_address 26624 range 256} weights_91 {base_address 26880 range 256} weights_92 {base_address 27136 range 256} weights_93 {base_address 27392 range 256} weights_94 {base_address 27648 range 256} weights_95 {base_address 27904 range 256} weights_96 {base_address 28160 range 256} weights_97 {base_address 28416 range 256} weights_98 {base_address 28672 range 256} weights_99 {base_address 28928 range 256} weights_100 {base_address 29184 range 256} weights_101 {base_address 29440 range 256} weights_102 {base_address 29696 range 256} weights_103 {base_address 29952 range 256} weights_104 {base_address 30208 range 256} weights_105 {base_address 30464 range 256} weights_106 {base_address 30720 range 256} weights_107 {base_address 30976 range 256} weights_108 {base_address 31232 range 256} weights_109 {base_address 31488 range 256} weights_110 {base_address 31744 range 256} weights_111 {base_address 32000 range 256} weights_112 {base_address 32256 range 256} weights_113 {base_address 32512 range 256} weights_114 {base_address 32768 range 256} weights_115 {base_address 33024 range 256} weights_116 {base_address 33280 range 256} weights_117 {base_address 33536 range 256} weights_118 {base_address 33792 range 256} weights_119 {base_address 34048 range 256} weights_120 {base_address 34304 range 256} weights_121 {base_address 34560 range 256} weights_122 {base_address 34816 range 256} weights_123 {base_address 35072 range 256} weights_124 {base_address 35328 range 256} weights_125 {base_address 35584 range 256} weights_126 {base_address 35840 range 256} weights_127 {base_address 36096 range 256}"
        ctype {
            AWVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            AWREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            WVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            WREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            BRESP {
                Type "integer unsigned"
                Width "2"
                Bits "2"
            }
            ARVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            ARREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RVALID {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RREADY {
                Type "bool"
                Width "1"
                Bits "1"
            }
            RRESP {
                Type "integer unsigned"
                Width "2"
                Bits "2"
            }
            AWADDR {
                Type "integer unsigned"
                Width "16"
                Bits "16"
            }
            WDATA {
                Type "null"
                Width "32"
                Bits "32"
            }
            WSTRB {
                Type "integer unsigned"
                Width "4"
                Bits "4"
            }
            ARADDR {
                Type "integer unsigned"
                Width "16"
                Bits "16"
            }
            RDATA {
                Type "null"
                Width "32"
                Bits "32"
            }
        }
        data_width "32"
    }
    ap_clk {
        type "clock"
        ctype {
            CLK {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
        buses "s_axi_control"
        reset "ap_rst_n"
    }
    ap_rst_n {
        type "reset"
        polarity "ACTIVE_LOW"
        ctype {
            RST {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
    }
    interrupt {
        type "interrupt"
        ctype {
            INTERRUPT {
                Type "bool"
                Width "1"
                Bits "1"
            }
        }
    }
}

set vivado_ver [version -short]
if {[regexp -nocase {2015\.1.*} $vivado_ver match]} {
    set user_param_type "std_logic_vector"
} else {
    set user_param_type "integer"
}

######################## Helper functions #################
variable user_parameter_order 1

proc add_port {core name dir width param args} {
    # {{{
    catch {ipx::remove_port $name $core}
    set current_port [ipx::add_port $name $core]
    set_property direction $dir $current_port
    if {$width == ""} {
        # std_logic
        set_property type_name "std_logic" $current_port
        set_property is_vector "false" $current_port
    } else {
        # std_logic_vector
        # width should be an integer
        set_property size_left [expr $width - 1] $current_port
        if {$param != ""} {
            if {[string range $param end-1 end] == "/8"} {
                # for strobe
                set param [string range $param 0 end-2]
                set_property size_left_dependency "((spirit:decode(id('MODELPARAM_VALUE.$param')) div 8) - 1)" $current_port
            } else {
                set_property size_left_dependency "(spirit:decode(id('MODELPARAM_VALUE.$param')) - 1)" $current_port
            }
            set_property size_left_resolve_type "dependent" $current_port
        } else {
            set_property size_left_resolve_type "immediate" $current_port
        }
        set_property size_left_format_type "long" $current_port
        set_property size_right 0 $current_port
        set_property size_right_resolve_type "immediate" $current_port
        set_property size_right_format_type "long" $current_port
        set_property type_name "std_logic_vector" $current_port
        set_property is_vector "true" $current_port
    }

    foreach {k v} $args {
        set_property $k $v $current_port
    }

    return $current_port
    # }}}
}

proc add_hdl_parameter {core name type value format resolve_type args} {
    # {{{
    set current_hdl_parameter [ipx::add_hdl_parameter $name $core]
    set_property data_type $type $current_hdl_parameter
    set_property value $value $current_hdl_parameter
    set_property value_format $format $current_hdl_parameter
    set_property value_resolve_type $resolve_type $current_hdl_parameter
    foreach {k v} $args {
        set_property $k $v $current_hdl_parameter
    }

    return $current_hdl_parameter
    # }}}
}

proc add_bus_interface {core name type mode {preferred_usage_value "ALL"} {has_dependant_on "0"} {offset_slave_name "s_axi_AXILiteS"} {master_addrwidth "32"}} {
    # {{{
    set properties ""
    switch -- $type {
        axi4 -
        axi4lite {
            dict set properties bus_type_vlnv "xilinx.com:interface:aximm:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:aximm_rtl:1.0"
            dict set properties endianness "little"
            dict set properties interface_mode $mode
            if {$mode == "master"} {
                set ::AddressSpace [ipx::add_address_space Data_$name $core]
                if {$master_addrwidth == "64"} {
                    set_property range 16E $::AddressSpace
                    set_property width 64 $::AddressSpace
                } else {
                    set_property range 4G $::AddressSpace
                    set_property width 32 $::AddressSpace
                }
                if {$has_dependant_on == "1"} {
                   set current_addrspace_param [ipx::add_address_space_parameter DEPENDENT_ON $::AddressSpace]
                   set_property value $offset_slave_name $current_addrspace_param
                }
                set current_addrspace_param [ipx::add_address_space_parameter PREFERRED_USAGE $::AddressSpace]
                set_property value $preferred_usage_value $current_addrspace_param
                dict set properties master_address_space_ref Data_$name
            }
            if {$mode == "slave"} {
                set current_memory_map [ipx::add_memory_map $name $core]
                set current_address_block [ipx::add_address_block Reg $current_memory_map]
                set_property width "32" $current_address_block
                set_property access "read-write" $current_address_block
                set_property usage "register" $current_address_block
                set_property base_address "0" $current_address_block
                set_property base_address_format "long" $current_address_block
                set_property base_address_resolve_type "immediate" $current_address_block
                set_property range "65536" $current_address_block
                set_property range_format "long" $current_address_block
                set_property range_resolve_type "generated" $current_address_block
                set current_parameter [ipx::add_address_block_parameter ${name}_base_addr $current_address_block]
                set_property name OFFSET_BASE_PARAM $current_parameter
                set_property value C_[string toupper $name]_BASEADDR $current_parameter
                set current_parameter [ipx::add_address_block_parameter ${name}_high_addr $current_address_block]
                set_property name OFFSET_HIGH_PARAM $current_parameter
                set_property value C_[string toupper $name]_HIGHADDR $current_parameter
                dict set properties slave_memory_map_ref $name
            }
        }
        axi4stream {
            dict set properties bus_type_vlnv "xilinx.com:interface:axis:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:axis_rtl:1.0"
            dict set properties endianness "little"
            dict set properties interface_mode $mode
        }
        bram {
            dict set properties bus_type_vlnv "xilinx.com:interface:bram:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:bram_rtl:1.0"
            dict set properties interface_mode $mode
        }
        fifo_read {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_fifo_read:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_fifo_read_rtl:1.0"
            dict set properties interface_mode $mode
        }
        fifo_write {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_fifo_write:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_fifo_write_rtl:1.0"
            dict set properties interface_mode $mode
        }
        ap_ctrl {
            dict set properties bus_type_vlnv "xilinx.com:interface:acc_handshake:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:interface:acc_handshake_rtl:1.0"
            dict set properties interface_mode $mode
        }
        clock {
            dict set properties bus_type_vlnv "xilinx.com:signal:clock:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:clock_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        reset {
            dict set properties bus_type_vlnv "xilinx.com:signal:reset:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:reset_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        clockenable {
            dict set properties bus_type_vlnv "xilinx.com:signal:clockenable:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:clockenable_rtl:1.0"
            dict set properties interface_mode "slave"
        }
        interrupt {
            dict set properties bus_type_vlnv "xilinx.com:signal:interrupt:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:interrupt_rtl:1.0"
            dict set properties interface_mode "master"
        }
        data {
            dict set properties bus_type_vlnv "xilinx.com:signal:data:1.0"
            dict set properties abstraction_type_vlnv "xilinx.com:signal:data_rtl:1.0"
            dict set properties interface_mode $mode
        }
    }

    set current_bus_interface [ipx::add_bus_interface $name $core]
    dict for {k v} $properties {
        set_property $k $v $current_bus_interface
    }

    return $current_bus_interface
    # }}}
}

proc add_port_map {bus name logical physical} {
    # {{{
    set current_port_map [ipx::add_port_map $name $bus]
    set_property logical_name $logical $current_port_map
    set_property physical_name $physical $current_port_map

    return $current_port_map
    # }}}
}

proc add_bus_parameter {bus name value {resolve_type ""}} {
    # {{{
    if {$resolve_type == ""} {
        set resolve_type "immediate"
    }

    set current_bus_parameter [ipx::add_bus_parameter $name $bus]
    set_property value $value $current_bus_parameter
    set_property value_resolve_type $resolve_type $current_bus_parameter

    return $current_bus_parameter
    # }}}
}

proc add_user_parameter {core name display_name value format resolve_type args} {
    # {{{
    upvar user_parameter_order order
    incr order
    
    set current_user_parameter [ipx::add_user_parameter $name $core]
    set_property order $order $current_user_parameter
    set_property value $value $current_user_parameter
    set_property display_name $display_name $current_user_parameter
    set_property value_format $format $current_user_parameter
    set_property value_resolve_type $resolve_type $current_user_parameter
    foreach {k v} $args {
        set_property $k $v $current_user_parameter
    }

    return $current_user_parameter
    # }}}
}

proc create_datatype { ctype {bitoffset 0} {is_data 0}} {
    # {{{
    dict with ctype {}

    switch -- [lindex $Type 0] {
        integer {
            # integer
            if {[lindex $Type 1] == "signed"} {
                set signed true
            } else {
                set signed false
            }
            if {$is_data} {
               return [iptypes::datatype::new -type integer -bitwidth $Bits -bitoffset $bitoffset -signed $signed]
            } else {
               return [iptypes::datatype::new -type integer -bitwidth $Width -bitoffset $bitoffset -signed $signed]
            }
        }

        real {
            lassign $Type type sub_type signed frac_width
            if {$sub_type == "fixed"} {
                # real - fixed
                if {$signed == "signed"} {
                    set signed true
                } else {
                    set signed false
                }
                return [iptypes::datatype::new -type real -bitwidth $Width -bitoffset $bitoffset -fixed \
                    -signed $signed -fractwidth $frac_width]
            } else {
                # real -float
                set sigwidth [expr ($Width == 64)? 53 : 24]
                return [iptypes::datatype::new -type real -bitwidth $Width -bitoffset $bitoffset -float -sigwidth $sigwidth]
            }
        }

        complex {
            dict with Element {}

            if {$Bits % 8 != 0} {
                set ::__warn_sub_field__ 1
            }

            switch -- [lindex $Type 0] {
                integer {
                    # integer
                    if {[lindex $Type 1] == "signed"} {
                        set signed true
                    } else {
                        set signed false
                    }
                    return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -integer -signed $signed]
                }

                real {
                    lassign $Type type sub_type signed frac_width
                    if {$sub_type == "fixed"} {
                        # real - fixed
                        if {$signed == "signed"} {
                            set signed true
                        } else {
                            set signed false
                        }
                        return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -real -fixed \
                            -signed $signed -fractwidth $frac_width]
                    } else {
                        # real -float
                        set sigwidth [expr ($Width == 64)? 53 : 24]
                        return [iptypes::datatype::new -type complex -bitwidth $Width -stride $Bits -bitoffset $bitoffset -real -float -sigwidth $sigwidth]
                    }
                }
            }
        }

        struct {
            set type [iptypes::datatype::new -type struct -bitoffset $bitoffset]

            set i 0
            dict for {field_name field_type} $Fields {
                iptypes::struct::new_field type -name $field_name -datatype [create_datatype $field_type $i]
                incr i [dict get $field_type Bits]
            }

            return $type
        }

        array {
            return [iptypes::datatype::new -type array_type -bitoffset $bitoffset -size $Dimension \
                -stride [dict get $Element Bits] -datatype [create_datatype $Element]]
        }

        null    -
        default {
            # null
            return [iptypes::datatype::new -bitwidth $Width -bitoffset $bitoffset]
        }
    }
    # }}}
}

proc add_bus_datatype {bus ctype {is_data 0}} {
    # {{{
    if {$::SupportDataType && $ctype != ""} {
        set layered_metadata ""
        dict for {key value} $ctype {
            dict set layered_metadata $iptypes::vlnv $key [create_datatype $value 0 $is_data]
        }
        add_bus_parameter $bus LAYERED_METADATA $layered_metadata generated
    }
    # }}}
}

proc set_dependent { name value obj } {
    # {{{
   # are there any operators in the value field?
   # No, set as immediate
   # Yes, set as xpath expr
   if { [string first < $value ] != -1 || \
        [string first > $value ] != -1 || \
        [string first - $value ] != -1 || \
        [string first + $value ] != -1 || \
        [string first / $value ] != -1 || \
        [string first * $value ] != -1 } {
     set_property ${name}_dependency [ ipx::get_xpath_expression $value [ipx::current_core] ] $obj
     set_property ${name}_format long $obj
   } else {
     set_property ${name} $value $obj
     set_property ${name}_format long $obj
   }
    # }}}
}

proc set_access { access obj {is_field 0}} {
    # {{{
  # read-only, write-only, read-write, writeOnce, read-writeOnce 
  if        { $access eq "RW" } {
             set_property access "read-write" $obj
             if {$is_field} {
               set_property modified_write_value modify $obj 
             }
  } elseif { $access eq "R" } {
             set_property access "read-only" $obj
             if {$is_field} {
               set_property read_action modify $obj 
             }
  } elseif { $access eq "W" } {
             set_property access "write-only" $obj
  } elseif { $access eq "WO" } {
             set_property access "writeOnce" $obj
  } elseif { $access eq "RWO" } {
             set_property access "read-writeOnce" $obj
  } elseif { $access eq "RTOW" } {
             set_property access "read-only" $obj 
             if {$is_field} {
               set_property modified_write_value oneToToggle $obj 
               set_property read_action modify $obj 
             }
  } else {
    puts "Unmatched access type \"$access\""
  }

    # }}}
}

proc add_registers {registers memory_map_name} {
    # {{{
    set memory_maps [ ipx::get_memory_maps -quiet -of_objects [ ipx::current_core ] ] 
    if { $memory_maps eq "" } {
      set slaves_axi [ ipx::get_bus_interfaces -filter { ABSTRACTION_TYPE_NAME==aximm_rtl && interface_mode==slave } -of_objects [ ipx::current_core ] ]
      set slave_axi [ lindex $slaves_axi 0  ] 
      set memory_map [ ipx::add_memory_map [ get_property name $slave_axi ] [ipx::current_core ] ]
      # and point back to this memory map
      set_property  slave_memory_map_ref [get_property name $memory_map ] $slave_axi 
    } else {
      foreach memory_map_item $memory_maps {
        set memory_map_item_name [get_property name $memory_map_item]
        if {$memory_map_name eq $memory_map_item_name} {
          set memory_map $memory_map_item
        }
      }
    }
    
    set address_blocks [ ipx::get_address_blocks -quiet -of_objects $memory_map ]
    if { $address_blocks eq "" } {
      set address_block [ ipx::add_address_block [get_property name $memory_map ] $memory_map ]
      set_property base_address 0 $address_block 
      set_property range 4096 $address_block 
      set_property width 8 $address_block 
    } else {
      set address_block [ lindex $address_blocks 0 ]
    }
    
    
    foreach reg $registers {
      set offset [ lindex $reg 0 ]
      set name   [ lindex $reg 1 ]
      set access [ lindex $reg 2 ]
      set reset_val [ lindex $reg 3 ]
      set descr  [ lindex $reg 4 ]
      set fields  [ lindex $reg 5 ]
    
    #puts "Register line: [join $reg \"]"
    
      # compare offset and address range, if offset > default address rang(64k), we should expand the address range
      set address_range  [get_property range $address_block]
      set offset_value [::math::bignum::tostr  [ ::math::bignum::fromstr $offset ] ]
      while {$address_range <= $offset_value} {
          set address_range [expr $address_range * 2]
      }
    
      set_property range $address_range $address_block
      set ipx_reg [ ipx::add_register $name $address_block ]
      set_property address_offset $offset_value $ipx_reg 
      set_property size 32 $ipx_reg 
      set_property size_format long $ipx_reg 
      set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $reset_val ] ] $ipx_reg 
      set_property reset_value_format long $ipx_reg 
      set_property description $descr $ipx_reg 
      set_property display_name $name $ipx_reg 
    
      # read-only, write-only, read-write, writeOnce, read-writeOnce 
      set_access $access $ipx_reg
    
      foreach field $fields {
    #puts "  field line: [join $field \"]"
         set offset [ lindex $field 0 ]
         set width [ lindex $field 1 ]
         set name [ lindex $field 2 ]
         set access [ lindex $field 3 ]
         set reset_value [ lindex $field 4 ]
         set description [ lindex $field 5 ]
    
         set ipx_field [ ipx::add_field $name $ipx_reg ]
         set_property bit_offset $offset $ipx_field
    
         set_dependent bit_width $width $ipx_field
         set_access $access $ipx_field 1
    
         #  set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $offset ] ] $ipx_field 
         # set_property reset_value_format long $ipx_field 
         set_property description $description $ipx_field 
      }
    
    }

    # }}}
}

proc add_memories {memories memory_map_name} {
    # {{{
    set memory_maps [ ipx::get_memory_maps -quiet -of_objects [ ipx::current_core ] ] 
    if { $memory_maps eq "" } {
      set slaves_axi [ ipx::get_bus_interfaces -filter { ABSTRACTION_TYPE_NAME==aximm_rtl && interface_mode==slave } -of_objects [ ipx::current_core ] ]
      set slave_axi [ lindex $slaves_axi 0  ] 
      set memory_map [ ipx::add_memory_map [ get_property name $slave_axi ] [ipx::current_core ] ]
      # and point back to this memory map
      set_property  slave_memory_map_ref [get_property name $memory_map ] $slave_axi 
    } else {
      foreach memory_map_item $memory_maps {
        set memory_map_item_name [get_property name $memory_map_item]
        if {$memory_map_name eq $memory_map_item_name} {
          set memory_map $memory_map_item
        }
      }
    }

    set address_blocks [ ipx::get_address_blocks -quiet -of_objects $memory_map ]
    if { $address_blocks eq "" } {
      set address_block [ ipx::add_address_block [get_property name $memory_map ] $memory_map ]
      set_property base_address 0 $address_block 
      set_property range 4096 $address_block 
      set_property width 8 $address_block 
    } else {
      set address_block [ lindex $address_blocks 0 ]
    }
    
    
    dict for {array_name details} $memories {
      dict with details {}
      set offset $base_address
      set name   Memory_${array_name}
      set access RW
      set reset_val 0
      set descr  "Memory $array_name"
    
      # compare offset and address range, if offset > default address rang(64k), we should expand the address range
      set address_range  [get_property range $address_block]
      set offset_value [::math::bignum::tostr  [ ::math::bignum::fromstr $offset ] ]
      set address_range_tmp [expr $offset_value + $range ]
      while {$address_range < $address_range_tmp} {
          set address_range [expr $address_range * 2]
      }
    
      set_property range $address_range $address_block
      set ipx_reg [ ipx::add_register $name $address_block ]
      set_property address_offset $offset_value $ipx_reg 
      set_property size $range $ipx_reg 
      set_property size_format long $ipx_reg 
      set_property reset_value  [::math::bignum::tostr [ ::math::bignum::fromstr $reset_val ] ] $ipx_reg 
      set_property reset_value_format long $ipx_reg 
      set_property description $descr $ipx_reg 
      set_property display_name $name $ipx_reg 
    
      # read-only, write-only, read-write, writeOnce, read-writeOnce 
      set_access $access $ipx_reg
    }
    # }}}
}

proc getFiles {path} {
    # {{{
    set files ""
    foreach item [glob -nocomplain [file join $path *]] {
        if {[file isdir $item]} {
            set files [concat $files [getFiles $item]]
        } else {
            lappend files $item
        }
    }

    return [lsort $files]
    # }}}
}
###########################################################

## Enter IP directory
cd [file dir [info script]]

## Generate sub cores
set IPs ""
set IPFiles ""
if {$SubcoreFiles != ""} {
    set ipdir "hdl/ip"
    file delete -force $ipdir
    file mkdir $ipdir

    set prj "tmp"
    create_project -part $target_part -force $prj
    set_property target_language $target_lang [current_project]
    if {[regexp -nocase {2018\.4.*} $vivado_ver match]} {
        set_property coreContainer.alwaysCreateXCI 1 [current_project]
    }

    set COE_DIR ../../../..
    foreach ipfile $SubcoreFiles {
        set ipname [file root [file tail $ipfile]]
        #if {[string match *_ap_* $ipname]} {
        #    set ipname [string range $ipname 0 end-3]
        #}

        source $ipfile
        if {[regexp -nocase {2018\.4.*} $vivado_ver match]} {
            extract_files -force -base_dir "./${prj}srcs/sources_1/ip" [get_files -all -of [get_ips $ipname]]
            file copy -force ./${prj}.srcs/sources_1/ip/$ipname.xci ./${prj}srcs/sources_1/ip/$ipname/.
            set prj_root "${prj}srcs"
        } else {
            set prj_root "${prj}.*"
        }

        set rtlfiles [glob -nocomplain ${prj_root}/sources_1/ip/$ipname/synth/*]
        if { ![llength $rtlfiles] } { error "No RTL output found for subcore $ipname from $ipfile" }
        foreach rtl $rtlfiles {
            file copy $rtl $ipdir
        }

        set rtlfiles [glob -nocomplain ${prj_root}/sources_1/ip/$ipname/*.mif]
        foreach rtl $rtlfiles {
            file copy $rtl $ipdir
        }

        set xcifile [glob -nocomplain ${prj_root}/sources_1/ip/$ipname/$ipname.xci]
        if {![file isfile $xcifile]} {
            continue
        }

        set f [open $xcifile r]
        set s [read $f]
        close $f
        set pat {(?n)componentRef.*vendor="(.+)".*\s*.*library="(.+)".*\s*.*name="(.+)".*\s*.*version="(.+)".*\s*.*}
        if {[regexp $pat $s m vendor library name version]} {
            lappend IPs "$vendor:$library:$name:$version"
        }
    }

    close_project
    
    set IPs [lsort -u $IPs]
    set IPFiles [glob -nocomplain $ipdir/*]
}

## Basic info
set vivado_ver [version -short]
set core [ipx::create_core $Vendor $Library $IPName $Version]
set_property definition_source HLS [ipx::current_core]
set_property display_name $DisplayName $core
set_property core_revision $Revision $core
set_property description $Description $core
set_property taxonomy $Taxonomy $core
if { $AutoFamily ne "" } {
  set_property auto_family_support_level $AutoFamily $core
} else {
  set_property supported_families [list $Device Pre-Production] $core
}

if {$has_xpm_memory} {
  set_property xpm_libraries {XPM_MEMORY} $core
}
if {$sdx_kernel_type ne ""} {
  set_property -quiet sdx_kernel true $core
  set_property -quiet sdx_kernel_type $sdx_kernel_type $core
}
## Add verilog files
if {[llength $VerilogFiles] > 0} {
    # synthesis
    set group [ipx::add_file_group xilinx_verilogsynthesis $core]
    foreach f [concat $IPFiles $ConstraintFiles $VerilogFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".v" && $has_blackbox == "true"} {
            set_property type "systemVerilogSource" $current_file
        }
        if {[file ext $f] == ".dat" || [file ext $f] == ".mif"} {
            set_property type "mif" $current_file
        }
        if {[file ext $f] == ".xdc"} {
            if {[regexp -nocase {.*_ooc.xdc} $f]} {
                set_property used_in {out_of_context} $current_file
            } else {
                set_property used_in {synthesis implementation} $current_file
            }
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

    # behavioral simulation
    set group [ipx::add_file_group xilinx_verilogbehavioralsimulation $core]
    foreach f [concat $VerilogFiles $IPFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".v" && $has_blackbox == "true"} {
            set_property type "systemVerilogSource" $current_file
        }
        if {[file ext $f] == ".dat" || [file ext $f] == ".mif"} {
            set_property type "mif" $current_file
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

}

## Add vhdl files
if {[llength $VhdlFiles] > 0} {
    # synthesis
    set group [ipx::add_file_group xilinx_vhdlsynthesis $core]
    foreach f [concat $IPFiles $ConstraintFiles $VhdlFiles] {
        set current_file [ipx::add_file $f $group]
        if {[file ext $f] == ".xdc"} {
            if {[regexp -nocase {.*_ooc.xdc} $f]} {
                set_property used_in {out_of_context} $current_file
            } else {
                set_property used_in {synthesis implementation} $current_file
            }
        }
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

    # behavioral simulation
    set group [ipx::add_file_group xilinx_vhdlbehavioralsimulation $core]
    foreach f [concat $VhdlFiles $IPFiles] {
        ipx::add_file $f $group
    }
    set_property model_name $Top $group
    if {$IPs != ""} {
        set_property component_subcores $IPs $group
    }

}

## Software Drivers Files
if {[llength $SWDriverFiles] > 0} {
    set current_file_group [ipx::add_file_group xilinx_softwaredriver $core]
    foreach f $SWDriverFiles {
        set current_file [ipx::add_file $f $current_file_group]
        if {[file ext $f] == ".mdd"} {
            set_property type {driver_mdd} $current_file
        } elseif {[file ext $f] == ".tcl"} {
            set_property type {driver_tcl} $current_file
        } else {
            set_property type {driver_src} $current_file
        }
    }
}

## Add document files
if {[llength $DocumentFiles] > 0} {
    set group [ipx::add_file_group xilinx_documentation $core]
    foreach f $DocumentFiles {
        ipx::add_file $f $group
    }
}

## Add misc files
if {[llength $MiscFiles] > 0} {
    set group [ipx::add_file_group xilinx_miscfiles $core]
    foreach f $MiscFiles {
        ipx::add_file $f $group
    }
}

## BD files
if {[llength $BDFiles] > 0} {
    set group [ipx::add_file_group xilinx_block_diagram $core]
    foreach f $BDFiles {
        ipx::add_file $f $group
    }
}

## Import ports
ipx::add_ports_from_hdl \
    -top_level_hdl_file hdl/vhdl/$Top.vhd \
    -top_module_name $Top \
    -quiet \
    $core

## Interfaces
foreach interface_name [mysort [dict keys $Interfaces]] {
    set interface_detail [dict get $Interfaces $interface_name]
    set ctype ""
    dict with interface_detail {}
    switch -nocase -- $type {
        axi4lite {
            # {{{
            ## direction
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## address width
            if {$mode == "master"} {
                set addr_bits 32
            } else {
               set addr_bits [dict get $port_width AWADDR]
            }

            ## rtl ports
            set rtl_ports [list \
                [list AWADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list AWVALID $dir0 "" ""] \
                [list AWREADY $dir1 "" ""] \
                [list WDATA   $dir0 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list WSTRB   $dir0 4  "${param_prefix}_DATA_WIDTH/8"] \
                [list WVALID  $dir0 "" ""] \
                [list WREADY  $dir1 "" ""] \
                [list BRESP   $dir1 2  ""] \
                [list BVALID  $dir1 "" ""] \
                [list BREADY  $dir0 "" ""] \
                [list ARADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list ARVALID $dir0 "" ""] \
                [list ARREADY $dir1 "" ""] \
                [list RDATA   $dir1 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list RRESP   $dir1 2  ""] \
                [list RVALID  $dir1 "" ""] \
                [list RREADY  $dir0 "" ""] \
            ]

            ## rtl parameters
            set rtl_parameters [list \
                [list ADDR_WIDTH "integer" $addr_bits "long" "generated"] \
                [list DATA_WIDTH "integer" $data_width "long" "immediate"] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list ADDR_WIDTH $addr_bits] \
                [list DATA_WIDTH $data_width] \
                [list PROTOCOL AXI4LITE] \
                [list READ_WRITE_MODE READ_WRITE] \
            ]

            ## axi4
            set current_bus_interface [add_bus_interface $core $interface_name axi4lite $mode]

            ## ports
            foreach rtl_port [mysort $rtl_ports] {
                lassign $rtl_port port_name port_dir port_width port_param
                add_port $core ${port_prefix}_$port_name $port_dir $port_width $port_param
            }

            ## rtl parameters
            foreach rtl_parameter [mysort $rtl_parameters] {
                set pargs [lassign $rtl_parameter pname ptype pvalue pformat presolve_type]
                eval add_hdl_parameter \$core \${param_prefix}_\$pname \$ptype \$pvalue \$pformat \$presolve_type $pargs
            }

            ## bus parameters
            foreach bus_parameter [mysort $bus_parameters] {
                lassign $bus_parameter pname pvalue
                add_bus_parameter $current_bus_interface $pname $pvalue
            }

            # port map
            foreach rtl_port [mysort $rtl_ports] {
                set port_name [lindex $rtl_port 0]
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype

            # add registers
            if {[info exists registers] && $registers!=""} {
               add_registers $registers $interface_name
            }

            # add memories
            if {[info exists memories] && $memories!=""} {
               add_memories $memories $interface_name
            }
            # }}}
        }

        axi4stream {
            # {{{
            ## ports
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## bus parameters
            set bus_parameters ""


            if {[dict exists $ports TDATA]} {
                lappend bus_parameters [list TDATA_NUM_BYTES [expr [dict get $ports TDATA] / 8]]
            }

            if {[dict exists $ports TDEST]} {
                lappend bus_parameters [list TDEST_WIDTH [dict get $ports TDEST]]
            }

            if {[dict exists $ports TID]} {
                lappend bus_parameters [list TID_WIDTH [dict get $ports TID]]
            }

            if {[dict exists $ports TUSER]} {
                lappend bus_parameters [list TUSER_WIDTH [dict get $ports TUSER]]
            } else {
                lappend bus_parameters [list TUSER_WIDTH 0]
            }

            set layered_metadata ""
            if {$SupportDataType && [dict exists $ctype TDATA]} {
                set ::__warn_sub_field__ 0
                dict set layered_metadata $iptypes::vlnv TDATA [create_datatype [dict get $ctype TDATA]]
                if {$::__warn_sub_field__} {
                    puts "TDATA of AXI4-Stream interface '$interface_name' contains sub-fields not aligned to byte boundaries. The resulting layout may not be compatible with the connecting interface."
                }
                if {[dict exists $ctype TDATA Name]} {
                    dict set layered_metadata $iptypes::vlnv TDATA datatype name value [dict get $ctype TDATA Name]
                }
            }
            if {$SupportDataType && [dict exists $ctype TUSER]} {
                set ::__warn_sub_field__ 0
                dict set layered_metadata $iptypes::vlnv TUSER [create_datatype [dict get $ctype TUSER]]
                if {$::__warn_sub_field__} {
                    puts "TUSER of AXI4-Stream interface '$interface_name' contains sub-fields not aligned to byte boundaries. The resulting layout may not be compatible with the connecting interface."
                }
            }
            lappend bus_parameters [list LAYERED_METADATA $layered_metadata generated]

            # tvalid
            add_port $core ${port_prefix}_TVALID $dir0 "" ""

            # tready
            if {$has_tready} {
                add_port $core ${port_prefix}_TREADY $dir1 "" ""
            }

            # other ports
            set tieoff {TUSER 0 TDEST 0 TID 0 TLAST 0 TKEEP 1 TSTRB 1}
            set port_names [mysort [dict keys $ports]]
            foreach port_name $port_names {
                set port_width [dict get $ports $port_name]
                if {$dir0 == "in" && [dict exists $tieoff $port_name]} {
                    set driver_value [expr [dict get $tieoff $port_name] * (2 ** $port_width - 1)]
                    add_port $core ${port_prefix}_${port_name} $dir0 $port_width "" endianness little driver_value $driver_value
                } else {
                    add_port $core ${port_prefix}_${port_name} $dir0 $port_width "" endianness little
                }
            }

            ## create bus interface
            set current_bus_interface [add_bus_interface $core $interface_name axi4stream $mode]

            ## port map
            # tvalid
            add_port_map $current_bus_interface "TVALID" "TVALID" ${port_prefix}_TVALID

            # tready
            if {$has_tready} {
                add_port_map $current_bus_interface "TREADY" "TREADY" ${port_prefix}_TREADY
            }

            # other ports
            dict for {port_name port_width} $ports {
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }

            ## bus parameters
            foreach bus_parameter [mysort $bus_parameters] {
                lassign $bus_parameter pname pvalue presolve_type
                add_bus_parameter $current_bus_interface $pname $pvalue $presolve_type
            }

            # }}}
        }

        native_axim {
            # {{{
            ## direction
            if {$mode == "master"} {
                set dir0 "out"
                set dir1 "in"
            } else {
                set dir0 "in"
                set dir1 "out"
            }

            ## address width
            if {$mode == "master"} {
                set addr_bits [dict get $port_width AWADDR]
                set wstrb_bits [dict get $port_width WSTRB]
            }

            ## rtl ports
            set rtl_ports [list \
                [list AWID    $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list AWADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list AWLEN   $dir0 8  ""] \
                [list AWSIZE  $dir0 3  ""] \
                [list AWBURST $dir0 2  ""] \
                [list AWLOCK  $dir0 2  ""] \
                [list AWREGION $dir0 4  ""] \
                [list AWCACHE $dir0 4  ""] \
                [list AWPROT  $dir0 3  ""] \
                [list AWQOS   $dir0 4  ""] \
                [list AWUSER  $dir0 1  "${param_prefix}_AWUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list AWVALID $dir0 "" ""] \
                [list AWREADY $dir1 "" ""] \
                [list WID     $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list WDATA   $dir0 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list WSTRB   $dir0 $wstrb_bits  "${param_prefix}_DATA_WIDTH/8"] \
                [list WLAST   $dir0 "" ""] \
                [list WUSER   $dir0 1  "${param_prefix}_WUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list WVALID  $dir0 "" ""] \
                [list WREADY  $dir1 "" ""] \
                [list BID     $dir1 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list BRESP   $dir1 2  ""] \
                [list BUSER   $dir1 1  "${param_prefix}_BUSER_WIDTH" \
                    driver_value {0} \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list BVALID  $dir1 "" ""] \
                [list BREADY  $dir0 "" ""] \
                [list ARID    $dir0 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list ARADDR  $dir0 $addr_bits "${param_prefix}_ADDR_WIDTH"] \
                [list ARLEN   $dir0 8  ""] \
                [list ARSIZE  $dir0 3  ""] \
                [list ARBURST $dir0 2  ""] \
                [list ARLOCK  $dir0 2  ""] \
                [list ARREGION $dir0 4  ""] \
                [list ARCACHE $dir0 4  ""] \
                [list ARPROT  $dir0 3  ""] \
                [list ARQOS   $dir0 4  ""] \
                [list ARUSER  $dir0 1  "${param_prefix}_ARUSER_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list ARVALID $dir0 "" ""] \
                [list ARREADY $dir1 "" ""] \
                [list RID     $dir1 1  "${param_prefix}_ID_WIDTH" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                ] \
                [list RDATA   $dir1 $data_width "${param_prefix}_DATA_WIDTH"] \
                [list RRESP   $dir1 2  ""] \
                [list RLAST   $dir1 "" ""] \
                [list RUSER   $dir1 1  "${param_prefix}_RUSER_WIDTH" \
                    driver_value {0} \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                ] \
                [list RVALID  $dir1 "" ""] \
                [list RREADY  $dir0 "" ""] \
            ]

            ## rtl parameters
            set rtl_parameters [list \
                [list ID_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list ADDR_WIDTH   "integer" $addr_bits "long" "immediate"] \
                [list DATA_WIDTH   "integer" $data_width "long" "generated"] \
                [list AWUSER_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list ARUSER_WIDTH "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list WUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list RUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list BUSER_WIDTH  "integer" 1  "long" "generated" \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list USER_VALUE      "$user_param_type" 0x00000000   "bitString" "generated" \
                    value_bit_string_length 32 \
                    enablement_presence optional \
                    enablement_resolve_type dependent \
                ] \
                [list PROT_VALUE      "$user_param_type" \"000\"  "bitString" "generated" \
                    value_bit_string_length 3 \
                ] \
                [list CACHE_VALUE     "$user_param_type" \"0011\" "bitString" "generated" \
                    value_bit_string_length 4 \
                ] \
            ]

            ## user parameters
            set user_parameters [list \
                [list ENABLE_ID_PORTS "Enable ID ports" "false" "bool" "user"] \
                [list ID_WIDTH "ID width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_ID_PORTS')) = 1)" \
                    value_validation_range_maximum 32 \
                    value_validation_range_minimum 1 \
                ] \
                [list DATA_WIDTH "Data width" $data_width "long" "user" \
                    value_validation_list {32:32 64:64 128:128 256:256 512:512 1024:1024} \
                ] \
                [list ENABLE_USER_PORTS "Enable USER ports" "false" "bool" "user"] \
                [list AWUSER_WIDTH "AWUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list WUSER_WIDTH "WUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list BUSER_WIDTH "BUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list ARUSER_WIDTH "ARUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list RUSER_WIDTH "RUSER width" 1 "long" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_validation_range_maximum 1024 \
                    value_validation_range_minimum 1 \
                ] \
                [list USER_VALUE "USER value" 0x00000000 "bitString" "user" \
                    enablement_presence optional \
                    enablement_dependency "(spirit:decode(id('PARAM_VALUE.${param_prefix}_ENABLE_USER_PORTS')) = 1)" \
                    value_bit_string_length 32 \
                ] \
                [list PROT_VALUE "PROT value" \"000\" "bitString" "user" \
                    value_bit_string_length 3 \
                ] \
                [list CACHE_VALUE "CACHE value" \"0011\" "bitString" "user" \
                    value_bit_string_length 4 \
                ] \
            ]


            set bus_parameters [list \
                [list ADDR_WIDTH $addr_bits] \
                [list MAX_BURST_LENGTH 256] \
                [list NUM_READ_OUTSTANDING $NUM_READ_OUTSTANDING] \
                [list NUM_WRITE_OUTSTANDING $NUM_WRITE_OUTSTANDING] \
                [list MAX_READ_BURST_LENGTH $MAX_READ_BURST_LENGTH] \
                [list MAX_WRITE_BURST_LENGTH $MAX_WRITE_BURST_LENGTH] \
                [list PROTOCOL AXI4] \
                [list READ_WRITE_MODE READ_WRITE] \
                [list HAS_BURST 0] \
                [list SUPPORTS_NARROW_BURST 0] \
            ]

            ## axi4
            set current_bus_interface [add_bus_interface $core $interface_name axi4 $mode $preferred_usage_value $has_dependant_on $offset_slave_name $addr_bits]

            ## rtl parameters
            foreach rtl_parameter [mysort $rtl_parameters] {
                set pargs [lassign $rtl_parameter pname ptype pvalue pformat presolve_type]
                eval add_hdl_parameter \$core \${param_prefix}_\$pname \$ptype \$pvalue \$pformat \$presolve_type $pargs
            }

            ## user parameters
            foreach user_parameter [mysort $user_parameters] {
                set pargs [lassign $user_parameter pname pdisplay_name pvalue pformat presolve_type]
                eval add_user_parameter \$core \${param_prefix}_\$pname \$pdisplay_name \$pvalue \$pformat \$presolve_type $pargs config_groups \[list 1 \"\$interface_name (AXI4 Master Interface)\"\]
            }

            ## bus parameters
            foreach bus_parameter [mysort $bus_parameters] {
                lassign $bus_parameter pname pvalue
                add_bus_parameter $current_bus_interface $pname $pvalue
            }

            ## ports
            foreach rtl_port [mysort $rtl_ports] {
                set port_args [lassign $rtl_port port_name port_dir port_width port_param]
                eval add_port \$core \${port_prefix}_\$port_name \$port_dir \$port_width \$port_param $port_args
            }

            # port map
            foreach rtl_port [mysort $rtl_ports] {
                set port_name [lindex $rtl_port 0]
                add_port_map $current_bus_interface $port_name $port_name ${port_prefix}_${port_name}
            }
            # }}}
        }

        bram {
            # {{{

            ## rtl ports
            set rtl_ports [list \
                [list Clk  CLK  out "" ""] \
                [list Rst  RST  out "" ""] \
                [list EN   EN   out "" ""] \
                [list WEN  WE   out [expr $mem_width / 8] ""] \
                [list Addr ADDR out 32 ""] \
                [list Dout DIN  out $mem_width ""] \
                [list Din  DOUT in  $mem_width ""] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list MEM_WIDTH $mem_width] \
                [list MEM_SIZE [expr $mem_width * $mem_depth / 8]] \
                [list MASTER_TYPE $master_type] \
            ]

            foreach mem_port $mem_ports {
                set suffix [string toupper $mem_port]
                ## interface
                set current_bus_interface [add_bus_interface $core ${interface_name}_PORT$suffix bram master]

                ## ports
                foreach rtl_port [mysort $rtl_ports] {
                    lassign $rtl_port port_name port_map port_dir port_width port_param
                    add_port $core ${port_prefix}_${port_name}_$suffix $port_dir $port_width $port_param
                }

                ## bus parameters
                foreach bus_parameter [mysort $bus_parameters] {
                    lassign $bus_parameter pname pvalue
                    add_bus_parameter $current_bus_interface $pname $pvalue
                }

                # port map
                foreach rtl_port [mysort $rtl_ports] {
                    lassign $rtl_port port_name port_map
                    add_port_map $current_bus_interface $port_map $port_map ${port_prefix}_${port_name}_$suffix
                }
            }
            # }}}
        }

        native_bram {
            # {{{

            ## rtl ports
            set rtl_ports [list \
                [list Clk  CLK  out "" ""] \
                [list Rst  RST  out "" ""] \
                [list EN   EN   out "" ""] \
                [list WEN  WE   out $we_width ""] \
                [list Addr ADDR out $addr_width ""] \
                [list Din  DIN  out $mem_width ""] \
                [list Dout DOUT in  $mem_width ""] \
            ]

            ## bus parameters
            set bus_parameters [list \
                [list MEM_WIDTH $mem_width] \
                [list MEM_SIZE [expr $mem_width * $mem_depth / 8]] \
                [list MASTER_TYPE $master_type] \
            ]

            foreach mem_port $mem_ports {
                set suffix [string toupper $mem_port]
                ## interface
                set current_bus_interface [add_bus_interface $core ${interface_name}_PORT$suffix bram master]

                ## ports
                foreach rtl_port [mysort $rtl_ports] {
                    lassign $rtl_port port_name port_map port_dir port_width port_param
                    add_port $core ${port_prefix}_${port_name}_$suffix $port_dir $port_width $port_param
                }

                ## bus parameters
                foreach bus_parameter [mysort $bus_parameters] {
                    lassign $bus_parameter pname pvalue
                    add_bus_parameter $current_bus_interface $pname $pvalue
                }

                # port map
                foreach rtl_port [mysort $rtl_ports] {
                    lassign $rtl_port port_name port_map
                    add_port_map $current_bus_interface $port_map $port_map ${port_prefix}_${port_name}_$suffix
                }

                # data type
                add_bus_datatype $current_bus_interface $ctype
            }
            # }}}
        }

        ap_fifo {
            # {{{
            if {$fifo_type == "read"} {
                set interface_type fifo_read
                set rtl_ports [list \
                    [list ${interface_name}_dout    RD_DATA in  $fifo_width] \
                    [list ${interface_name}_empty_n EMPTY_N in  ""] \
                    [list ${interface_name}_read    RD_EN   out ""] \
                ]
            } else {
                set interface_type fifo_write
                set rtl_ports [list \
                    [list ${interface_name}_din     WR_DATA out $fifo_width] \
                    [list ${interface_name}_full_n  FULL_N  in  ""] \
                    [list ${interface_name}_write   WR_EN   out ""] \
                ]
            }

            ## interface
            set current_bus_interface [add_bus_interface $core $interface_name $interface_type master]

            ## ports
            foreach rtl_port [mysort $rtl_ports] {
                lassign $rtl_port port_name port_map port_dir port_width
                add_port $core $port_name $port_dir $port_width ""
            }

            # port map
            foreach rtl_port [mysort $rtl_ports] {
                lassign $rtl_port port_name port_map
                add_port_map $current_bus_interface $port_map $port_map $port_name
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        ap_ctrl {
            # {{{
            set rtl_ports ""
            foreach port $ctrl_ports {
                switch -- $port {
                    ap_start {
                        lappend rtl_ports [list ap_start start in ""]
                    }
                    ap_ready {
                        lappend rtl_ports [list ap_ready ready out ""]
                    }
                    ap_done {
                        lappend rtl_ports [list ap_done done out ""]
                    }
                    ap_continue {
                        lappend rtl_ports [list ap_continue continue in ""]
                    }
                    ap_idle {
                        lappend rtl_ports [list ap_idle idle out ""]
                    }
                }
            }

            ## interface
            set current_bus_interface [add_bus_interface $core $interface_name ap_ctrl slave]

            ## ports
            foreach rtl_port [mysort $rtl_ports] {
                lassign $rtl_port port_name port_map port_dir port_width
                add_port $core $port_name $port_dir $port_width ""
            }

            # port map
            foreach rtl_port [mysort $rtl_ports] {
                lassign $rtl_port port_name port_map
                add_port_map $current_bus_interface $port_map $port_map $port_name
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        clock {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name clock slave]
            add_port_map $current_bus_interface CLK CLK $interface_name

            if {$buses != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_BUSIF [join $buses ":"]
            }

            # attach reset
            if {[info exists reset] && $reset != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_RESET [join $reset ":"]
            }

            # attach ce
            set result [dict filter $Interfaces script {name detail} {
                string equal [dict get $detail type] clockenable
            }]
            set port [lindex [dict keys $result] 0]
            if {$port != ""} {
                add_bus_parameter $current_bus_interface ASSOCIATED_CLKEN $port
            }

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        reset {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name reset slave]
            add_port_map $current_bus_interface RST RST $interface_name
            if { ![info exists polarity] } { set polarity ACTIVE_LOW }
            add_bus_parameter $current_bus_interface POLARITY $polarity

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        clockenable {
            # {{{
            add_port $core $interface_name in "" ""
            set current_bus_interface [add_bus_interface $core $interface_name clockenable slave]
            add_port_map $current_bus_interface CE CE $interface_name

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        interrupt {
            # {{{
            add_port $core $interface_name out "" ""
            set current_bus_interface [add_bus_interface $core $interface_name interrupt master]
            add_port_map $current_bus_interface Intr INTERRUPT $interface_name
            add_bus_parameter $current_bus_interface SENSITIVITY "LEVEL_HIGH"

            # data type
            add_bus_datatype $current_bus_interface $ctype
            # }}}
        }

        data {
            # {{{
            if {$dir == "out"} {
                set mode "master"
            } else {
                set mode "slave"
            }
            add_port $core $interface_name $dir $width ""
            set current_bus_interface [add_bus_interface $core $interface_name $type $mode]
            add_port_map $current_bus_interface DATA DATA $interface_name

            # data type
            add_bus_datatype $current_bus_interface $ctype 1
            # }}}
        }
    }
}

## GUI
if {![regexp -nocase {2014\.3.*} $vivado_ver match]} {
    ipgui::add_group -name "group 0" -component [ipx::current_core] -parent [ipgui::get_pagespec -name "Page 0" -component [ipx::current_core] ] -display_name {m axi dev reg (AXI4 Master Interface)}
    set user_parameters_list [ipx::get_user_parameters -of_objects [ ipx::current_core ]]
    foreach {user_param} $user_parameters_list {
        set user_param_name [get_property name $user_param]
        if {[string compare -nocase $user_param_name "Component_Name"]} {
            ipgui::add_param -name $user_param_name -component [ipx::current_core] -parent [ipgui::get_groupspec -name "group 0" -component [ipx::current_core] ]
        }
    }
}
ipx::create_xgui_files -logo_file misc/logo.png $core

## System Info
set user_parameters_list {clk_period 10 machine 64 combinational 0 latency undef II x}
foreach {user_para value} $user_parameters_list {
    incr user_parameter_order
    set user_para_value [ipx::add_user_parameter $user_para $core]
    set_property value $value $user_para_value
    set_property value_resolve_type "immediate" $user_para_value
    set_property order $user_parameter_order $user_para_value
}


ipx::update_checksums $core
ipx::save_core $core

## Generate zip
set ZipFile [string map {. _} ${Vendor}_${Library}_${IPName}_${Version}].zip
ipx::archive_core [file join [pwd] $ZipFile] $core

## Generate XO file if kernel.xml file is dumped
if {$enable_xo_gen && $kernel_xo ne ""} {
    if {[file isfile $kernel_xml]} {
        set ip_unzip_dir [file join [pwd] ip_unzip_dir]
        catch {exec unzip -d $ip_unzip_dir $ZipFile}
        set design_xml [file join $solution_dir .autopilot db ${TopNoPrefix}.design.xml]
        if { [file exists $kernel_xo] } {
            file delete -force $kernel_xo
        }
        if { ![file exists [file dir $kernel_xo]] } {
            file mkdir [file dir $kernel_xo]
        }
        set pack_xo_args [list -xo_path $kernel_xo -kernel_name $xo_kernel_name -kernel_xml $kernel_xml]
        if {[llength $xo_kernel_files]} {
            lappend pack_xo_args -kernel_files $xo_kernel_files
        }
        if {[file isdirectory $ip_unzip_dir]} {
            lappend pack_xo_args -ip_directory $ip_unzip_dir
        } else {
            lappend pack_xo_args -ip_directory [pwd]
        }
        if {[file isfile $design_xml]} {
            lappend pack_xo_args -design_xml $design_xml
        } else { puts "No design.xml file found: $design_xml"
        }
        if {[file isdirectory $debug_dir] && [llength [glob -nocomplain $debug_dir/*]]} {
            lappend pack_xo_args -debug_directory $debug_dir
        }
        if {[file isdirectory $xo_hls_files_dir] && [regsub {(\.[0-9][0-9]*)\.[0-9].*$} [::version -short] {\1}] > 2018.2} {
            lappend pack_xo_args -hls_directory $xo_hls_files_dir
        }
        puts "Running package_xo $pack_xo_args"
        package_xo {*}$pack_xo_args
        if {[file isdirectory $ip_unzip_dir]} {
            file delete -force $ip_unzip_dir
        }
    } else { 
        puts "Not running package_xo, missing kernel.xml: $kernel_xml"
    }
}


# Generate sysgen xml file
source -notrace "C:/Xilinx/Vitis_HLS/2021.2/common/scripts/ipxhls.tcl"
set json_file [file join $solution_dir [file tail $solution_dir]_data.json]
set outdir .
catch { ::ipx::utils::hls::write_sysgen_info_xml $json_file $outdir}
::ipx::utils::hls::write_auxiliary_xml $json_file $outdir
